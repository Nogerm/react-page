{"version":3,"sources":["Components/App/logo.svg","Components/App/style.js","Components/MongoDB.js","Components/Item/style.js","Components/Item/Item.js","Components/ItemList/ItemList.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LogoMove","keyframes","_templateObject","Container","styled","div","_templateObject2","LeftColumn","_templateObject3","RightColumn","_templateObject4","ContentText","_templateObject5","LogoImage","img","_templateObject6","API_KEY","style_templateObject","style_templateObject2","MidColumn","style_templateObject3","style_templateObject4","EditColumn","style_templateObject5","Item","react_default","a","createElement","style_Container","style_LeftColumn","this","props","name","month","style_RightColumn","day","Component","ItemList","people","data","map","person","index","Item_Item","key","firstname","birth_month","birth_day","App","state","birthdayPerson","_this2","Promise","resolve","reject","axios","get","BASE_URL","params","apiKey","then","response","console","log","catch","error","JSON","stringify","setState","Object","toConsumableArray","src","logo","ItemList_ItemList","Boolean","window","location","hostname","match","ReactDOM","render","Components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8nCCExC,IAAMC,EAAWC,YAAHC,KAUDC,EAAYC,IAAOC,IAAVC,KAQTC,EAAaH,IAAOC,IAAVG,KAQVC,EAAcL,IAAOC,IAAVK,KAOXC,EAAcP,IAAOL,EAAVa,KAIXC,EAAYT,IAAOU,IAAVC,IAGRf,oBCtCRgB,EAAU,qrBCFT,IAAMb,EAAYC,IAAOC,IAAVY,KAUTV,EAAaH,IAAOC,IAAVa,KAKVC,EAAYf,IAAOC,IAAVe,KAKTX,EAAcL,IAAOC,IAAVgB,KAKXC,EAAalB,IAAOC,IAAVkB,KCxBFC,mLAEjB,OACAC,EAAAC,EAAAC,cAACC,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAD,KAAaC,KAAKC,MAAMC,MACxBP,EAAAC,EAAAC,cAACR,EAAD,KAAYW,KAAKC,MAAME,OACvBR,EAAAC,EAAAC,cAACO,EAAD,KAAcJ,KAAKC,MAAMI,KACzBV,EAAAC,EAAAC,cAACL,EAAD,cAP4Bc,aCAbC,mLAGjB,IAAMC,EAASR,KAAKC,MAAMQ,KAC1B,OACEd,EAAAC,EAAAC,cAAA,WACKW,EAAOE,IAAI,SAASC,EAAQC,GAC3B,OAAOjB,EAAAC,EAAAC,cAACgB,EAAD,CAAMC,IAAKF,EAAOV,KAAMS,EAAOI,UAAWZ,MAAOQ,EAAOK,YAAaX,IAAKM,EAAOM,sBAP9DX,aCsCvBY,6MAjCbC,MAAQ,CACNC,eAAgB,uFAGE,IAAAC,EAAArB,KJId,IAAIsB,QAAQ,SAACC,EAASC,GAC5BC,IAAMC,IALoBC,mFAKK,CAC7BC,OAAQ,CACPC,OAAQ3C,KAGT4C,KAAK,SAAUC,GACfC,QAAQC,IAAI,sBAAwBF,GACpCR,EAAQQ,EAAStB,QAEjByB,MAAM,SAAUC,GAChBH,QAAQC,IAAI,sBAAwBE,GACpCX,EAAOW,OIfaL,KAAK,SAAArB,GACvBuB,QAAQC,IAAI,sBAAwBG,KAAKC,UAAU5B,IACnDY,EAAKiB,SAAS,CACZlB,eAAemB,OAAAC,EAAA,EAAAD,CAAK9B,OJkBpB,IAAIa,QAAQ,SAACC,EAASC,GAC5BC,IAAMC,IAtBoBC,mFAsBK,CAC7BC,OAAQ,CACPC,OAAQ3C,KAGT4C,KAAK,SAAUC,GACfC,QAAQC,IAAI,sBAAwBF,GACpCR,EAAQQ,EAAStB,QAEjByB,MAAM,SAAUC,GAChBH,QAAQC,IAAI,sBAAwBE,GACpCX,EAAOW,OI1BaL,KAAK,SAAArB,GACvBuB,QAAQC,IAAI,sBAAwBG,KAAKC,UAAU5B,uCAKrD,OACEd,EAAAC,EAAAC,cAACxB,EAAD,KACEsB,EAAAC,EAAAC,cAACpB,EAAD,KACEkB,EAAAC,EAAAC,cAACd,EAAD,CAAW0D,IAAKC,MACd/C,EAAAC,EAAAC,cAAChB,EAAD,aAAkBc,EAAAC,EAAAC,cAAA,0BAAlB,wBACAF,EAAAC,EAAAC,cAAChB,EAAD,4BAEJc,EAAAC,EAAAC,cAAClB,EAAD,KACEgB,EAAAC,EAAAC,cAAC8C,EAAD,CAAUlC,KAAMT,KAAKmB,MAAMC,0BA5BnBd,aCMEsC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOvD,EAAAC,EAAAC,cAACsD,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1B,KAAK,SAAA2B,GACjCA,EAAaC","file":"static/js/main.a6a5fe1a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import styled, { keyframes } from 'styled-components';\n\nconst LogoMove = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const Container = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  justify-content: center;\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const LeftColumn = styled.div`\n\tflex: 2;\n\tjustify-content: center;\n\tbackground: #282c34;\n\tdisplay: flex;\n  flex-direction: column;\n`;\n\nexport const RightColumn = styled.div`\n\tflex: 5;\n\tjustify-content: center;\n\tdisplay: flex;\n  flex-direction: column;\n`;\n\nexport const ContentText = styled.p`\n\tcolor: white;\n`;\n\nexport const LogoImage = styled.img`\n\theight: 75px;\n\twidth: 75px;\n\tanimation: ${LogoMove} 20s infinite;\n`;","import axios from 'axios';\n\n//Mongo DB\nconst BASE_URL = 'https://api.mlab.com/api/1/';\nconst API_KEY = '6ibiq_TR4zPfOIaRWNvlknaHWYDpyGLQ';\nconst dbName = 'heroku_0tvjhrct';\n\n//Collections\nconst BIRTHDAY_PERSON = 'birthday_person';\nconst BIRTHDAY_PRAYER = 'birthday_prayer';\n\n//Query URLs\nconst BIRTHDAY_PERSON_URL = BASE_URL + 'databases/' + dbName + '/collections/' + BIRTHDAY_PERSON;\nconst BIRTHDAY_PRAYER_URL = BASE_URL + 'databases/' + dbName + '/collections/' + BIRTHDAY_PRAYER;\n\nexport const getBirthdayPerson = function() {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.get(BIRTHDAY_PERSON_URL, {\n\t\t\t\tparams: {\n\t\t\t\t\tapiKey: API_KEY\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[getBirthdayPerson]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[getBirthdayPerson]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\nexport const getBirthdayPrayer = function() {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.get(BIRTHDAY_PRAYER_URL, {\n\t\t\t\tparams: {\n\t\t\t\t\tapiKey: API_KEY\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[getBirthdayPerson]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[getBirthdayPerson]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 50px;\n  justify-content: center;\n  display: flex;\n  flex-direction: row;\n  margin: 3px;\n  background: #f5f5f5;\n`;\n\nexport const LeftColumn = styled.div`\n  flex: 1;\n  justify-content: center;\n`;\n\nexport const MidColumn = styled.div`\n  flex: 1;\n  justify-content: center;\n`;\n\nexport const RightColumn = styled.div`\n  flex: 1;\n  justify-content: center;\n`;\n\nexport const EditColumn = styled.div`\n  flex: 1;\n  justify-content: center;\n`;","import React, { Component}  from 'react';\nimport { Container, LeftColumn, MidColumn, RightColumn, EditColumn } from './style';\n\nexport default class Item extends Component {\n  render() {\n    return (\n    <Container>\n      <LeftColumn>{this.props.name}</LeftColumn>\n      <MidColumn>{this.props.month}</MidColumn>\n      <RightColumn>{this.props.day}</RightColumn>\n      <EditColumn></EditColumn>\n    </Container>\n    );\n  }\n}","import React, { Component}  from 'react';\nimport Item from './../Item/Item';\n\nexport default class ItemList extends Component {\n\n  render() {\n    const people = this.props.data;\n    return (\n      <div>\n          {people.map(function(person, index){\n            return <Item key={index} name={person.firstname} month={person.birth_month} day={person.birth_day}/>;\n          })}\n      </div>\n    );\n  }\n\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { Container, LeftColumn, RightColumn, LogoImage, ContentText } from './style';\nimport { getBirthdayPerson, getBirthdayPrayer } from '../MongoDB';\nimport ItemList from '../ItemList/ItemList';\n\nclass App extends Component {\n\n  state = {\n    birthdayPerson: [],\n  }\n\n  componentDidMount() {\n    getBirthdayPerson().then(data => {\n      console.log(\"[componentDidMount]\" + JSON.stringify(data));\n      this.setState({\n        birthdayPerson: [...data]\n      });\n    });\n\n    getBirthdayPrayer().then(data => {\n      console.log(\"[componentDidMount]\" + JSON.stringify(data));\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n        <LeftColumn>\n          <LogoImage src={logo}/>\n            <ContentText>Edit <code>src/App.js</code> and save to reload.</ContentText>\n            <ContentText>Query Mongodb Data</ContentText>\n        </LeftColumn>\n        <RightColumn>\n          <ItemList data={this.state.birthdayPerson}/>\n        </RightColumn>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}