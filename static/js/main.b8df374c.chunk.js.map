{"version":3,"sources":["Components/App/logo.svg","Components/App/style.js","Components/MongoDB.js","Components/BirthdayUser/UserModal.js","Components/BirthdayUser/BirthdayUser.js","Components/BirthdayPrayer/PrayerModal.js","Components/BirthdayPrayer/BirthdayPrayer.js","Components/Birthday.js","Components/RoutineRule/RoutineModal.js","Components/RoutineRule/RoutineRule.js","Components/RoutineReminder/ReminderModal.js","Components/RoutineReminder/RoutineReminder.js","Components/Routine.js","Components/MondayBless/BlessModal.js","Components/MondayBless/MondayBless.js","Components/AutoReply/AutoReplyModal.js","Components/AutoReply/AutoReply.js","Components/Setting.js","Components/FakePage.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LogoMove","keyframes","_templateObject","LogoImage","styled","img","_templateObject2","BASE_URL","API_KEY","dbName","BIRTHDAY_PERSON_URL","BIRTHDAY_PRAYER_URL","ROUTINE_PERSON_URL","ROUTINE_REMIND_URL","MONDAY_BLESS_URL","AUTO_RESPONSE_URL","SETTING_URL","getBirthdayPerson","Promise","resolve","reject","axios","get","params","apiKey","then","response","console","log","data","catch","error","addBirthdayPerson","newData","post","_id","id","name","birth_month","birth_day","updateBirthdayPerson","put","removeBirthdayPerson","personId","delete","getBirthdayPrayer","addBirthdayPrayer","msgs","Object","toConsumableArray","updateBirthdayPrayer","removeBirthdayPrayer","prayerId","getRoutineRule","addRoutineRule","month","routines","updateRoutineRule","removeRoutineRule","reminderId","getRoutineReminder","addRoutineReminder","updateRoutineReminder","removeRoutineReminder","getMondayBless","addMondayBless","updateMondayBless","removeMondayBless","mondayBlessId","getAutoReply","addAutoReply","key_words","response_msgs","updateAutoReply","removeAutoReply","autoReplyId","getSetting","updateSetting","remind_birthday","remind_routine","auto_reply","monday_bless","uuidv4","require","UserModal","state","type","_this","props","person","modalUserAddShow","modalUserRemoveShow","modalUserUpdateShow","inputName","inputBirthMonth","inputBirthDay","modalUserAddOpen","setState","modalUserAddClose","callback","modalUserAddSubmit","modalUserRemoveOpen","modalUserRemoveClose","modalUserRemoveSubmit","modalUserUpdateOpen","modalUserUpdateClose","modalUserUpdateSubmit","_this2","this","modalType","personInfo","react_default","a","createElement","Modal","open","trigger","Button","floated","icon","labelPosition","primary","size","onClick","Icon","Header","Content","Description","Form","Field","Input","label","placeholder","onChange","e","target","value","Actions","style","padding","color","disabled","inputFirstname","toString","Component","BirthdayUser","birthdayPeople","queryData","JSON","stringify","delayQuery","setTimeout","people","Segment","raised","Divider","horizontal","as","Table","celled","Row","HeaderCell","width","Body","map","key","Cell","UserModal_UserModal","Footer","fullWidth","colSpan","PrayerModal","prayerMsgs","prayerMsg","modalPrayerAddGroupShow","modalPrayerAddMsgShow","modalPrayerRemoveGroupShow","modalPrayerRemoveMsgShow","modalPrayerUpdateShow","inputMsgType","inputMsgContent","inputPkgId","inputStkrId","modalPrayerAddGroupOpen","modalPrayerAddGroupClose","modalPrayerAddGroupSubmit","modalPrayerAddMsgOpen","msgGroup","find","group","modalPrayerAddMsgClose","modalPrayerAddMsgSubmit","isText","text","pkgId","stkrId","push","modalPrayerRemoveGroupOpen","modalPrayerRemoveGroupClose","modalPrayerRemoveGroupSubmit","modalPrayerRemoveMsgOpen","modalPrayerRemoveMsgClose","modalPrayerRemoveMsgSubmit","updateIdx","findIndex","item","splice","modalPrayerUpdateOpen","modalPrayerUpdateClose","modalPrayerUpdateSubmit","radioChange","_ref","href","rel","Group","inline","Radio","checked","TextArea","widths","fluid","BirthdayPrayer","birthdayPrayers","prayers","prayer","index","PrayerModal_PrayerModal","msg","idx","Container","height","Birthday","BirthdayUser_BirthdayUser","BirthdayPrayer_BirthdayPrayer","RoutineModal","rule","modalRuleAddShow","modalRuleRemoveShow","modalRuleUpdateShow","inputRuleType","inputWeekday1","inputWeekday2","inputWeekday3","inputWeekday4","inputWeekday5","inputWeekday6","modalRuleAddOpen","modalRuleAddClose","modalRuleAddSubmit","week_day","modalRuleRemoveOpen","modalRuleRemoveClose","modalRuleRemoveSubmit","modalRuleUpdateOpen","ruleGroup","modalRuleUpdateClose","modalRuleUpdateSubmit","ruleInfo","RoutineRule","routineRules","rules","RoutineModal_RoutineModal","ReminderModal","reminderMsgs","reminderMsg","msgId","modalReminderAddGroupShow","modalReminderAddMsgShow","modalReminderRemoveGroupShow","modalReminderRemoveMsgShow","modalReminderUpdateShow","modalReminderAddGroupOpen","modalReminderAddGroupClose","modalReminderAddGroupSubmit","modalReminderAddMsgOpen","modalReminderAddMsgClose","modalReminderAddMsgSubmit","modalReminderRemoveGroupOpen","modalReminderRemoveGroupClose","modalReminderRemoveGroupSubmit","modalReminderRemoveMsgOpen","modalReminderRemoveMsgClose","modalReminderRemoveMsgSubmit","modalReminderUpdateOpen","modalReminderUpdateClose","modalReminderUpdateSubmit","RoutineReminder","routineReminders","reminders","reminder","ReminderModal_ReminderModal","Routine","RoutineRule_RoutineRule","RoutineReminder_RoutineReminder","BlessModal","blessId","blessMsgs","blessMsg","modalBlessAddGroupShow","modalBlessAddMsgShow","modalBlessRemoveGroupShow","modalBlessRemoveMsgShow","modalBlessUpdateShow","modalBlessAddGroupOpen","modalBlessAddGroupClose","modalBlessAddGroupSubmit","modalBlessAddMsgOpen","modalBlessAddMsgClose","modalBlessAddMsgSubmit","modalBlessRemoveGroupOpen","modalBlessRemoveGroupClose","modalBlessRemoveGroupSubmit","modalBlessRemoveMsgOpen","modalBlessRemoveMsgClose","modalBlessRemoveMsgSubmit","modalBlessUpdateOpen","modalBlessUpdateClose","modalBlessUpdateSubmit","MondayBless","mondayBlesses","blesses","margin","bless","BlessModal_BlessModal","AutoReplyModal","autoReplyKeywords","autoReplyMessages","autoReplyKeyword","autoReplyMessage","modalAutoReplyAddGroupShow","modalAutoReplyAddMsgShow","modalAutoReplyAddKeywordShow","modalAutoReplyRemoveGroupShow","modalAutoReplyRemoveKeywordShow","modalAutoReplyRemoveMsgShow","modalAutoReplyUpdateShow","inputKeyword","modalAutoReplyAddGroupOpen","modalAutoReplyAddGroupClose","modalAutoReplyAddGroupSubmit","modalAutoReplyAddMsgOpen","modalAutoReplyAddMsgClose","modalAutoReplyAddMsgSubmit","newMsg","modalAutoReplyAddKeywordOpen","modalAutoReplyAddKeywordClose","modalAutoReplyAddKeywordSubmit","keywords","newKeyword","modalAutoReplyRemoveGroupOpen","modalAutoReplyRemoveGroupClose","modalAutoReplyRemoveGroupSubmit","autoReply","modalAutoReplyRemoveMsgOpen","modalAutoReplyRemoveMsgClose","modalAutoReplyRemoveMsgSubmit","modalAutoReplyRemoveKeywordOpen","modalAutoReplyRemoveKeywordClose","modalAutoReplyRemoveKeywordSubmit","AutoReply","autoReplys","AutoReplyModal_AutoReplyModal","keyword","Setting","toggleBirthday","update","toggleRoutine","toggleReply","toggleBless","_this$state","paddingLeft","paddingRight","Grid","columns","divided","Checkbox","toggle","account","password","wrongPassword","handleFakeClick","renderLabel","Label","basic","marginBottom","handleClick","display","position","right","background","App","clickCount","activeItem","handleHiddenBtnClick","handleItemClick","_ref2","renderMenu","src","logo","Menu","vertical","tabular","marginTop","Item","active","renderChild","Birthday_Birthday","Routine_Routine","AutoReply_AutoReply","MondayBless_MondayBless","Setting_Setting","renderDashboard","Column","stretched","FakePage_Setting","Boolean","window","location","hostname","match","ReactDOM","render","Components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b8df374c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import styled, { keyframes } from 'styled-components';\n\nconst LogoMove = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const LogoImage = styled.img`\n\theight: 75px;\n\twidth: 75px;\n\tanimation: ${LogoMove} 20s infinite;\n`;","import axios from 'axios';\n\n//Mongo DB\nconst BASE_URL = 'https://api.mlab.com/api/1/';\nconst API_KEY = 'MfIcJH19fIUm4phoxgzDLfAPsP0q8TSd';\nconst dbName = 'heroku_hq9fqmdz';\n\n//Collections\nconst BIRTHDAY_PERSON = 'birthday_person';\nconst BIRTHDAY_PRAYER = 'birthday_prayer';\nconst ROUTINE_PERSON = 'routine_person';\nconst ROUTINE_REMIND = 'routine_remind';\nconst MONDAY_BLESS = 'monday_bless';\nconst AUTO_RESPONSE = 'auto_response';\nconst SETTING = 'setting';\n\n//Query URLs\nconst BIRTHDAY_PERSON_URL = BASE_URL + 'databases/' + dbName + '/collections/' + BIRTHDAY_PERSON;\nconst BIRTHDAY_PRAYER_URL = BASE_URL + 'databases/' + dbName + '/collections/' + BIRTHDAY_PRAYER;\nconst ROUTINE_PERSON_URL = BASE_URL + 'databases/' + dbName + '/collections/' + ROUTINE_PERSON;\nconst ROUTINE_REMIND_URL = BASE_URL + 'databases/' + dbName + '/collections/' + ROUTINE_REMIND;\nconst MONDAY_BLESS_URL = BASE_URL + 'databases/' + dbName + '/collections/' + MONDAY_BLESS;\nconst AUTO_RESPONSE_URL = BASE_URL + 'databases/' + dbName + '/collections/' + AUTO_RESPONSE;\nconst SETTING_URL = BASE_URL + 'databases/' + dbName + '/collections/' + SETTING;\n\n\n//------------------\n//Birthday person\n//------------------\nexport const getBirthdayPerson = function() {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.get(BIRTHDAY_PERSON_URL, {\n\t\t\t\tparams: {\n\t\t\t\t\tapiKey: API_KEY\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[getBirthdayPerson]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[getBirthdayPerson]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\nexport const addBirthdayPerson = function(newData) {\n\t  return new Promise((resolve, reject) => {\n\t\t  axios.post(BIRTHDAY_PERSON_URL + '?apiKey=' + API_KEY, {\n      _id: newData.id,\n\t\t  name: newData.name,\n\t\t  birth_month: newData.birth_month,\n\t\t  birth_day: newData.birth_day\n\t\t})\n\t\t.then(function (response) {\n\t\t\tconsole.log(\"[addBirthdayPerson]\" + response);\n\t\t\tresolve(response.data);\n\t\t})\n\t\t.catch(function (error) {\n\t\t\tconsole.log(\"[addBirthdayPerson]\" + error);\n\t\t\treject(error);\n\t\t});\n\t})\n}\n\nexport const updateBirthdayPerson = function(newData) {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.put(BIRTHDAY_PERSON_URL + '/' + newData.id + '?apiKey=' + API_KEY, {\n        name: newData.name,\n        birth_month: newData.birth_month,\n        birth_day: newData.birth_day\n\t\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[updateBirthdayPerson]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[updateBirthdayPerson]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\nexport const removeBirthdayPerson = function(personId) {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.delete(BIRTHDAY_PERSON_URL + '/' + personId + '?apiKey=' + API_KEY)\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[removeBirthdayPerson]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[removeBirthdayPerson]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\n//------------------\n//Birthday prayer\n//------------------\nexport const getBirthdayPrayer = function() {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.get(BIRTHDAY_PRAYER_URL, {\n\t\t\t\tparams: {\n\t\t\t\t\tapiKey: API_KEY\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[getBirthdayPrayer]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[getBirthdayPrayer]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\nexport const addBirthdayPrayer = function(newData) {\n  return new Promise((resolve, reject) => {\n      axios.post(BIRTHDAY_PRAYER_URL + '?apiKey=' + API_KEY, {\n      _id: newData.id,\n      msgs: [...newData.msgs]\n    })\n    .then(function (response) {\n      console.log(\"[addBirthdayPrayer]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[addBirthdayPrayer]\" + error);\n      reject(error);\n    });\n  })\n}\n\nexport const updateBirthdayPrayer = function(id, msgs) {\nreturn new Promise((resolve, reject) => {\n  axios.put(BIRTHDAY_PRAYER_URL + '/' + id + '?apiKey=' + API_KEY, {\n      _id: id,\n      msgs: [...msgs]\n    })\n    .then(function (response) {\n      console.log(\"[updateBirthdayPrayer]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[updateBirthdayPrayer]\" + error);\n      reject(error);\n    });\n  })\n}\n\nexport const removeBirthdayPrayer = function(prayerId) {\nreturn new Promise((resolve, reject) => {\n  axios.delete(BIRTHDAY_PRAYER_URL + '/' + prayerId + '?apiKey=' + API_KEY)\n    .then(function (response) {\n      console.log(\"[removeBirthdayPrayer]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[removeBirthdayPrayer]\" + error);\n      reject(error);\n    });\n})\n}\n\n//------------------\n//Routine rule\n//------------------\nexport const getRoutineRule = function() {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.get(ROUTINE_PERSON_URL, {\n\t\t\t\tparams: {\n\t\t\t\t\tapiKey: API_KEY\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[getRoutineRule]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[getRoutineRule]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\nexport const addRoutineRule = function(newData) {\n  return new Promise((resolve, reject) => {\n      axios.post(ROUTINE_PERSON_URL + '?apiKey=' + API_KEY, {\n      _id: newData.id,\n\t\t\tmonth: newData.month,\n\t\t\troutines: newData.routines\n    })\n    .then(function (response) {\n      console.log(\"[addRoutineRule]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[addRoutineRule]\" + error);\n      reject(error);\n    });\n  })\n}\n\nexport const updateRoutineRule = function(newData) {\n\treturn new Promise((resolve, reject) => {\n  \taxios.put(ROUTINE_PERSON_URL + '/' + newData.id + '?apiKey=' + API_KEY, {\n      _id: newData.id,\n\t\t\tmonth: newData.month,\n\t\t\troutines: newData.routines\n    })\n    .then(function (response) {\n      console.log(\"[updateRoutineRule]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[updateRoutineRule]\" + error);\n      reject(error);\n    });\n  })\n}\n\nexport const removeRoutineRule = function(reminderId) {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.delete(ROUTINE_PERSON_URL + '/' + reminderId + '?apiKey=' + API_KEY)\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[removeRoutineRule]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[removeRoutineRule]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\n//------------------\n//Routine reminder\n//------------------\nexport const getRoutineReminder = function() {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.get(ROUTINE_REMIND_URL, {\n\t\t\t\tparams: {\n\t\t\t\t\tapiKey: API_KEY\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[getRoutineReminder]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[getRoutineReminder]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\nexport const addRoutineReminder = function(newData) {\n  return new Promise((resolve, reject) => {\n      axios.post(ROUTINE_REMIND_URL + '?apiKey=' + API_KEY, {\n      _id: newData.id,\n      msgs: [...newData.msgs]\n    })\n    .then(function (response) {\n      console.log(\"[addRoutineReminder]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[addRoutineReminder]\" + error);\n      reject(error);\n    });\n  })\n}\n\nexport const updateRoutineReminder = function(id, msgs) {\n\treturn new Promise((resolve, reject) => {\n  \taxios.put(ROUTINE_REMIND_URL + '/' + id + '?apiKey=' + API_KEY, {\n      _id: id,\n      msgs: [...msgs]\n    })\n    .then(function (response) {\n      console.log(\"[updateRoutineReminder]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[updateRoutineReminder]\" + error);\n      reject(error);\n    });\n  })\n}\n\nexport const removeRoutineReminder = function(reminderId) {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.delete(ROUTINE_REMIND_URL + '/' + reminderId + '?apiKey=' + API_KEY)\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[removeRoutineReminder]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[removeRoutineReminder]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\n//------------------\n//Monday Bless\n//------------------\nexport const getMondayBless = function() {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.get(MONDAY_BLESS_URL, {\n\t\t\t\tparams: {\n\t\t\t\t\tapiKey: API_KEY\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[getMondayBless]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[getMondayBless]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\nexport const addMondayBless = function(newData) {\n  return new Promise((resolve, reject) => {\n      axios.post(MONDAY_BLESS_URL + '?apiKey=' + API_KEY, {\n      _id: newData.id,\n      msgs: [...newData.msgs]\n    })\n    .then(function (response) {\n      console.log(\"[addMondayBless]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[addMondayBless]\" + error);\n      reject(error);\n    });\n  })\n}\n\nexport const updateMondayBless = function(id, msgs) {\n\treturn new Promise((resolve, reject) => {\n  \taxios.put(MONDAY_BLESS_URL + '/' + id + '?apiKey=' + API_KEY, {\n      _id: id,\n      msgs: [...msgs]\n    })\n    .then(function (response) {\n      console.log(\"[updateMondayBless]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[updateMondayBless]\" + error);\n      reject(error);\n    });\n  })\n}\n\nexport const removeMondayBless = function(mondayBlessId) {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.delete(MONDAY_BLESS_URL + '/' + mondayBlessId + '?apiKey=' + API_KEY)\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[removeMondayBless]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[removeMondayBless]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\n//------------------\n//Auto Reply\n//------------------\nexport const getAutoReply = function() {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.get(AUTO_RESPONSE_URL, {\n\t\t\t\tparams: {\n\t\t\t\t\tapiKey: API_KEY\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[getAutoReply]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[getAutoReply]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\nexport const addAutoReply = function(newData) {\n  return new Promise((resolve, reject) => {\n      axios.post(AUTO_RESPONSE_URL + '?apiKey=' + API_KEY, {\n      _id: newData.id,\n\t\t\tkey_words: [...newData.key_words],\n\t\t\tresponse_msgs: [...newData.response_msgs]\n    })\n    .then(function (response) {\n      console.log(\"[addAutoReply]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[addAutoReply]\" + error);\n      reject(error);\n    });\n  })\n}\n\nexport const updateAutoReply = function(newData) {\n\treturn new Promise((resolve, reject) => {\n  \taxios.put(AUTO_RESPONSE_URL + '/' + newData.id + '?apiKey=' + API_KEY, {\n      _id: newData.id,\n      key_words: [...newData.key_words],\n\t\t\tresponse_msgs: [...newData.response_msgs]\n    })\n    .then(function (response) {\n      console.log(\"[updateAutoReply]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[updateAutoReply]\" + error);\n      reject(error);\n    });\n  })\n}\n\nexport const removeAutoReply = function(autoReplyId) {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.delete(AUTO_RESPONSE_URL + '/' + autoReplyId + '?apiKey=' + API_KEY)\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[removeAutoReply]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[removeAutoReply]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\n//------------------\n//Setting\n//------------------\nexport const getSetting = function() {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.get(SETTING_URL, {\n\t\t\t\tparams: {\n\t\t\t\t\tapiKey: API_KEY\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[getSetting]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[getSetting]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\nexport const updateSetting = function(newData) {\n\treturn new Promise((resolve, reject) => {\n  \taxios.put(SETTING_URL + '/' + newData.id + '?apiKey=' + API_KEY, {\n      _id: newData.id,\n      remind_birthday: newData.remind_birthday,\n\t\t\tremind_routine: newData.remind_routine,\n\t\t\tauto_reply: newData.auto_reply,\n\t\t\tmonday_bless: newData.monday_bless\n    })\n    .then(function (response) {\n      console.log(\"[updateSetting]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[updateSetting]\" + error);\n      reject(error);\n    });\n  })\n}\n","import React, { Component } from 'react';\nimport { Button, Icon, Modal, Form, Input } from 'semantic-ui-react'\nimport { addBirthdayPerson, updateBirthdayPerson, removeBirthdayPerson } from '../MongoDB';\nconst uuidv4 = require('uuid/v4');\n\nexport default class UserModal extends Component {\n\n  state = {\n    type: this.props.type,\n    person: this.props.person || '',\n    modalUserAddShow: false,\n    modalUserRemoveShow: false,\n    modalUserUpdateShow: false,\n    inputName: '',\n    inputBirthMonth: '',\n    inputBirthDay: '',\n  }\n  \n  modalUserAddOpen = () => {\n    this.setState({ modalUserAddShow: true });\n  }\n\n  modalUserAddClose = () => {\n    this.setState({ modalUserAddShow: false }, this.props.callback);\n  }\n\n  modalUserAddSubmit = () => {\n    const newData = {\n      id: uuidv4(),\n      name: this.state.inputName,\n      birth_month: this.state.inputBirthMonth,\n      birth_day: this.state.inputBirthDay\n    }\n    addBirthdayPerson(newData);\n    this.modalUserAddClose();\n  }\n\n  modalUserRemoveOpen = () => {\n    this.setState({ modalUserRemoveShow: true });\n  }\n\n  modalUserRemoveClose = () => {\n    this.setState({ modalUserRemoveShow: false }, this.props.callback);\n  }\n\n  modalUserRemoveSubmit = () => {\n    removeBirthdayPerson(this.state.person._id);\n    this.modalUserRemoveClose();\n  }\n\n  modalUserUpdateOpen = () => {\n    this.setState({ modalUserUpdateShow: true });\n  }\n\n  modalUserUpdateClose = () => {\n    this.setState({ modalUserUpdateShow: false }, this.props.callback );\n  }\n\n  modalUserUpdateSubmit = () => {\n    const newData = {\n      id: this.state.person._id,\n      name: (this.state.inputName === '') ? this.state.person.name : this.state.inputName,\n      birth_month: (this.state.inputBirthMonth === '') ? this.state.person.birth_month : this.state.inputBirthMonth,\n      birth_day: (this.state.inputBirthDay === '') ? this.state.person.birth_day : this.state.inputBirthDay\n    }\n    updateBirthdayPerson(newData);\n    this.modalUserUpdateClose();\n  }\n\n  render() {\n    const modalType = this.state.type;\n    const personInfo = this.state.person;\n\n    if(modalType === 'ADD') {\n      return(\n        <Modal open={this.state.modalUserAddShow} trigger={\n          <Button floated='right' icon labelPosition='left' primary size='small' onClick={this.modalUserAddOpen}>\n            <Icon name='user plus' /> 新增生日提醒\n          </Button>\n          }>\n          <Modal.Header>新增生日提醒</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <Form>\n                <Form.Field>\n                  <label>名字</label>\n                  <Input label={{ icon: 'asterisk' }} labelPosition='left corner' placeholder='名字' onChange={e => {this.setState({inputName: e.target.value});}} />\n                </Form.Field>\n                <Form.Field>\n                  <label>月份</label>\n                  <Input label={{ icon: 'asterisk' }} labelPosition='left corner' placeholder='月份' onChange={e => {this.setState({inputBirthMonth: e.target.value});}} />\n                </Form.Field>\n                <Form.Field>\n                  <label>日期</label>\n                  <Input label={{ icon: 'asterisk' }} labelPosition='left corner' placeholder='日期' onChange={e => {this.setState({inputBirthDay: e.target.value});}}/>\n                </Form.Field>\n              </Form>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalUserAddSubmit} disabled={this.state.inputFirstname === '' || this.state.inputBirthMonth === '' || this.state.inputBirthDay === ''}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalUserAddClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'UPDATE') {\n      return(\n        <Modal open={this.state.modalUserUpdateShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='vk' size='small' onClick={this.modalUserUpdateOpen}>\n            <Icon name='pencil alternate' /> 編輯\n          </Button>\n          }>\n          <Modal.Header>編輯生日提醒</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <Form>\n                <Form.Field>\n                  <label>名字</label>\n                  <input placeholder={personInfo.name.toString()} onChange={e => {this.setState({inputName: e.target.value});}} />\n                </Form.Field>\n                <Form.Field>\n                  <label>月份</label>\n                  <input placeholder={personInfo.birth_month.toString()} onChange={e => {this.setState({inputBirthMonth: e.target.value});}}/>\n                </Form.Field>\n                <Form.Field>\n                  <label>日期</label>\n                  <input placeholder={personInfo.birth_day.toString()} onChange={e => {this.setState({inputBirthDay: e.target.value});}} />\n                </Form.Field>\n              </Form>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalUserUpdateSubmit}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalUserUpdateClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n    } else if(modalType === 'REMOVE') {\n      return(\n        <Modal open={this.state.modalUserRemoveShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='google plus' size='small' onClick={this.modalUserRemoveOpen}>\n            <Icon name='trash alternate' /> 移除\n          </Button>\n          }>\n          <Modal.Header>移除生日提醒</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <p>確定要刪除{personInfo.name}的生日?</p>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='google plus' onClick={this.modalUserRemoveSubmit}>\n                <Icon name='checkmark' /> 移除\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalUserRemoveClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else {}\n  }\n}","import React, { Component}  from 'react';\nimport { Icon, Table, Divider, Header, Segment } from 'semantic-ui-react'\nimport { getBirthdayPerson } from '../MongoDB';\nimport UserModal from './UserModal';\n\nexport default class BirthdayUser extends Component {\n\n  state = {\n\t\tbirthdayPeople: []\n  }\n  \n  componentDidMount() {\n    this.queryData();\n  }\n\n  queryData = () => {\n\t\tgetBirthdayPerson().then(data => {\n      console.log(\"[BirthdayUser queryData]\" + JSON.stringify(data));\n      this.setState({\n        birthdayPeople: [...data]\n      });\n    });\n  }\n\n  delayQuery = () => {\n    const queryData = this.queryData;\n    setTimeout(() => {\n      queryData();\n    }, 2000);\n  }\n\n  render() {\n    const people = this.state.birthdayPeople;\n    const delayQuery = this.delayQuery;\n\n    return(\n      <Segment raised>\n        <Divider horizontal>\n          <Header as='h4'>\n            <Icon name='user' />\n              生日提醒列表\n          </Header>\n        </Divider>\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>名字</Table.HeaderCell>\n              <Table.HeaderCell>月份</Table.HeaderCell>\n              <Table.HeaderCell>日期</Table.HeaderCell>\n              <Table.HeaderCell style={{ width: '250px' }}>操作</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {people.map(function(person){\n              return (\n                <Table.Row key={person._id} >\n                  <Table.Cell>{person.name}</Table.Cell>\n                  <Table.Cell>{person.birth_month}</Table.Cell>\n                  <Table.Cell>{person.birth_day}</Table.Cell>\n                  <Table.Cell>\n                    <UserModal type='REMOVE' person={person} callback={delayQuery}/>\n                    <UserModal type='UPDATE' person={person} callback={delayQuery}/>\n                  </Table.Cell>\n                </Table.Row>\n              );\n            })}\n          </Table.Body>\n\n          <Table.Footer fullWidth>\n            <Table.Row>\n              <Table.HeaderCell colSpan='4'>\n                <UserModal type='ADD' callback={delayQuery}/>\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Footer>\n        </Table>\n      </Segment>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Icon, Modal, Form } from 'semantic-ui-react'\nimport { getBirthdayPrayer, addBirthdayPrayer, updateBirthdayPrayer, removeBirthdayPrayer } from '../MongoDB';\nconst uuidv4 = require('uuid/v4');\n\nexport default class PrayerModal extends Component {\n\n  state = {\n    type: this.props.type,\n    prayerId: this.props.prayerId || '',\n    prayerMsgs: [],\n    prayerMsg: this.props.prayerMsg || '',\n    modalPrayerAddGroupShow: false,\n    modalPrayerAddMsgShow: false,\n    modalPrayerRemoveGroupShow: false,\n    modalPrayerRemoveMsgShow: false,\n    modalPrayerUpdateShow: false,\n    inputMsgType: '',\n    inputMsgContent: '',\n    inputPkgId: '',\n    inputStkrId: '',\n  }\n  \n  modalPrayerAddGroupOpen = () => {\n    this.setState({ modalPrayerAddGroupShow: true });\n  }\n\n  modalPrayerAddGroupClose = () => {\n    this.setState({ modalPrayerAddGroupShow: false }, this.props.callback );\n  }\n\n  modalPrayerAddGroupSubmit = () => {\n    const newData = {\n      id: uuidv4(),\n      msgs: []\n    }\n    addBirthdayPrayer(newData);\n    this.modalPrayerAddGroupClose();\n  }\n\n  modalPrayerAddMsgOpen = () => {\n    this.setState({\n      modalPrayerAddMsgShow: true,\n    }, () => {\n      getBirthdayPrayer().then(data => {\n        const msgGroup = data.find(group => group._id === this.state.prayerId);\n        this.setState({\n          prayerMsgs: [...msgGroup.msgs]\n        });\n      });\n    });\n  }\n\n  modalPrayerAddMsgClose = () => {\n    this.setState({ modalPrayerAddMsgShow: false }, this.props.callback );\n  }\n\n  modalPrayerAddMsgSubmit = () => {\n    let msgs = [...this.state.prayerMsgs];\n    let newData = '';\n    const isText = (this.state.inputMsgType === 'text') ? true : false;\n\n    if(isText) {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        text: this.state.inputMsgContent\n      }\n    } else {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        pkgId: this.state.inputPkgId,\n        stkrId: this.state.inputStkrId\n      }\n    }\n\n    msgs.push(newData);\n    updateBirthdayPrayer(this.state.prayerId, msgs)\n    .then(() => {\n      this.setState({\n        prayerMsgs: msgs\n      }, () => {\n        console.log(\"NEW STATE: \"+JSON.stringify(this.state.prayerMsgs));\n        this.modalPrayerAddMsgClose();\n      });\n    });\n  }\n\n  modalPrayerRemoveGroupOpen = () => {\n    this.setState({ modalPrayerRemoveGroupShow: true });\n  }\n\n  modalPrayerRemoveGroupClose = () => {\n    this.setState({ modalPrayerRemoveGroupShow: false }, this.props.callback );\n  }\n\n  modalPrayerRemoveGroupSubmit = () => {\n    removeBirthdayPrayer(this.state.prayerId);\n    this.modalPrayerRemoveGroupClose();\n  }\n\n  modalPrayerRemoveMsgOpen = () => {\n    this.setState({\n      modalPrayerRemoveMsgShow: true\n    }, () => {\n      getBirthdayPrayer().then(data => {\n        console.log(\"[PrayerModal queryData]\" + JSON.stringify(data));\n        const msgGroup = data.find(group => group._id === this.state.prayerId);\n        this.setState({\n          prayerMsgs: [...msgGroup.msgs],\n        });\n      });\n    });\n  }\n\n  modalPrayerRemoveMsgClose = () => {\n    this.setState({ modalPrayerRemoveMsgShow: false }, this.props.callback );\n  }\n\n  modalPrayerRemoveMsgSubmit = () => {\n    let msgs = [...this.state.prayerMsgs];\n    const updateIdx = msgs.findIndex(item => item.id === this.state.prayerMsg.id);\n    msgs.splice(updateIdx, 1);\n    updateBirthdayPrayer(this.state.prayerId, msgs)\n    .then(() => {\n      this.setState({\n        prayerMsgs: msgs\n      }, () => {\n        console.log(\"NEW STATE: \"+JSON.stringify(this.state.prayerMsgs));\n        this.modalPrayerRemoveMsgClose();\n      });\n    });\n  }\n\n  modalPrayerUpdateOpen = () => {\n    this.setState({\n      modalPrayerUpdateShow: true\n    }, () => {\n      getBirthdayPrayer().then(data => {\n        console.log(\"[PrayerModal queryData]\" + JSON.stringify(data));\n        const msgGroup = data.find(group => group._id === this.state.prayerId);\n        this.setState({\n          prayerMsgs: [...msgGroup.msgs],\n        });\n      });\n    });\n  }\n\n  modalPrayerUpdateClose = () => {\n    this.setState({ modalPrayerUpdateShow: false }, this.props.callback );\n  }\n\n  modalPrayerUpdateSubmit = () => {\n    let msgs = [...this.state.prayerMsgs];\n    let newData = '';\n    const isText = (this.state.inputMsgType === 'text') ? true : false;\n\n    if(isText) {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        text: this.state.inputMsgContent\n      }\n    } else {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        pkgId: this.state.inputPkgId,\n        stkrId: this.state.inputStkrId\n      }\n    }\n\n    const updateIdx = msgs.findIndex(item => item.id === this.state.prayerMsg.id);\n    msgs.splice(updateIdx, 1, newData);\n    updateBirthdayPrayer(this.state.prayerId, msgs)\n    .then(() => {\n      this.setState({\n        prayerMsgs: msgs\n      }, () => {\n        console.log(\"NEW STATE: \"+JSON.stringify(this.state.prayerMsgs));\n        this.modalPrayerUpdateClose();\n      });\n    });\n  }\n\n  radioChange = (e, { value }) => {\n    this.setState({ inputMsgType: value })\n  }\n\n  render() {\n    const modalType = this.state.type;\n    const prayerMsg = this.state.prayerMsg;\n    const radioChange = this.radioChange;\n\n    if(modalType === 'ADD_GROUP') {\n      return(\n        <Modal open={this.state.modalPrayerAddGroupShow} trigger={\n          <Button floated='right' icon labelPosition='left' primary size='small' onClick={this.modalPrayerAddGroupOpen}>\n            <Icon name='plus' /> 新增訊息群組\n          </Button>\n          }>\n          <Modal.Header>新增訊息群組</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              \n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalPrayerAddGroupSubmit} disabled={this.state.inputFirstname === '' || this.state.inputBirthMonth === '' || this.state.inputBirthDay === ''}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalPrayerAddGroupClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'ADD_MSG') {\n      return(\n        <Modal open={this.state.modalPrayerAddMsgShow} trigger={\n          <Button floated='right' icon labelPosition='left' primary size='small' onClick={this.modalPrayerAddMsgOpen}>\n            <Icon name='plus' /> 新增訊息\n          </Button>\n          }>\n          <Modal.Header>新增訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <a href=\"https://devdocs.line.me/files/sticker_list.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">可以使用的貼圖清單</a>\n              <Form>\n                <Form.Group inline>\n                  <label>訊息類型</label>\n                  <Form.Radio\n                    label='文字'\n                    value='text'\n                    checked={this.state.inputMsgType === 'text'}\n                    onChange={radioChange}\n                  />\n                  <Form.Radio\n                    label='貼圖'\n                    value='sticker'\n                    checked={this.state.inputMsgType === 'sticker'}\n                    onChange={radioChange}\n                  />\n                </Form.Group>\n                <Form.TextArea label='文字訊息' placeholder='訊息內容' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'sticker'} onChange={e => {this.setState({inputMsgContent: e.target.value});}}/>\n                <Form.Group widths='equal'>\n                  <Form.Input fluid label='STKID' placeholder='STKID' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'text'} onChange={e => {this.setState({inputStkrId: e.target.value});}}/>\n                  <Form.Input fluid label='STKPKGID' placeholder='STKPKGID' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'text'} onChange={e => {this.setState({inputPkgId: e.target.value});}}/>\n                </Form.Group>\n              </Form>              \n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalPrayerAddMsgSubmit} disabled={this.state.inputMsgType === '' || (this.state.inputMsgType === 'text' && this.state.inputMsgContent === '') || (this.state.inputMsgType === 'sticker' && (this.state.inputPkgId === '' || this.state.inputStkrId === ''))}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalPrayerAddMsgClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'UPDATE') {\n      return(\n        <Modal open={this.state.modalPrayerUpdateShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='vk' size='small' onClick={this.modalPrayerUpdateOpen}>\n            <Icon name='pencil alternate' /> 編輯\n          </Button>\n          }>\n          <Modal.Header>編輯訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <a href=\"https://devdocs.line.me/files/sticker_list.pdf\">可以使用的貼圖清單</a>\n              <Form>\n                <Form.Group inline>\n                  <label>訊息類型</label>\n                  <Form.Radio\n                    label='文字'\n                    value='text'\n                    checked={prayerMsg.isText === true}\n                    disabled={prayerMsg.isText === false}\n                  />\n                  <Form.Radio\n                    label='貼圖'\n                    value='sticker'\n                    checked={prayerMsg.isText === false}\n                    disabled={prayerMsg.isText === true}\n                  />\n                </Form.Group>\n                <Form.TextArea label='文字訊息' placeholder={prayerMsg.text} disabled={prayerMsg.isText === false} onChange={e => {this.setState({inputMsgType: 'text', inputMsgContent: e.target.value});}}/>\n                <Form.Group widths='equal'>\n                  <Form.Input fluid label='STKID' placeholder={prayerMsg.stkrId} disabled={prayerMsg.isText === true} onChange={e => {this.setState({inputMsgType: 'sticker', inputStkrId: e.target.value});}}/>\n                  <Form.Input fluid label='STKPKGID' placeholder={prayerMsg.pkgId} disabled={prayerMsg.isText === true} onChange={e => {this.setState({inputMsgType: 'sticker', inputPkgId: e.target.value});}}/>\n                </Form.Group>\n              </Form>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalPrayerUpdateSubmit}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalPrayerUpdateClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n    } else if(modalType === 'REMOVE_GROUP') {\n      return(\n        <Modal open={this.state.modalPrayerRemoveGroupShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='google plus' size='small' onClick={this.modalPrayerRemoveGroupOpen}>\n            <Icon name='trash alternate' /> 移除群組\n          </Button>\n          }>\n          <Modal.Header>移除群組</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <p>確定要刪除這個群組?</p>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='google plus' onClick={this.modalPrayerRemoveGroupSubmit}>\n                <Icon name='checkmark' /> 移除\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalPrayerRemoveGroupClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'REMOVE_MSG') {\n      return(\n        <Modal open={this.state.modalPrayerRemoveMsgShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='google plus' size='small' onClick={this.modalPrayerRemoveMsgOpen}>\n            <Icon name='trash alternate' /> 移除\n          </Button>\n          }>\n          <Modal.Header>移除訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <p>確定要刪除這則訊息?</p>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='google plus' onClick={this.modalPrayerRemoveMsgSubmit}>\n                <Icon name='checkmark' /> 移除\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalPrayerRemoveMsgClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else {}\n  }\n}","import React, { Component}  from 'react';\nimport { Container, Icon, Table, Divider, Header, Segment } from 'semantic-ui-react'\nimport { getBirthdayPrayer } from '../MongoDB';\nimport PrayerModal from './PrayerModal';\n\nexport default class BirthdayPrayer extends Component {\n\n  state = {\n\t\tbirthdayPrayers: []\n  }\n  \n  componentDidMount() {\n    this.queryData();\n  }\n\n  queryData = () => {\n\t\tgetBirthdayPrayer().then(data => {\n\t\t\tconsole.log(\"[BirthdayPrayer queryData]\" + JSON.stringify(data));\n\t\t\tthis.setState({\n        birthdayPrayers: [...data]\n      });\n    });\n\t}\n\t\n\tdelayQuery = () => {\n    const queryData = this.queryData;\n    setTimeout(() => {\n      queryData();\n    }, 2000);\n  }\n\n  render() {\n    const prayers = this.state.birthdayPrayers;\n\t\tconst delayQuery = this.delayQuery;\n\n    return(\n      <Segment raised>\n\t\t\t\t<Divider horizontal>\n\t\t\t\t\t<Header as='h4'>\n\t\t\t\t\t\t<Icon name='file text' />\n\t\t\t\t\t\t  生日提醒訊息(隨機發送一組)\n\t\t\t\t\t</Header>\n\t\t\t\t</Divider>\n\t\t\t\t{prayers.map(function(prayer, index){\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Table celled key={prayer._id}>\n\t\t\t\t\t\t\t<Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell colSpan='6'>\n                    訊息群組#{index+1}\n                    <PrayerModal type='REMOVE_GROUP' prayerId={prayer._id} prayerMsgs={prayer.msgs} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t</Table.HeaderCell>\n                </Table.Row>\n\t\t\t\t\t\t\t\t<Table.Row>\n                  <Table.HeaderCell>順序</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>類別</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell style={{ width: '250px' }}>文字訊息</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>STKID</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>STKPKGID</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell style={{ width: '250px' }}>操作</Table.HeaderCell>\n\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t</Table.Header>\n\n\t\t\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t\t\t{prayer.msgs.map(function(msg, idx){\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Table.Row key={msg.id} >\n                      <Table.Cell>{idx+1}</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>{msg.isText ? \"文字\" : \"貼圖\"}</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell>{msg.text}</Table.Cell> : <Table.Cell/>}\n\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell/> : <Table.Cell>{msg.stkrId}</Table.Cell>}\n\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell/> : <Table.Cell>{msg.pkgId}</Table.Cell>}\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>\n                        <PrayerModal type='REMOVE_MSG' prayerId={prayer._id} prayerMsg={msg} callback={delayQuery}/>\n                        <PrayerModal type='UPDATE' prayerId={prayer._id} prayerMsg={msg} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</Table.Body>\n\n\t\t\t\t\t\t\t<Table.Footer fullWidth>\n\t\t\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell colSpan='6'>\n                    <PrayerModal type='ADD_MSG' prayerId={prayer._id} prayerMsgs={prayer.msgs} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t</Table.Footer>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t)\n        })}\n        <Container style={{ height: '30px' }}>\n          <PrayerModal type='ADD_GROUP' callback={delayQuery}/>\n        </Container>\n\t\t\t</Segment>\n    )\n  }\n}","import React, { Component}  from 'react';\nimport { Container } from 'semantic-ui-react'\nimport BirthdayUser from './BirthdayUser/BirthdayUser';\nimport BirthdayPrayer from './BirthdayPrayer/BirthdayPrayer';\nimport 'semantic-ui-css/semantic.min.css';\n\nexport default class Birthday extends Component {\n\n\trender() {\n\t\t\n    return (\n\t\t\t<Container style={{ padding: '3em' }}>\n\t\t\t\t<BirthdayUser/>\n\t\t\t\t<BirthdayPrayer/>\n\t\t\t</Container>\n    );\n  }\n\t\n}","import React, { Component } from 'react';\nimport { Button, Icon, Modal, Form, Input } from 'semantic-ui-react'\nimport { getRoutineRule, addRoutineRule, updateRoutineRule, removeRoutineRule } from '../MongoDB';\nconst uuidv4 = require('uuid/v4');\n\nexport default class RoutineModal extends Component {\n\n  state = {\n    type: this.props.type,\n    rule: this.props.rule || '',\n    modalRuleAddShow: false,\n    modalRuleRemoveShow: false,\n    modalRuleUpdateShow: false,\n    inputRuleType: '',\n    inputWeekday1: '',\n    inputWeekday2: '',\n    inputWeekday3: '',\n    inputWeekday4: '',\n    inputWeekday5: '',\n    inputWeekday6: ''\n  }\n  \n  modalRuleAddOpen = () => {\n    this.setState({ modalRuleAddShow: true });\n  }\n\n  modalRuleAddClose = () => {\n    this.setState({ modalRuleAddShow: false }, this.props.callback );\n  }\n\n  modalRuleAddSubmit = () => {\n    const newData = {\n      id: uuidv4(),\n      month: this.state.inputRuleType,\n      routines: [{\n        week_day: 1,\n        name: this.state.inputWeekday1.toString()\n      },{\n        week_day: 2,\n        name: this.state.inputWeekday2.toString()\n      },{\n        week_day: 3,\n        name: this.state.inputWeekday3.toString()\n      },{\n        week_day: 4,\n        name: this.state.inputWeekday4.toString()\n      },{\n        week_day: 5,\n        name: this.state.inputWeekday5.toString()\n      },{\n        week_day: 6,\n        name: this.state.inputWeekday6.toString()\n      }]\n    }\n    addRoutineRule(newData);\n    this.modalRuleAddClose();\n  }\n\n  modalRuleRemoveOpen = () => {\n    this.setState({ modalRuleRemoveShow: true });\n  }\n\n  modalRuleRemoveClose = () => {\n    this.setState({ modalRuleRemoveShow: false }, this.props.callback );\n  }\n\n  modalRuleRemoveSubmit = () => {\n    removeRoutineRule(this.state.rule._id);\n    this.modalRuleRemoveClose();\n  }\n\n  modalRuleUpdateOpen = () => {\n    this.setState({ \n      modalRuleUpdateShow: true\n    }, () => {\n      getRoutineRule().then(data => {\n        const ruleGroup = data.find(rule => rule._id === this.state.rule._id);\n        this.setState({\n          rule: [...ruleGroup]\n        });\n      });\n    });\n  }\n\n  modalRuleUpdateClose = () => {\n    this.setState({ modalRuleUpdateShow: false }, this.props.callback );\n  }\n\n  modalRuleUpdateSubmit = () => {\n    const newData = {\n      id: this.state.rule._id,\n      month: this.state.rule.month,\n      routines: [{\n        week_day: 1,\n        name: (this.state.inputWeekday1.toString() === '') ? this.state.rule.routines[0].name : this.state.inputWeekday1.toString()\n      },{\n        week_day: 2,\n        name: (this.state.inputWeekday2.toString() === '') ? this.state.rule.routines[1].name : this.state.inputWeekday2.toString()\n      },{\n        week_day: 3,\n        name: (this.state.inputWeekday3.toString() === '') ? this.state.rule.routines[2].name : this.state.inputWeekday3.toString()\n      },{\n        week_day: 4,\n        name: (this.state.inputWeekday4.toString() === '') ? this.state.rule.routines[3].name : this.state.inputWeekday4.toString()\n      },{\n        week_day: 5,\n        name: (this.state.inputWeekday5.toString() === '') ? this.state.rule.routines[4].name : this.state.inputWeekday5.toString()\n      },{\n        week_day: 6,\n        name: (this.state.inputWeekday6.toString() === '') ? this.state.rule.routines[5].name : this.state.inputWeekday6.toString()\n      }]\n    }\n    \n    updateRoutineRule(newData)\n    this.modalRuleUpdateClose();\n  }\n\n  radioChange = (e, { value }) => {\n    this.setState({ inputRuleType: value })\n  }\n\n  render() {\n    const modalType = this.state.type;\n    const ruleInfo = this.state.rule;\n    const radioChange = this.radioChange;\n\n    if(modalType === 'ADD') {\n      return(\n        <Modal open={this.state.modalRuleAddShow} trigger={\n          <Button floated='right' icon labelPosition='left' primary size='small' onClick={this.modalRuleAddOpen}>\n            <Icon name='plus' /> 新增分享提醒\n          </Button>\n          }>\n          <Modal.Header>新增分享提醒</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <Form>\n                <Form.Group inline>\n                  <label>規則</label>\n                  <Form.Radio\n                    label='單數月'\n                    value='odd'\n                    checked={this.state.inputRuleType === 'odd'}\n                    onChange={radioChange}\n                  />\n                  <Form.Radio\n                    label='雙數月'\n                    value='even'\n                    checked={this.state.inputRuleType === 'even'}\n                    onChange={radioChange}\n                  />\n                  <Form.Radio\n                    label='全部月份'\n                    value='all'\n                    checked={this.state.inputRuleType === 'all'}\n                    onChange={radioChange}\n                  />\n                </Form.Group>\n                <Form.Field>\n                  <label>週一</label>\n                  <Input label={{ icon: 'asterisk' }} labelPosition='left corner' placeholder='週一分享者' onChange={e => {this.setState({inputWeekday1: e.target.value});}} />\n                </Form.Field>\n                <Form.Field>\n                  <label>週二</label>\n                  <Input label={{ icon: 'asterisk' }} labelPosition='left corner' placeholder='週二分享者' onChange={e => {this.setState({inputWeekday2: e.target.value});}} />\n                </Form.Field>\n                <Form.Field>\n                  <label>週三</label>\n                  <Input label={{ icon: 'asterisk' }} labelPosition='left corner' placeholder='週三分享者' onChange={e => {this.setState({inputWeekday3: e.target.value});}} />\n                </Form.Field>\n                <Form.Field>\n                  <label>週四</label>\n                  <Input label={{ icon: 'asterisk' }} labelPosition='left corner' placeholder='週四分享者' onChange={e => {this.setState({inputWeekday4: e.target.value});}}/>\n                </Form.Field>\n                <Form.Field>\n                  <label>週五</label>\n                  <Input label={{ icon: 'asterisk' }} labelPosition='left corner' placeholder='週五分享者' onChange={e => {this.setState({inputWeekday5: e.target.value});}}/>\n                </Form.Field>\n                <Form.Field>\n                  <label>週六</label>\n                  <Input label={{ icon: 'asterisk' }} labelPosition='left corner' placeholder='週六分享者' onChange={e => {this.setState({inputWeekday6: e.target.value});}}/>\n                </Form.Field>\n              </Form>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalRuleAddSubmit} disabled={this.state.inputRuleType === '' || this.state.inputWeekday1 === '' || this.state.inputWeekday2 === '' || this.state.inputWeekday3 === '' || this.state.inputWeekday4 === '' || this.state.inputWeekday5 === '' || this.state.inputWeekday6 === ''}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalRuleAddClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'UPDATE') {\n      return(\n        <Modal open={this.state.modalRuleUpdateShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='vk' size='small' onClick={this.modalRuleUpdateOpen}>\n            <Icon name='pencil alternate' /> 編輯\n          </Button>\n          }>\n          <Modal.Header>編輯分享提醒</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <Form>\n                <Form.Group inline>\n                  <label>規則</label>\n                  <Form.Radio\n                    label='單數月'\n                    value='odd'\n                    checked={ruleInfo.month === 'odd'}\n                    disabled={ruleInfo.month !== 'odd'}\n                  />\n                  <Form.Radio\n                    label='雙數月'\n                    value='even'\n                    checked={ruleInfo.month === 'even'}\n                    disabled={ruleInfo.month !== 'even'}\n                  />\n                  <Form.Radio\n                    label='全部月份'\n                    value='all'\n                    checked={ruleInfo.month === 'all'}\n                    disabled={ruleInfo.month !== 'all'}\n                  />\n                </Form.Group>\n                <Form.Field>\n                  <label>週一</label>\n                  <Input placeholder={ruleInfo.routines[0].name} onChange={e => {this.setState({inputWeekday1: e.target.value});}} />\n                </Form.Field>\n                <Form.Field>\n                  <label>週二</label>\n                  <Input placeholder={ruleInfo.routines[1].name} onChange={e => {this.setState({inputWeekday2: e.target.value});}} />\n                </Form.Field>\n                <Form.Field>\n                  <label>週三</label>\n                  <Input placeholder={ruleInfo.routines[2].name} onChange={e => {this.setState({inputWeekday3: e.target.value});}} />\n                </Form.Field>\n                <Form.Field>\n                  <label>週四</label>\n                  <Input placeholder={ruleInfo.routines[3].name} onChange={e => {this.setState({inputWeekday4: e.target.value});}}/>\n                </Form.Field>\n                <Form.Field>\n                  <label>週五</label>\n                  <Input placeholder={ruleInfo.routines[4].name} onChange={e => {this.setState({inputWeekday5: e.target.value});}}/>\n                </Form.Field>\n                <Form.Field>\n                  <label>週六</label>\n                  <Input placeholder={ruleInfo.routines[5].name} onChange={e => {this.setState({inputWeekday6: e.target.value});}}/>\n                </Form.Field>\n              </Form>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalRuleUpdateSubmit}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalRuleUpdateClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n    } else if(modalType === 'REMOVE') {\n      return(\n        <Modal open={this.state.modalRuleRemoveShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='google plus' size='small' onClick={this.modalRuleRemoveOpen}>\n            <Icon name='trash alternate' /> 移除\n          </Button>\n          }>\n          <Modal.Header>移除分享提醒</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <p>確定要刪除這個提醒?</p>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='google plus' onClick={this.modalRuleRemoveSubmit}>\n                <Icon name='checkmark' /> 移除\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalRuleRemoveClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else {}\n  }\n}","import React, { Component}  from 'react';\nimport { Icon, Table, Divider, Header, Segment } from 'semantic-ui-react'\nimport { getRoutineRule } from '../MongoDB';\nimport RoutineModal from './RoutineModal';\n\nexport default class RoutineRule extends Component {\n\n    state = {\n\t\troutineRules: []\n  }\n  \n  componentDidMount() {\n    this.queryData();\n  }\n\n  queryData = () => {\n\t\tgetRoutineRule().then(data => {\n      console.log(\"[RoutineRule queryData]\" + JSON.stringify(data));\n      this.setState({\n        routineRules: [...data]\n      });\n    });\n  }\n\n  delayQuery = () => {\n    const queryData = this.queryData;\n    setTimeout(() => {\n      queryData();\n    }, 2000);\n  }\n\n  render() {\n    const rules = this.state.routineRules;\n    const delayQuery = this.delayQuery;\n\n    return(\n      <Segment raised>\n        <Divider horizontal>\n          <Header as='h4'>\n            <Icon name='user' />\n              分享提醒列表\n          </Header>\n        </Divider>\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>規則</Table.HeaderCell>\n              <Table.HeaderCell>週一</Table.HeaderCell>\n              <Table.HeaderCell>週二</Table.HeaderCell>\n              <Table.HeaderCell>週三</Table.HeaderCell>\n              <Table.HeaderCell>週四</Table.HeaderCell>\n              <Table.HeaderCell>週五</Table.HeaderCell>\n              <Table.HeaderCell>週六</Table.HeaderCell>\n              <Table.HeaderCell style={{ width: '250px' }}>操作</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {rules.map(function(rule){\n              return (\n                <Table.Row key={rule._id} >\n                  <Table.Cell>{rule.month === 'odd' ? \"單數月\" : rule.month === 'even' ? \"雙數月\" : \"全部\"}</Table.Cell>\n                  <Table.Cell>{rule.routines[0].name}</Table.Cell>\n                  <Table.Cell>{rule.routines[1].name}</Table.Cell>\n                  <Table.Cell>{rule.routines[2].name}</Table.Cell>\n                  <Table.Cell>{rule.routines[3].name}</Table.Cell>\n                  <Table.Cell>{rule.routines[4].name}</Table.Cell>\n                  <Table.Cell>{rule.routines[5].name}</Table.Cell>\n                  <Table.Cell>\n                    <RoutineModal type='REMOVE' rule={rule} callback={delayQuery}/>\n                    <RoutineModal type='UPDATE' rule={rule} callback={delayQuery}/>\n                  </Table.Cell>\n                </Table.Row>\n              );\n            })}\n          </Table.Body>\n\n          <Table.Footer fullWidth>\n            <Table.Row>\n              <Table.HeaderCell colSpan='8'>\n                <RoutineModal type='ADD' callback={delayQuery}/>\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Footer>\n        </Table>\n      </Segment>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Button, Icon, Modal, Form } from 'semantic-ui-react'\nimport { getRoutineReminder, addRoutineReminder, updateRoutineReminder, removeRoutineReminder } from '../MongoDB';\nconst uuidv4 = require('uuid/v4');\n\nexport default class ReminderModal extends Component {\n\n  state = {\n    type: this.props.type,\n    reminderId: this.props.reminderId || '',\n    reminderMsgs: [],\n    reminderMsg: this.props.reminderMsg || [],\n    msgId: this.props.msgId || '',\n    modalReminderAddGroupShow: false,\n    modalReminderAddMsgShow: false,\n    modalReminderRemoveGroupShow: false,\n    modalReminderRemoveMsgShow: false,\n    modalReminderUpdateShow: false,\n    inputMsgType: '',\n    inputMsgContent: '',\n    inputPkgId: '',\n    inputStkrId: '',\n  }\n  \n  modalReminderAddGroupOpen = () => {\n    this.setState({ modalReminderAddGroupShow: true });\n  }\n\n  modalReminderAddGroupClose = () => {\n    this.setState({ modalReminderAddGroupShow: false }, this.props.callback );\n  }\n\n  modalReminderAddGroupSubmit = () => {\n    const newData = {\n      id: uuidv4(),\n      msgs: []\n    }\n    addRoutineReminder(newData);\n    this.modalReminderAddGroupClose();\n  }\n\n  modalReminderAddMsgOpen = () => {\n    this.setState({ \n      modalReminderAddMsgShow: true\n    }, () => {\n      getRoutineReminder().then(data => {\n        const msgGroup = data.find(group => group._id === this.state.reminderId);\n        this.setState({\n          reminderMsgs: [...msgGroup.msgs]\n        });\n      });\n    });\n  }\n\n  modalReminderAddMsgClose = () => {\n    this.setState({ modalReminderAddMsgShow: false }, this.props.callback );\n  }\n\n  modalReminderAddMsgSubmit = () => {\n    let msgs = [...this.state.reminderMsgs];\n    let newData = '';\n    const isText = (this.state.inputMsgType === 'text') ? true : false;\n\n    if(isText) {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        text: this.state.inputMsgContent\n      }\n    } else {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        pkgId: this.state.inputPkgId,\n        stkrId: this.state.inputStkrId\n      }\n    }\n\n    msgs.push(newData);\n    updateRoutineReminder(this.state.reminderId, msgs)\n    .then(() => {\n      this.setState({\n        reminderMsgs: msgs\n      }, () => {\n        console.log(\"NEW STATE: \"+JSON.stringify(this.state.reminderMsgs));\n        this.modalReminderAddMsgClose();\n      });\n    });\n  }\n\n  modalReminderRemoveGroupOpen = () => {\n    this.setState({ modalReminderRemoveGroupShow: true });\n  }\n\n  modalReminderRemoveGroupClose = () => {\n    this.setState({ modalReminderRemoveGroupShow: false }, this.props.callback );\n  }\n\n  modalReminderRemoveGroupSubmit = () => {\n    removeRoutineReminder(this.state.reminderId);\n    this.modalReminderRemoveGroupClose();\n  }\n\n  modalReminderRemoveMsgOpen = () => {\n    this.setState({ \n      modalReminderRemoveMsgShow: true\n    }, () => {\n      getRoutineReminder().then(data => {\n        console.log(\"[PrayerModal queryData]\" + JSON.stringify(data));\n        const msgGroup = data.find(group => group._id === this.state.reminderId);\n        this.setState({\n          reminderMsgs: [...msgGroup.msgs],\n        });\n      });\n    });\n  }\n\n  modalReminderRemoveMsgClose = () => {\n    this.setState({ modalReminderRemoveMsgShow: false }, this.props.callback );\n  }\n\n  modalReminderRemoveMsgSubmit = () => {\n    let msgs = [...this.state.reminderMsgs];\n    const updateIdx = msgs.findIndex(item => item.id === this.state.reminderMsg.id);\n    msgs.splice(updateIdx, 1);\n    updateRoutineReminder(this.state.reminderId, msgs)\n    .then(() => {\n      this.setState({\n        reminderMsgs: msgs\n      }, () => {\n        console.log(\"NEW STATE: \"+JSON.stringify(this.state.reminderMsgs));\n        this.modalReminderRemoveMsgClose();\n      });\n    });\n  }\n\n  modalReminderUpdateOpen = () => {\n    this.setState({ \n      modalReminderUpdateShow: true\n    }, () => {\n      getRoutineReminder().then(data => {\n        console.log(\"[PrayerModal queryData]\" + JSON.stringify(data));\n        const msgGroup = data.find(group => group._id === this.state.reminderId);\n        this.setState({\n          reminderMsgs: [...msgGroup.msgs],\n        });\n      });\n    });\n  }\n\n  modalReminderUpdateClose = () => {\n    this.setState({ modalReminderUpdateShow: false }, this.props.callback );\n  }\n\n  modalReminderUpdateSubmit = () => {\n    let msgs = [...this.state.reminderMsgs];\n    let newData = '';\n    const isText = (this.state.inputMsgType === 'text') ? true : false;\n\n    if(isText) {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        text: this.state.inputMsgContent\n      }\n    } else {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        pkgId: this.state.inputPkgId,\n        stkrId: this.state.inputStkrId\n      }\n    }\n\n    const updateIdx = msgs.findIndex(item => item.id === this.state.reminderMsg.id);\n    msgs.splice(updateIdx, 1, newData);\n    updateRoutineReminder(this.state.reminderId, msgs)\n    .then(() => {\n      this.setState({\n        reminderMsgs: msgs\n      }, () => {\n        console.log(\"NEW STATE: \"+JSON.stringify(this.state.reminderMsgs));\n        this.modalReminderUpdateClose();\n      });\n    });\n  }\n\n  radioChange = (e, { value }) => {\n    this.setState({ inputMsgType: value })\n  }\n\n  render() {\n    const modalType = this.state.type;\n    const reminderMsg = this.state.reminderMsg;\n    const radioChange = this.radioChange;\n\n    if(modalType === 'ADD_GROUP') {\n      return(\n        <Modal open={this.state.modalReminderAddGroupShow} trigger={\n          <Button floated='right' icon labelPosition='left' primary size='small' onClick={this.modalReminderAddGroupOpen}>\n            <Icon name='plus' /> 新增訊息群組\n          </Button>\n          }>\n          <Modal.Header>新增訊息群組</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              \n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalReminderAddGroupSubmit} disabled={this.state.inputFirstname === '' || this.state.inputBirthMonth === '' || this.state.inputBirthDay === ''}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalReminderAddGroupClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'ADD_MSG') {\n      return(\n        <Modal open={this.state.modalReminderAddMsgShow} trigger={\n          <Button floated='right' icon labelPosition='left' primary size='small' onClick={this.modalReminderAddMsgOpen}>\n            <Icon name='plus' /> 新增訊息\n          </Button>\n          }>\n          <Modal.Header>新增訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <a href=\"https://devdocs.line.me/files/sticker_list.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">可以使用的貼圖清單</a>\n              <Form>\n                <Form.Group inline>\n                  <label>訊息類型</label>\n                  <Form.Radio\n                    label='文字'\n                    value='text'\n                    checked={this.state.inputMsgType === 'text'}\n                    onChange={radioChange}\n                  />\n                  <Form.Radio\n                    label='貼圖'\n                    value='sticker'\n                    checked={this.state.inputMsgType === 'sticker'}\n                    onChange={radioChange}\n                  />\n                </Form.Group>\n                <Form.TextArea label='文字訊息' placeholder='訊息內容' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'sticker'} onChange={e => {this.setState({inputMsgContent: e.target.value});}}/>\n                <Form.Group widths='equal'>\n                  <Form.Input fluid label='STKID' placeholder='STKID' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'text'} onChange={e => {this.setState({inputStkrId: e.target.value});}}/>\n                  <Form.Input fluid label='STKPKGID' placeholder='STKPKGID' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'text'} onChange={e => {this.setState({inputPkgId: e.target.value});}}/>\n                </Form.Group>\n              </Form>              \n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalReminderAddMsgSubmit} disabled={this.state.inputMsgType === '' || (this.state.inputMsgType === 'text' && this.state.inputMsgContent === '') || (this.state.inputMsgType === 'sticker' && (this.state.inputPkgId === '' || this.state.inputStkrId === ''))}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalReminderAddMsgClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'UPDATE') {\n      return(\n        <Modal open={this.state.modalReminderUpdateShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='vk' size='small' onClick={this.modalReminderUpdateOpen}>\n            <Icon name='pencil alternate' /> 編輯\n          </Button>\n          }>\n          <Modal.Header>編輯訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <a href=\"https://devdocs.line.me/files/sticker_list.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">可以使用的貼圖清單</a>\n              <Form>\n                <Form.Group inline>\n                  <label>訊息類型</label>\n                  <Form.Radio\n                    label='文字'\n                    value='text'\n                    checked={reminderMsg.isText === true}\n                    disabled={reminderMsg.isText === false}\n                  />\n                  <Form.Radio\n                    label='貼圖'\n                    value='sticker'\n                    checked={reminderMsg.isText === false}\n                    disabled={reminderMsg.isText === true}\n                  />\n                </Form.Group>\n                <Form.TextArea label='文字訊息' placeholder={reminderMsg.text} disabled={reminderMsg.isText === false} onChange={e => {this.setState({inputMsgType: 'text', inputMsgContent: e.target.value});}}/>\n                <Form.Group widths='equal'>\n                  <Form.Input fluid label='STKID' placeholder={reminderMsg.stkrId} disabled={reminderMsg.isText === true} onChange={e => {this.setState({inputMsgType: 'sticker', inputStkrId: e.target.value});}}/>\n                  <Form.Input fluid label='STKPKGID' placeholder={reminderMsg.pkgId} disabled={reminderMsg.isText === true} onChange={e => {this.setState({inputMsgType: 'sticker', inputPkgId: e.target.value});}}/>\n                </Form.Group>\n              </Form>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalReminderUpdateSubmit}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalReminderUpdateClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n    } else if(modalType === 'REMOVE_GROUP') {\n      return(\n        <Modal open={this.state.modalReminderRemoveGroupShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='google plus' size='small' onClick={this.modalReminderRemoveGroupOpen}>\n            <Icon name='trash alternate' /> 移除群組\n          </Button>\n          }>\n          <Modal.Header>移除群組</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <p>確定要刪除這個群組?</p>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='google plus' onClick={this.modalReminderRemoveGroupSubmit}>\n                <Icon name='checkmark' /> 移除\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalReminderRemoveGroupClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'REMOVE_MSG') {\n      return(\n        <Modal open={this.state.modalReminderRemoveMsgShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='google plus' size='small' onClick={this.modalReminderRemoveMsgOpen}>\n            <Icon name='trash alternate' /> 移除\n          </Button>\n          }>\n          <Modal.Header>移除訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <p>確定要刪除這則訊息?</p>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='google plus' onClick={this.modalReminderRemoveMsgSubmit}>\n                <Icon name='checkmark' /> 移除\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalReminderRemoveMsgClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else {}\n  }\n}","import React, { Component}  from 'react';\nimport { Container, Icon, Table, Divider, Header, Segment } from 'semantic-ui-react'\nimport { getRoutineReminder } from '../MongoDB';\nimport ReminderModal from './ReminderModal';\n\nexport default class RoutineReminder extends Component {\n\n  state = {\n\t\troutineReminders: []\n  }\n  \n  componentDidMount() {\n    this.queryData();\n  }\n\n  queryData = () => {\n\t\tgetRoutineReminder().then(data => {\n\t\t\tconsole.log(\"[RoutineReminder queryData]\" + JSON.stringify(data));\n\t\t\tthis.setState({\n        routineReminders: [...data]\n      });\n    });\n\t}\n\t\n\tdelayQuery = () => {\n    const queryData = this.queryData;\n    setTimeout(() => {\n      queryData();\n    }, 2000);\n  }\n\n  render() {\n    const reminders = this.state.routineReminders;\n    const delayQuery = this.delayQuery;\n\n    return(\n      <Segment raised>\n\t\t\t\t<Divider horizontal>\n\t\t\t\t\t<Header as='h4'>\n\t\t\t\t\t\t<Icon name='file text' />\n\t\t\t\t\t\t  分享提醒訊息(隨機發送一組)\n\t\t\t\t\t</Header>\n\t\t\t\t</Divider>\n\t\t\t\t{reminders.map(function(reminder, index){\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Table celled key={reminder._id}>\n\t\t\t\t\t\t\t<Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell colSpan='6'>\n                    訊息群組#{index+1}\n                    <ReminderModal type='REMOVE_GROUP' reminderId={reminder._id} reminderMsgs={reminder.msgs} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t</Table.HeaderCell>\n                </Table.Row>\n\t\t\t\t\t\t\t\t<Table.Row>\n                  <Table.HeaderCell>順序</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>類別</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell style={{ width: '250px' }}>文字訊息</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>STKID</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>STKPKGID</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell style={{ width: '250px' }}>操作</Table.HeaderCell>\n\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t</Table.Header>\n\n\t\t\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t\t\t{reminder.msgs.map(function(msg, idx){\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Table.Row key={msg.id} >\n                      <Table.Cell>{idx+1}</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>{msg.isText ? \"文字\" : \"貼圖\"}</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell>{msg.text}</Table.Cell> : <Table.Cell/>}\n\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell/> : <Table.Cell>{msg.stkrId}</Table.Cell>}\n\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell/> : <Table.Cell>{msg.pkgId}</Table.Cell>}\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>\n                        <ReminderModal type='REMOVE_MSG' reminderId={reminder._id} reminderMsg={msg} callback={delayQuery}/>\n                        <ReminderModal type='UPDATE' reminderId={reminder._id} reminderMsg={msg} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</Table.Body>\n\n\t\t\t\t\t\t\t<Table.Footer fullWidth>\n\t\t\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell colSpan='6'>\n                    <ReminderModal type='ADD_MSG' reminderId={reminder._id} reminderMsgs={reminder.msgs} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t</Table.Footer>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t)\n        })}\n        <Container style={{ height: '30px' }}>\n          <ReminderModal type='ADD_GROUP' callback={delayQuery}/>\n        </Container>\n\t\t\t</Segment>\n    )\n  }\n}","import React, { Component}  from 'react';\nimport { Container } from 'semantic-ui-react'\nimport RoutineRule from './RoutineRule/RoutineRule';\nimport RoutineReminder from './RoutineReminder/RoutineReminder';\nimport 'semantic-ui-css/semantic.min.css';\n\nexport default class Routine extends Component {\n\n\trender() {\n\t\t\n    return (\n\t\t\t<Container style={{ padding: '3em' }}>\n\t\t\t\t<RoutineRule/>\n\t\t\t\t<RoutineReminder/>\n\t\t\t</Container>\n    );\n  }\n\t\n}","import React, { Component } from 'react';\nimport { Button, Icon, Modal, Form } from 'semantic-ui-react'\nimport { getMondayBless, addMondayBless, updateMondayBless, removeMondayBless } from '../MongoDB';\nconst uuidv4 = require('uuid/v4');\n\nexport default class BlessModal extends Component {\n\n  state = {\n    type: this.props.type,\n    blessId: this.props.blessId || '',\n    blessMsgs: [],\n    blessMsg: this.props.blessMsg || '',\n    msgId: this.props.msgId || '',\n    modalBlessAddGroupShow: false,\n    modalBlessAddMsgShow: false,\n    modalBlessRemoveGroupShow: false,\n    modalBlessRemoveMsgShow: false,\n    modalBlessUpdateShow: false,\n    inputMsgType: '',\n    inputMsgContent: '',\n    inputPkgId: '',\n    inputStkrId: '',\n  }\n  \n  modalBlessAddGroupOpen = () => {\n    this.setState({ modalBlessAddGroupShow: true });\n  }\n\n  modalBlessAddGroupClose = () => {\n    this.setState({ modalBlessAddGroupShow: false }, this.props.callback );\n  }\n\n  modalBlessAddGroupSubmit = () => {\n    const newData = {\n      id: uuidv4(),\n      msgs: []\n    }\n    addMondayBless(newData);\n    this.modalBlessAddGroupClose();\n  }\n\n  modalBlessAddMsgOpen = () => {\n    this.setState({\n      modalBlessAddMsgShow: true\n    }, () => {\n      getMondayBless().then(data => {\n        const msgGroup = data.find(group => group._id === this.state.blessId);\n        this.setState({\n          blessMsgs: [...msgGroup.msgs]\n        });\n      });\n    });\n  }\n\n  modalBlessAddMsgClose = () => {\n    this.setState({ modalBlessAddMsgShow: false }, this.props.callback );\n  }\n\n  modalBlessAddMsgSubmit = () => {\n    let msgs = [...this.state.blessMsgs];\n    let newData = '';\n    const isText = (this.state.inputMsgType === 'text') ? true : false;\n\n    if(isText) {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        text: this.state.inputMsgContent\n      }\n    } else {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        pkgId: this.state.inputPkgId,\n        stkrId: this.state.inputStkrId\n      }\n    }\n\n    msgs.push(newData);\n    updateMondayBless(this.state.blessId, msgs)\n    .then(() => {\n      this.setState({\n        blessMsgs: msgs\n      }, () => {\n        console.log(\"NEW STATE: \"+JSON.stringify(this.state.blessMsgs));\n        this.modalBlessAddMsgClose();\n      });\n    });\n  }\n\n  modalBlessRemoveGroupOpen = () => {\n    this.setState({ modalBlessRemoveGroupShow: true });\n  }\n\n  modalBlessRemoveGroupClose = () => {\n    this.setState({ modalBlessRemoveGroupShow: false }, this.props.callback );\n  }\n\n  modalBlessRemoveGroupSubmit = () => {\n    removeMondayBless(this.state.blessId);\n    this.modalBlessRemoveGroupClose();\n  }\n\n  modalBlessRemoveMsgOpen = () => {\n    this.setState({ \n      modalBlessRemoveMsgShow: true\n    }, () => {\n      getMondayBless().then(data => {\n        const msgGroup = data.find(group => group._id === this.state.blessId);\n        this.setState({\n          blessMsgs: [...msgGroup.msgs],\n        });\n      });\n    });\n  }\n\n  modalBlessRemoveMsgClose = () => {\n    this.setState({ modalBlessRemoveMsgShow: false }, this.props.callback );\n  }\n\n  modalBlessRemoveMsgSubmit = () => {\n    let msgs = [...this.state.blessMsgs];\n    const updateIdx = msgs.findIndex(item => item.id === this.state.blessMsg.id);\n    msgs.splice(updateIdx, 1);\n    updateMondayBless(this.state.blessId, msgs)\n    .then(() => {\n      this.setState({\n        blessMsgs: msgs\n      }, () => {\n        console.log(\"NEW STATE: \"+JSON.stringify(this.state.blessMsgs));\n        this.modalBlessRemoveMsgClose();\n      });\n    });\n  }\n\n  modalBlessUpdateOpen = () => {\n    this.setState({ \n      modalBlessUpdateShow: true \n    }, () => {\n      getMondayBless().then(data => {\n        console.log(\"[BlessModal queryData]\" + JSON.stringify(data));\n        const msgGroup = data.find(group => group._id === this.state.blessId);\n        this.setState({\n          blessMsgs: [...msgGroup.msgs],\n        });\n      });\n    });\n  }\n\n  modalBlessUpdateClose = () => {\n    this.setState({ modalBlessUpdateShow: false }, this.props.callback );\n  }\n\n  modalBlessUpdateSubmit = () => {\n    let msgs = [...this.state.blessMsgs];\n    let newData = '';\n    const isText = (this.state.inputMsgType === 'text') ? true : false;\n\n    if(isText) {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        text: this.state.inputMsgContent\n      }\n    } else {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        pkgId: this.state.inputPkgId,\n        stkrId: this.state.inputStkrId\n      }\n    }\n\n    const updateIdx = msgs.findIndex(item => item.id === this.state.blessMsg.id);\n    msgs.splice(updateIdx, 1, newData);\n    updateMondayBless(this.state.blessId, msgs)\n    .then(() => {\n      this.setState({\n        blessMsgs: msgs\n      }, () => {\n        console.log(\"NEW STATE: \"+JSON.stringify(this.state.blessMsgs));\n        this.modalBlessUpdateClose();\n      });\n    });\n  }\n\n  radioChange = (e, { value }) => {\n    this.setState({ inputMsgType: value })\n  }\n\n  render() {\n    const modalType = this.state.type;\n    const blessMsg = this.state.blessMsg;\n    const radioChange = this.radioChange;\n\n    if(modalType === 'ADD_GROUP') {\n      return(\n        <Modal open={this.state.modalBlessAddGroupShow} trigger={\n          <Button floated='right' icon labelPosition='left' primary size='small' onClick={this.modalBlessAddGroupOpen}>\n            <Icon name='plus' /> 新增訊息群組\n          </Button>\n          }>\n          <Modal.Header>新增訊息群組</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              \n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalBlessAddGroupSubmit} disabled={this.state.inputFirstname === '' || this.state.inputBirthMonth === '' || this.state.inputBirthDay === ''}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalBlessAddGroupClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'ADD_MSG') {\n      return(\n        <Modal open={this.state.modalBlessAddMsgShow} trigger={\n          <Button floated='right' icon labelPosition='left' primary size='small' onClick={this.modalBlessAddMsgOpen}>\n            <Icon name='plus' /> 新增訊息\n          </Button>\n          }>\n          <Modal.Header>新增訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <a href=\"https://devdocs.line.me/files/sticker_list.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">可以使用的貼圖清單</a>\n              <Form>\n                <Form.Group inline>\n                  <label>訊息類型</label>\n                  <Form.Radio\n                    label='文字'\n                    value='text'\n                    checked={this.state.inputMsgType === 'text'}\n                    onChange={radioChange}\n                  />\n                  <Form.Radio\n                    label='貼圖'\n                    value='sticker'\n                    checked={this.state.inputMsgType === 'sticker'}\n                    onChange={radioChange}\n                  />\n                </Form.Group>\n                <Form.TextArea label='文字訊息' placeholder='訊息內容' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'sticker'} onChange={e => {this.setState({inputMsgContent: e.target.value});}}/>\n                <Form.Group widths='equal'>\n                  <Form.Input fluid label='STKID' placeholder='STKID' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'text'} onChange={e => {this.setState({inputStkrId: e.target.value});}}/>\n                  <Form.Input fluid label='STKPKGID' placeholder='STKPKGID' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'text'} onChange={e => {this.setState({inputPkgId: e.target.value});}}/>\n                </Form.Group>\n              </Form>              \n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalBlessAddMsgSubmit} disabled={this.state.inputMsgType === '' || (this.state.inputMsgType === 'text' && this.state.inputMsgContent === '') || (this.state.inputMsgType === 'sticker' && (this.state.inputPkgId === '' || this.state.inputStkrId === ''))}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalBlessAddMsgClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'UPDATE') {\n      return(\n        <Modal open={this.state.modalBlessUpdateShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='vk' size='small' onClick={this.modalBlessUpdateOpen}>\n            <Icon name='pencil alternate' /> 編輯\n          </Button>\n          }>\n          <Modal.Header>編輯訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <a href=\"https://devdocs.line.me/files/sticker_list.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">可以使用的貼圖清單</a>\n              <Form>\n                <Form.Group inline>\n                  <label>訊息類型</label>\n                  <Form.Radio\n                    label='文字'\n                    value='text'\n                    checked={blessMsg.isText === true}\n                    disabled={blessMsg.isText === false}\n                  />\n                  <Form.Radio\n                    label='貼圖'\n                    value='sticker'\n                    checked={blessMsg.isText === false}\n                    disabled={blessMsg.isText === true}\n                  />\n                </Form.Group>\n                <Form.TextArea label='文字訊息' placeholder={blessMsg.text} disabled={blessMsg.isText === false} onChange={e => {this.setState({inputMsgType: 'text', inputMsgContent: e.target.value});}}/>\n                <Form.Group widths='equal'>\n                  <Form.Input fluid label='STKID' placeholder={blessMsg.stkrId} disabled={blessMsg.isText === true} onChange={e => {this.setState({inputMsgType: 'sticker', inputStkrId: e.target.value});}}/>\n                  <Form.Input fluid label='STKPKGID' placeholder={blessMsg.pkgId} disabled={blessMsg.isText === true} onChange={e => {this.setState({inputMsgType: 'sticker', inputPkgId: e.target.value});}}/>\n                </Form.Group>\n              </Form>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalBlessUpdateSubmit}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalBlessUpdateClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n    } else if(modalType === 'REMOVE_GROUP') {\n      return(\n        <Modal open={this.state.modalBlessRemoveGroupShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='google plus' size='small' onClick={this.modalBlessRemoveGroupOpen}>\n            <Icon name='trash alternate' /> 移除群組\n          </Button>\n          }>\n          <Modal.Header>移除群組</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <p>確定要刪除這個群組?</p>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='google plus' onClick={this.modalBlessRemoveGroupSubmit}>\n                <Icon name='checkmark' /> 移除\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalBlessRemoveGroupClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'REMOVE_MSG') {\n      return(\n        <Modal open={this.state.modalBlessRemoveMsgShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='google plus' size='small' onClick={this.modalBlessRemoveMsgOpen}>\n            <Icon name='trash alternate' /> 移除\n          </Button>\n          }>\n          <Modal.Header>移除訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <p>確定要刪除這則訊息?</p>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='google plus' onClick={this.modalBlessRemoveMsgSubmit}>\n                <Icon name='checkmark' /> 移除\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalBlessRemoveMsgClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else {}\n  }\n}","import React, { Component}  from 'react';\nimport { Container, Icon, Table, Divider, Header, Segment } from 'semantic-ui-react'\nimport { getMondayBless } from '../MongoDB';\nimport BlessModal from './BlessModal';\n\nexport default class MondayBless extends Component {\n\n  state = {\n\t\tmondayBlesses: []\n  }\n  \n  componentDidMount() {\n    this.queryData();\n  }\n\n  queryData = () => {\n\t\tgetMondayBless().then(data => {\n\t\t\tconsole.log(\"[MondayBless queryData]\" + JSON.stringify(data));\n\t\t\tthis.setState({\n        mondayBlesses: [...data]\n      });\n    });\n  }\n\n  delayQuery = () => {\n    const queryData = this.queryData;\n    setTimeout(() => {\n      queryData();\n    }, 2000);\n  }\n\n  render() {\n    const blesses = this.state.mondayBlesses;\n    const delayQuery = this.delayQuery;\n\n    return(\n      <Segment raised style={{ margin: '3em' }}>\n\t\t\t\t<Divider horizontal>\n\t\t\t\t\t<Header as='h4'>\n\t\t\t\t\t\t<Icon name='file text' />\n\t\t\t\t\t\t  週一祝福訊息(隨機發送一組)\n\t\t\t\t\t</Header>\n\t\t\t\t</Divider>\n\t\t\t\t{blesses.map(function(bless, index){\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Table celled key={bless._id}>\n\t\t\t\t\t\t\t<Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell colSpan='6'>\n                    訊息群組#{index+1}\n                    <BlessModal type='REMOVE_GROUP' blessId={bless._id} blessMsgs={bless.msgs} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t</Table.HeaderCell>\n                </Table.Row>\n\t\t\t\t\t\t\t\t<Table.Row>\n                  <Table.HeaderCell>順序</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>類別</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell style={{ width: '250px' }}>文字訊息</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>STKID</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>STKPKGID</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell style={{ width: '250px' }}>操作</Table.HeaderCell>\n\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t</Table.Header>\n\n\t\t\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t\t\t{bless.msgs.map(function(msg, idx){\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Table.Row key={msg.id} >\n                      <Table.Cell>{idx+1}</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>{msg.isText ? \"文字\" : \"貼圖\"}</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell>{msg.text}</Table.Cell> : <Table.Cell/>}\n\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell/> : <Table.Cell>{msg.stkrId}</Table.Cell>}\n\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell/> : <Table.Cell>{msg.pkgId}</Table.Cell>}\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>\n                        <BlessModal type='REMOVE_MSG' blessId={bless._id} blessMsg={msg} callback={delayQuery}/>\n                        <BlessModal type='UPDATE' blessId={bless._id} blessMsg={msg} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</Table.Body>\n\n\t\t\t\t\t\t\t<Table.Footer fullWidth>\n\t\t\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell colSpan='6'>\n                    <BlessModal type='ADD_MSG' blessId={bless._id} blessMsgs={bless.msgs} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t</Table.Footer>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t)\n        })}\n        <Container style={{ height: '30px' }}>\n          <BlessModal type='ADD_GROUP' callback={delayQuery}/>\n        </Container>\n\t\t\t</Segment>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Button, Icon, Modal, Form, Input } from 'semantic-ui-react'\nimport { getAutoReply, addAutoReply, updateAutoReply, removeAutoReply } from '../MongoDB';\nconst uuidv4 = require('uuid/v4');\n\nexport default class AutoReplyModal extends Component {\n\n  state = {\n    type: this.props.type,\n    autoReplyId: this.props.autoReplyId || '',\n    autoReplyKeywords: [],\n    autoReplyMessages: [],\n    autoReplyKeyword: this.props.autoReplyKeyword || '',\n    autoReplyMessage: this.props.autoReplyMessage || '',\n    modalAutoReplyAddGroupShow: false,\n    modalAutoReplyAddMsgShow: false,\n    modalAutoReplyAddKeywordShow: false,\n    modalAutoReplyRemoveGroupShow: false,\n    modalAutoReplyRemoveKeywordShow: false,\n    modalAutoReplyRemoveMsgShow: false,\n    modalAutoReplyUpdateShow: false,\n    inputMsgType: '',\n    inputKeyword: '',\n    inputMsgContent: '',\n    inputPkgId: '',\n    inputStkrId: '',\n  }\n  \n  modalAutoReplyAddGroupOpen = () => {\n    this.setState({ modalAutoReplyAddGroupShow: true });\n  }\n\n  modalAutoReplyAddGroupClose = () => {\n    this.setState({ modalAutoReplyAddGroupShow: false }, this.props.callback );\n  }\n\n  modalAutoReplyAddGroupSubmit = () => {\n    const newData = {\n      id: uuidv4(),\n      key_words: [],\n      response_msgs: []\n    }\n    addAutoReply(newData);\n    this.modalAutoReplyAddGroupClose();\n  }\n\n  modalAutoReplyAddMsgOpen = () => {\n    this.setState({ \n      modalAutoReplyAddMsgShow: true\n    }, () => {\n      getAutoReply().then(data => {\n        const msgGroup = data.find(group => group._id === this.state.autoReplyId);\n        this.setState({\n          autoReplyKeywords: [...msgGroup.key_words],\n          autoReplyMessages: [...msgGroup.response_msgs]\n        });\n      });\n    });\n  }\n\n  modalAutoReplyAddMsgClose = () => {\n    this.setState({ modalAutoReplyAddMsgShow: false }, this.props.callback );\n  }\n\n  modalAutoReplyAddMsgSubmit = () => {\n    let msgs = [...this.state.autoReplyMessages];\n    let newMsg = '';\n    const isText = (this.state.inputMsgType === 'text') ? true : false;\n\n    if(isText) {\n      newMsg = {\n        id: uuidv4(),\n        isText: isText,\n        text: this.state.inputMsgContent\n      }\n    } else {\n      newMsg = {\n        id: uuidv4(),\n        isText: isText,\n        pkgId: this.state.inputPkgId,\n        stkrId: this.state.inputStkrId\n      }\n    }\n    msgs.push(newMsg);\n    \n    let newData = {\n      id: this.state.autoReplyId,\n      key_words: this.state.autoReplyKeywords,\n      response_msgs: msgs\n    };\n    \n    updateAutoReply(newData)\n    .then(() => {\n      this.setState({\n        autoReplyMessages: msgs\n      }, () => {\n        this.modalAutoReplyAddMsgClose();\n      });\n    });\n  }\n\n  modalAutoReplyAddKeywordOpen = () => {\n    this.setState({ \n      modalAutoReplyAddKeywordShow: true \n    }, () => {\n      getAutoReply().then(data => {\n        const msgGroup = data.find(group => group._id === this.state.autoReplyId);\n        this.setState({\n          autoReplyKeywords: [...msgGroup.key_words],\n          autoReplyMessages: [...msgGroup.response_msgs]\n        });\n      });\n    });\n  }\n\n  modalAutoReplyAddKeywordClose = () => {\n    this.setState({ modalAutoReplyAddKeywordShow: false }, this.props.callback );\n  }\n\n  modalAutoReplyAddKeywordSubmit = () => {\n    let keywords = [...this.state.autoReplyKeywords];\n\n    const newKeyword = {\n      id: uuidv4(),\n      text: this.state.inputKeyword\n    }\n\n    keywords.push(newKeyword);\n\n    let newData = {\n      id: this.state.autoReplyId,\n      key_words: keywords,\n      response_msgs: this.state.autoReplyMessages\n    };\n\n    updateAutoReply(newData)\n    .then(() => {\n      this.setState({\n        autoReplyKeywords: keywords\n      }, () => {\n        this.modalAutoReplyAddKeywordClose();\n      });\n    });\n  }\n\n  modalAutoReplyRemoveGroupOpen = () => {\n    this.setState({ modalAutoReplyRemoveGroupShow: true });\n  }\n\n  modalAutoReplyRemoveGroupClose = () => {\n    this.setState({ modalAutoReplyRemoveGroupShow: false }, this.props.callback );\n  }\n\n  modalAutoReplyRemoveGroupSubmit = () => {\n    removeAutoReply(this.state.autoReply._id);\n    this.modalAutoReplyRemoveGroupClose();\n  }\n\n  modalAutoReplyRemoveMsgOpen = () => {\n    this.setState({ \n      modalAutoReplyRemoveMsgShow: true\n    }, () => {\n      getAutoReply().then(data => {\n        const msgGroup = data.find(group => group._id === this.state.autoReplyId);\n        this.setState({\n          autoReplyKeywords: [...msgGroup.key_words],\n          autoReplyMessages: [...msgGroup.response_msgs]\n        });\n      });\n    });\n  }\n\n  modalAutoReplyRemoveMsgClose = () => {\n    this.setState({ modalAutoReplyRemoveMsgShow: false }, this.props.callback );\n  }\n\n  modalAutoReplyRemoveMsgSubmit = () => {\n    let msgs = [...this.state.autoReplyMessages];\n    const updateIdx = msgs.findIndex(item => item.id === this.state.autoReplyMessage.id);\n    msgs.splice(updateIdx, 1);\n\n    let newData = {\n      id: this.state.autoReplyId,\n      key_words: this.state.autoReplyKeywords,\n      response_msgs: msgs\n    };\n\n    updateAutoReply(newData)\n    .then(() => {\n      this.setState({\n        autoReplyMessages: msgs\n      }, () => {\n        this.modalAutoReplyRemoveMsgClose();\n      });\n    });\n  }\n\n  modalAutoReplyRemoveKeywordOpen = () => {\n    this.setState({ \n      modalAutoReplyRemoveKeywordShow: true\n    }, () => {\n      getAutoReply().then(data => {\n        const msgGroup = data.find(group => group._id === this.state.autoReplyId);\n        this.setState({\n          autoReplyKeywords: [...msgGroup.key_words],\n          autoReplyMessages: [...msgGroup.response_msgs]\n        });\n      });\n    });\n  }\n\n  modalAutoReplyRemoveKeywordClose = () => {\n    this.setState({ modalAutoReplyRemoveKeywordShow: false }, this.props.callback );\n  }\n\n  modalAutoReplyRemoveKeywordSubmit = () => {\n    let keywords = [...this.state.autoReplyKeywords];\n    const updateIdx = keywords.findIndex(item => item.id === this.state.autoReplyKeyword.id);\n    keywords.splice(updateIdx, 1);\n\n    let newData = {\n      id: this.state.autoReplyId,\n      key_words: keywords,\n      response_msgs: this.state.autoReplyMessages\n    };\n\n    updateAutoReply(newData)\n    .then(() => {\n      this.setState({\n        autoReplyKeywords: keywords\n      }, () => {\n        this.modalAutoReplyRemoveMsgClose();\n      });\n    });\n  }\n/*\n  modalAutoReplyUpdateOpen = () => {\n    this.setState({ modalAutoReplyUpdateShow: true });\n  }\n\n  modalAutoReplyUpdateClose = () => {\n    this.setState({ modalAutoReplyUpdateShow: false }, this.props.callback );\n  }\n\n  modalAutoReplyUpdateSubmit = () => {\n    let autoReplyCopy = this.state.autoReply;\n    let newData = '';\n    const isText = (this.state.inputMsgType === 'text') ? true : false;\n\n    if(isText) {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        text: this.state.inputMsgContent\n      }\n    } else {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        pkgId: this.state.inputPkgId,\n        stkrId: this.state.inputStkrId\n      }\n    }\n\n    autoReplyCopy.response_msgs.splice(this.state.msgIdx, 1, newData);\n    this.modalAutoReplyUpdateClose();\n    updateAutoReply(autoReplyCopy)\n    .then(() => {\n      this.setState({\n        autoReply: autoReplyCopy\n      }, () => {\n        console.log(\"NEW STATE: \"+JSON.stringify(this.state.autoReply));\n      });\n    });\n  }\n*/\n  radioChange = (e, { value }) => {\n    this.setState({ inputMsgType: value })\n  }\n\n  render() {\n    const modalType = this.state.type;\n    const radioChange = this.radioChange;\n\n    if(modalType === 'ADD_GROUP') {\n      return(\n        <Modal open={this.state.modalAutoReplyAddGroupShow} trigger={\n          <Button floated='right' icon labelPosition='left' primary size='small' onClick={this.modalAutoReplyAddGroupOpen}>\n            <Icon name='plus' /> 新增訊息群組\n          </Button>\n          }>\n          <Modal.Header>新增訊息群組</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              \n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalAutoReplyAddGroupSubmit} disabled={this.state.inputFirstname === '' || this.state.inputBirthMonth === '' || this.state.inputBirthDay === ''}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalAutoReplyAddGroupClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'ADD_KEY') {\n      return(\n        <Modal open={this.state.modalAutoReplyAddKeywordShow} trigger={\n          <Button floated='right' icon labelPosition='left' primary size='small' onClick={this.modalAutoReplyAddKeywordOpen}>\n            <Icon name='plus' /> 新增關鍵字\n          </Button>\n          }>\n          <Modal.Header>新增關鍵字</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <Form.Field>\n                <label>關鍵字</label>\n                <Input label={{ icon: 'asterisk' }} labelPosition='left corner' placeholder='關鍵字' onChange={e => {this.setState({inputKeyword: e.target.value});}} />\n              </Form.Field>   \n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalAutoReplyAddKeywordSubmit} disabled={this.state.inputKeyword === ''}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalAutoReplyAddKeywordClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'ADD_MSG') {\n      return(\n        <Modal open={this.state.modalAutoReplyAddMsgShow} trigger={\n          <Button floated='right' icon labelPosition='left' primary size='small' onClick={this.modalAutoReplyAddMsgOpen}>\n            <Icon name='plus' /> 新增回應訊息\n          </Button>\n          }>\n          <Modal.Header>新增訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <a href=\"https://devdocs.line.me/files/sticker_list.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">可以使用的貼圖清單</a>\n              <Form>\n                <Form.Group inline>\n                  <label>訊息類型</label>\n                  <Form.Radio\n                    label='文字'\n                    value='text'\n                    checked={this.state.inputMsgType === 'text'}\n                    onChange={radioChange}\n                  />\n                  <Form.Radio\n                    label='貼圖'\n                    value='sticker'\n                    checked={this.state.inputMsgType === 'sticker'}\n                    onChange={radioChange}\n                  />\n                </Form.Group>\n                <Form.TextArea label='文字訊息' placeholder='訊息內容' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'sticker'} onChange={e => {this.setState({inputMsgContent: e.target.value});}}/>\n                <Form.Group widths='equal'>\n                  <Form.Input fluid label='STKID' placeholder='STKID' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'text'} onChange={e => {this.setState({inputStkrId: e.target.value});}}/>\n                  <Form.Input fluid label='STKPKGID' placeholder='STKPKGID' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'text'} onChange={e => {this.setState({inputPkgId: e.target.value});}}/>\n                </Form.Group>\n              </Form>              \n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalAutoReplyAddMsgSubmit} disabled={this.state.inputMsgType === '' || (this.state.inputMsgType === 'text' && this.state.inputMsgContent === '') || (this.state.inputMsgType === 'sticker' && (this.state.inputPkgId === '' || this.state.inputStkrId === ''))}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalAutoReplyAddMsgClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'REMOVE_GROUP') {\n      return(\n        <Modal open={this.state.modalAutoReplyRemoveGroupShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='google plus' size='small' onClick={this.modalAutoReplyRemoveGroupOpen}>\n            <Icon name='trash alternate' /> 移除群組\n          </Button>\n          }>\n          <Modal.Header>移除群組</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <p>確定要刪除這個群組?</p>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='google plus' onClick={this.modalAutoReplyRemoveGroupSubmit}>\n                <Icon name='checkmark' /> 移除\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalAutoReplyRemoveGroupClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'REMOVE_KEY_MSG') {\n      return(\n        <Modal open={this.state.modalAutoReplyRemoveKeywordShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='google plus' size='small' onClick={this.modalAutoReplyRemoveKeywordOpen}>\n            <Icon name='trash alternate' /> 移除\n          </Button>\n          }>\n          <Modal.Header>移除訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <p>確定要刪除這則訊息?</p>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='google plus' onClick={this.modalAutoReplyRemoveKeywordSubmit}>\n                <Icon name='checkmark' /> 移除\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalAutoReplyRemoveKeywordClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n    \n    } else if(modalType === 'REMOVE_RPY_MSG') {\n      return(\n        <Modal open={this.state.modalAutoReplyRemoveMsgShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='google plus' size='small' onClick={this.modalAutoReplyRemoveMsgOpen}>\n            <Icon name='trash alternate' /> 移除\n          </Button>\n          }>\n          <Modal.Header>移除訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <p>確定要刪除這則訊息?</p>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='google plus' onClick={this.modalAutoReplyRemoveMsgSubmit}>\n                <Icon name='checkmark' /> 移除\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalAutoReplyRemoveMsgClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else {}\n  }\n}","import React, { Component}  from 'react';\nimport { Container, Icon, Table, Divider, Header, Segment } from 'semantic-ui-react'\nimport { getAutoReply } from '../MongoDB';\nimport AutoReplyModal from './AutoReplyModal';\n\nexport default class AutoReply extends Component {\n\n  state = {\n\t\tautoReplys: []\n  }\n  \n  componentDidMount() {\n    this.queryData();\n  }\n\n  queryData = () => {\n\t\tgetAutoReply().then(data => {\n\t\t\tconsole.log(\"[AutoReply queryData]\" + JSON.stringify(data));\n\t\t\tthis.setState({\n        autoReplys: [...data]\n      });\n    });\n  }\n\n  delayQuery = () => {\n    const queryData = this.queryData;\n    setTimeout(() => {\n      queryData();\n    }, 2000);\n  }\n\n  render() {\n    const autoReplys = this.state.autoReplys;\n    const delayQuery = this.delayQuery;\n\n    return(\n      <Segment raised style={{ margin: '3em' }}>\n\t\t\t\t<Divider horizontal>\n\t\t\t\t\t<Header as='h4'>\n\t\t\t\t\t\t<Icon name='file text' />\n\t\t\t\t\t\t  自動回應訊息(隨機回應一則訊息)\n\t\t\t\t\t</Header>\n\t\t\t\t</Divider>\n\t\t\t\t{autoReplys.map(function(autoReply, index){\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Table celled key={autoReply._id}>\n\t\t\t\t\t\t\t<Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell colSpan='5'>\n                    訊息群組#{index+1}\n                    <AutoReplyModal type='REMOVE_GROUP' autoReplyId={autoReply._id} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t</Table.HeaderCell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.HeaderCell style={{ width: '250px' }} colSpan='4'>關鍵字</Table.HeaderCell>\n                  <Table.HeaderCell style={{ width: '250px' }}>操作</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n\n\t\t\t\t\t\t\t<Table.Body>\n                {autoReply.key_words.map(function(keyword, idx){\n                  return (\n                    <Table.Row key={keyword.id} >\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell colSpan='4'>{keyword.text}</Table.Cell>\n                      <Table.Cell>\n                        <AutoReplyModal type='REMOVE_KEY_MSG' autoReplyId={autoReply._id} autoReplyKeyword={keyword} callback={delayQuery}/>\n                      </Table.Cell>\n                    </Table.Row>\n                  )\n                })}\n              </Table.Body>\n\n              <Table.Header>\n\t\t\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>類別</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell style={{ width: '250px' }}>回應訊息</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>STKID</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>STKPKGID</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell style={{ width: '250px' }}>操作</Table.HeaderCell>\n\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t</Table.Header>\n\n\t\t\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t\t\t{autoReply.response_msgs.map(function(msg, idx){\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Table.Row key={msg.id} >\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>{msg.isText ? \"文字\" : \"貼圖\"}</Table.Cell>\n                      {msg.isText ? <Table.Cell>{msg.text}</Table.Cell> : <Table.Cell/>}\n\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell/> : <Table.Cell>{msg.stkrId}</Table.Cell>}\n\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell/> : <Table.Cell>{msg.pkgId}</Table.Cell>}\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>\n                        <AutoReplyModal type='REMOVE_RPY_MSG' autoReplyId={autoReply._id} autoReplyMessage={msg} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</Table.Body>\n\n\t\t\t\t\t\t\t<Table.Footer fullWidth>\n\t\t\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell colSpan='5'>\n                    <AutoReplyModal type='ADD_MSG' autoReplyId={autoReply._id} callback={delayQuery}/>\n                    <AutoReplyModal type='ADD_KEY' autoReplyId={autoReply._id} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t</Table.Footer>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t)\n        })}\n        <Container style={{ height: '30px' }}>\n          <AutoReplyModal type='ADD_GROUP' callback={delayQuery}/>\n        </Container>\n\t\t\t</Segment>\n    )\n  }\n}","import React, { Component}  from 'react';\nimport { Segment, Checkbox, Grid, Divider, Header, Icon } from 'semantic-ui-react';\nimport { getSetting, updateSetting } from './MongoDB';\n\nexport default class Setting extends Component {\n\n  state = {\n    id: '',\n    remind_birthday: false,\n    remind_routine: false,\n    auto_reply: false,\n    monday_bless: false\n  }\n  \n  componentDidMount() {\n    this.queryData();\n  }\n\n  queryData = () => {\n\t\tgetSetting().then(data => {\n\t\t\tconsole.log(\"[Setting queryData]\" + JSON.stringify(data));\n\t\t\tthis.setState({\n        id: data[0]._id,\n        remind_birthday: !!data[0].remind_birthday,\n        remind_routine: !!data[0].remind_routine,\n        auto_reply: !!data[0].auto_reply,\n        monday_bless: !!data[0].monday_bless\n      });\n    });\n  }\n  \n  toggleBirthday = () => this.setState({ remind_birthday: !this.state.remind_birthday }, this.update);\n  toggleRoutine  = () => this.setState({ remind_routine:  !this.state.remind_routine  }, this.update);\n  toggleReply    = () => this.setState({ auto_reply:      !this.state.auto_reply      }, this.update);\n  toggleBless    = () => this.setState({ monday_bless:    !this.state.monday_bless    }, this.update);\n\n  update = () => {\n    const newData = {\n      id: this.state.id,\n      remind_birthday: this.state.remind_birthday,\n      remind_routine: this.state.remind_routine,\n      auto_reply: this.state.auto_reply,\n      monday_bless: this.state.monday_bless\n    }\n\n    console.log(JSON.stringify(newData));\n\n    updateSetting(newData);\n  }\n\n\trender() {\n    const { remind_birthday, remind_routine, auto_reply, monday_bless} = this.state;\n    const toggleBirthday = this.toggleBirthday;\n    const toggleRoutine  = this.toggleRoutine;\n    const toggleReply    = this.toggleReply;\n    const toggleBless    = this.toggleBless;\n\n    return (\n\t\t\t<Segment raised style={{ margin: '3em', paddingLeft: '3em', paddingRight: '3em'}}>\n        <Divider horizontal>\n\t\t\t\t\t<Header as='h4'>\n\t\t\t\t\t\t<Icon name='setting' />\n\t\t\t\t\t\t  功能開關\n\t\t\t\t\t</Header>\n\t\t\t\t</Divider>\n        <Grid columns={1} divided>\n          <Grid.Row>\n            <Checkbox toggle label='生日提醒' checked={remind_birthday} onChange={toggleBirthday}/>\n          </Grid.Row>\n          <Grid.Row>\n            <Checkbox toggle label='分享提醒' checked={remind_routine} onChange={toggleRoutine}/>\n          </Grid.Row>\n          <Grid.Row>\n            <Checkbox toggle label='自動回應' checked={auto_reply} onChange={toggleReply}/>\n          </Grid.Row>\n          <Grid.Row>\n            <Checkbox toggle label='週一祝福' checked={monday_bless} onChange={toggleBless}/>\n          </Grid.Row>\n        </Grid>\n\t\t\t</Segment>\n    );\n  }\n\t\n}","import React, { Component } from 'react';\nimport { Container, Form, Checkbox, Button, Label } from 'semantic-ui-react';\n\nexport default class Setting extends Component {\n\n  state = {\n    account: '',\n    password: '',\n    checked: false,\n    wrongPassword: false\n  }\n\n  handleFakeClick = () => {\n    this.setState({\n      wrongPassword: true\n    });\n  }\n\n  renderLabel = () => {\n    if(this.state.wrongPassword) {\n      return(\n        <Label as='a' basic color='red'  style={{ width: '100%', marginBottom: '10px'}}>帳號或密碼錯誤</Label>\n      )\n    } \n  }\n\n  render() {\n    const handleClick = this.props.callback;\n    const handleFakeClick = this.handleFakeClick;\n    const renderLabel = this.renderLabel;\n\n    return(\n      <Container style={{ height: '100vh', width: '100vw', display: 'flex'}}>\n        <Form style={{ height: '40%', width: '20%', margin: 'auto'}}>\n          <Form.Field>\n            <label>帳號</label>\n            <input placeholder='管理員帳號' onChange={e => {this.setState({account: e.target.value});}}/>\n          </Form.Field>\n          <Form.Field>\n            <label>密碼</label>\n            <input type='password' placeholder='管理員密碼' onChange={e => {this.setState({password: e.target.value});}}/>\n          </Form.Field>\n          <Form.Field>\n            <Checkbox label='我會小心操作' checked={this.state.checked} onChange={e => {this.setState({checked: !this.state.checked});}}/>\n          </Form.Field>\n          {renderLabel()}\n          <Button onClick={handleFakeClick} primary style={{ width: '100%' }} disabled={!this.state.checked || this.state.account === '' || this.state.password === ''}>登入</Button>\n        </Form>\n        <Button onClick={handleClick} style={{ position: 'absolute', right: '0px', height: '100px', width: '100px', background: 'white' }}></Button>\n      </Container>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { LogoImage } from './style';\nimport { Grid, Menu, Header, Container } from 'semantic-ui-react'\nimport Birthday from './../Birthday';\nimport Routine from './../Routine';\nimport MondayBless from './../MondayBless/MondayBless';\nimport AutoReply from './../AutoReply/AutoReply';\nimport Setting from './../Setting';\nimport FakePage from './../FakePage';\nimport 'semantic-ui-css/semantic.min.css';\n\nclass App extends Component {\n\n  state = {\n    clickCount: 0,\n    activeItem: '生日提醒' \n  }\n\n  handleHiddenBtnClick = (e, { name }) => this.setState({ clickCount: this.state.clickCount +1 });\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n  renderMenu = () => {\n    const { activeItem } = this.state;\n\n    return (\n      <Container>\n        <LogoImage src={logo}/>\n        <Header as='h2' style={{ 'margin': '10px', 'color': 'white' }}>Control Center</Header>\n        <Header as='h4' style={{ 'margin': '10px', 'color': 'white' }}>The Backend of Linebot.</Header>\n        <Menu fluid vertical tabular style={{ 'marginTop': '50px' }}>\n          <Menu.Item \n            name='生日提醒' \n            active={activeItem === '生日提醒'} \n            onClick={this.handleItemClick} \n          />\n          <Menu.Item \n            name='分享提醒' \n            active={activeItem === '分享提醒'} \n            onClick={this.handleItemClick}\n          />\n          <Menu.Item\n            name='自動回應'\n            active={activeItem === '自動回應'}\n            onClick={this.handleItemClick}\n          />\n          <Menu.Item\n            name='週一祝福'\n            active={activeItem === '週一祝福'}\n            onClick={this.handleItemClick}\n          />\n          <Menu.Item\n            name='功能開關'\n            active={activeItem === '功能開關'}\n            onClick={this.handleItemClick}\n          />\n        </Menu>\n      </Container>\n    )\n  }\n\n  renderChild = () => {\n    const { activeItem } = this.state;\n\n    if(activeItem === '生日提醒') {\n      return (\n        <Birthday/>\n      )\n    } else if(activeItem === '分享提醒') {\n      return (\n        <Routine/>\n      )\n    } else if(activeItem === '自動回應') {\n      return (\n        <AutoReply/>\n      )\n    } else if(activeItem === '週一祝福') {\n      return (\n        <MondayBless/>\n      )\n    } else if(activeItem === '功能開關') {\n      return (\n        <Setting/>\n      )\n    }\n  }\n\n  renderDashboard = () => {\n    const renderChild = this.renderChild;\n    const renderMenu = this.renderMenu;\n\n    return (\n      <Grid>\n        <Grid.Column width={3} style={{ background: '#4682B4', paddingRight: 0, height: '100vh' }}>\n          {renderMenu()}\n        </Grid.Column>\n        <Grid.Column stretched width={12}>\n          {renderChild()}\n        </Grid.Column>\n      </Grid>\n    );\n  }\n\n  render() {\n    const renderDashboard = this.renderDashboard;\n    const handleHiddenBtnClick = this.handleHiddenBtnClick;\n\n    if(this.state.clickCount > 10) {\n      return(\n        <Container>\n          {renderDashboard()}\n        </Container>\n      )\n    } else {\n      return(\n        <FakePage callback={handleHiddenBtnClick}/>\n      )\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}