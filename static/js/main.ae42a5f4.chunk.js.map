{"version":3,"sources":["Components/App/logo.svg","Components/App/style.js","Components/MongoDB.js","Components/BirthdayUser/UserModal.js","Components/BirthdayUser/BirthdayUser.js","Components/BirthdayPrayer/PrayerModal.js","Components/BirthdayPrayer/BirthdayPrayer.js","Components/Birthday.js","Components/RoutineRule/RoutineModal.js","Components/RoutineRule/RoutineRule.js","Components/RoutineReminder/ReminderModal.js","Components/RoutineReminder/RoutineReminder.js","Components/Routine.js","Components/MondayBless/BlessModal.js","Components/MondayBless/MondayBless.js","Components/AutoReply/AutoReplyModal.js","Components/AutoReply/AutoReply.js","Components/Setting.js","Components/FakePage.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LogoMove","keyframes","_templateObject","LogoImage","styled","img","_templateObject2","BASE_URL","API_KEY","dbName","BIRTHDAY_PERSON_URL","BIRTHDAY_PRAYER_URL","ROUTINE_PERSON_URL","ROUTINE_REMIND_URL","MONDAY_BLESS_URL","AUTO_RESPONSE_URL","SETTING_URL","getBirthdayPerson","Promise","resolve","reject","axios","get","params","s","JSON","stringify","birth_month","birth_day","apiKey","then","response","console","log","data","catch","error","addBirthdayPerson","newData","post","_id","id","name","updateBirthdayPerson","put","removeBirthdayPerson","personId","delete","getBirthdayPrayer","addBirthdayPrayer","msgs","Object","toConsumableArray","updateBirthdayPrayer","removeBirthdayPrayer","prayerId","getRoutineRule","addRoutineRule","month","routines","updateRoutineRule","removeRoutineRule","reminderId","getRoutineReminder","addRoutineReminder","updateRoutineReminder","removeRoutineReminder","getMondayBless","addMondayBless","updateMondayBless","removeMondayBless","mondayBlessId","getAutoReply","addAutoReply","key_words","response_msgs","updateAutoReply","removeAutoReply","autoReplyId","getSetting","updateSetting","remind_birthday","remind_routine","auto_reply","monday_bless","uuidv4","require","UserModal","state","type","_this","props","person","modalUserAddShow","modalUserRemoveShow","modalUserUpdateShow","inputName","inputBirthMonth","inputBirthDay","modalUserAddOpen","setState","modalUserAddClose","callback","modalUserAddSubmit","parseInt","modalUserRemoveOpen","modalUserRemoveClose","modalUserRemoveSubmit","modalUserUpdateOpen","modalUserUpdateClose","modalUserUpdateSubmit","_this2","this","modalType","personInfo","react_default","a","createElement","Modal","open","trigger","Button","floated","icon","labelPosition","primary","size","onClick","Icon","Header","Content","Description","Form","Field","Input","label","placeholder","onChange","e","target","value","Actions","style","padding","color","disabled","inputFirstname","toString","Component","BirthdayUser","birthdayPeople","queryData","delayQuery","setTimeout","people","Segment","raised","Divider","horizontal","as","Table","celled","Row","HeaderCell","width","Body","map","key","Cell","UserModal_UserModal","Footer","fullWidth","colSpan","PrayerModal","prayerMsgs","prayerMsg","modalPrayerAddGroupShow","modalPrayerAddMsgShow","modalPrayerRemoveGroupShow","modalPrayerRemoveMsgShow","modalPrayerUpdateShow","inputMsgType","inputMsgContent","inputPkgId","inputStkrId","modalPrayerAddGroupOpen","modalPrayerAddGroupClose","modalPrayerAddGroupSubmit","modalPrayerAddMsgOpen","msgGroup","find","group","modalPrayerAddMsgClose","modalPrayerAddMsgSubmit","isText","text","pkgId","stkrId","push","modalPrayerRemoveGroupOpen","modalPrayerRemoveGroupClose","modalPrayerRemoveGroupSubmit","modalPrayerRemoveMsgOpen","modalPrayerRemoveMsgClose","modalPrayerRemoveMsgSubmit","updateIdx","findIndex","item","splice","modalPrayerUpdateOpen","modalPrayerUpdateClose","modalPrayerUpdateSubmit","radioChange","_ref","href","rel","Group","inline","Radio","checked","TextArea","widths","fluid","BirthdayPrayer","birthdayPrayers","prayers","prayer","index","PrayerModal_PrayerModal","msg","idx","Container","height","Birthday","BirthdayUser_BirthdayUser","BirthdayPrayer_BirthdayPrayer","RoutineModal","rule","modalRuleAddShow","modalRuleRemoveShow","modalRuleUpdateShow","inputRuleType","inputWeekday1","inputWeekday2","inputWeekday3","inputWeekday4","inputWeekday5","inputWeekday6","modalRuleAddOpen","modalRuleAddClose","modalRuleAddSubmit","week_day","modalRuleRemoveOpen","modalRuleRemoveClose","modalRuleRemoveSubmit","modalRuleUpdateOpen","ruleGroup","modalRuleUpdateClose","modalRuleUpdateSubmit","ruleInfo","RoutineRule","routineRules","rules","RoutineModal_RoutineModal","ReminderModal","reminderMsgs","reminderMsg","msgId","modalReminderAddGroupShow","modalReminderAddMsgShow","modalReminderRemoveGroupShow","modalReminderRemoveMsgShow","modalReminderUpdateShow","modalReminderAddGroupOpen","modalReminderAddGroupClose","modalReminderAddGroupSubmit","modalReminderAddMsgOpen","modalReminderAddMsgClose","modalReminderAddMsgSubmit","modalReminderRemoveGroupOpen","modalReminderRemoveGroupClose","modalReminderRemoveGroupSubmit","modalReminderRemoveMsgOpen","modalReminderRemoveMsgClose","modalReminderRemoveMsgSubmit","modalReminderUpdateOpen","modalReminderUpdateClose","modalReminderUpdateSubmit","RoutineReminder","routineReminders","reminders","reminder","ReminderModal_ReminderModal","Routine","RoutineRule_RoutineRule","RoutineReminder_RoutineReminder","BlessModal","blessId","blessMsgs","blessMsg","modalBlessAddGroupShow","modalBlessAddMsgShow","modalBlessRemoveGroupShow","modalBlessRemoveMsgShow","modalBlessUpdateShow","modalBlessAddGroupOpen","modalBlessAddGroupClose","modalBlessAddGroupSubmit","modalBlessAddMsgOpen","modalBlessAddMsgClose","modalBlessAddMsgSubmit","modalBlessRemoveGroupOpen","modalBlessRemoveGroupClose","modalBlessRemoveGroupSubmit","modalBlessRemoveMsgOpen","modalBlessRemoveMsgClose","modalBlessRemoveMsgSubmit","modalBlessUpdateOpen","modalBlessUpdateClose","modalBlessUpdateSubmit","MondayBless","mondayBlesses","blesses","margin","bless","BlessModal_BlessModal","AutoReplyModal","autoReplyKeywords","autoReplyMessages","autoReplyKeyword","autoReplyMessage","modalAutoReplyAddGroupShow","modalAutoReplyAddMsgShow","modalAutoReplyAddKeywordShow","modalAutoReplyRemoveGroupShow","modalAutoReplyRemoveKeywordShow","modalAutoReplyRemoveMsgShow","modalAutoReplyUpdateShow","inputKeyword","modalAutoReplyAddGroupOpen","modalAutoReplyAddGroupClose","modalAutoReplyAddGroupSubmit","modalAutoReplyAddMsgOpen","modalAutoReplyAddMsgClose","modalAutoReplyAddMsgSubmit","newMsg","modalAutoReplyAddKeywordOpen","modalAutoReplyAddKeywordClose","modalAutoReplyAddKeywordSubmit","keywords","newKeyword","modalAutoReplyRemoveGroupOpen","modalAutoReplyRemoveGroupClose","modalAutoReplyRemoveGroupSubmit","modalAutoReplyRemoveMsgOpen","modalAutoReplyRemoveMsgClose","modalAutoReplyRemoveMsgSubmit","modalAutoReplyRemoveKeywordOpen","modalAutoReplyRemoveKeywordClose","modalAutoReplyRemoveKeywordSubmit","AutoReply","autoReplys","autoReply","AutoReplyModal_AutoReplyModal","keyword","Setting","toggleBirthday","update","toggleRoutine","toggleReply","toggleBless","_this$state","paddingLeft","paddingRight","Grid","columns","divided","Checkbox","toggle","account","password","wrongPassword","handleFakeClick","renderLabel","Label","basic","marginBottom","handleClick","display","position","right","background","App","clickCount","activeItem","handleHiddenBtnClick","handleItemClick","_ref2","renderMenu","src","logo","Menu","vertical","tabular","marginTop","Item","active","renderChild","Birthday_Birthday","Routine_Routine","AutoReply_AutoReply","MondayBless_MondayBless","Setting_Setting","renderDashboard","Column","stretched","FakePage_Setting","Boolean","window","location","hostname","match","ReactDOM","render","Components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae42a5f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import styled, { keyframes } from 'styled-components';\n\nconst LogoMove = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const LogoImage = styled.img`\n\theight: 75px;\n\twidth: 75px;\n\tanimation: ${LogoMove} 20s infinite;\n`;","import axios from 'axios';\n\n//Mongo DB\nconst BASE_URL = 'https://api.mlab.com/api/1/';\nconst API_KEY = 'MfIcJH19fIUm4phoxgzDLfAPsP0q8TSd';\nconst dbName = 'heroku_hq9fqmdz';\n\n//Collections\nconst BIRTHDAY_PERSON = 'birthday_person';\nconst BIRTHDAY_PRAYER = 'birthday_prayer';\nconst ROUTINE_PERSON = 'routine_person';\nconst ROUTINE_REMIND = 'routine_remind';\nconst MONDAY_BLESS = 'monday_bless';\nconst AUTO_RESPONSE = 'auto_response';\nconst SETTING = 'setting';\n\n//Query URLs\nconst BIRTHDAY_PERSON_URL = BASE_URL + 'databases/' + dbName + '/collections/' + BIRTHDAY_PERSON;\nconst BIRTHDAY_PRAYER_URL = BASE_URL + 'databases/' + dbName + '/collections/' + BIRTHDAY_PRAYER;\nconst ROUTINE_PERSON_URL = BASE_URL + 'databases/' + dbName + '/collections/' + ROUTINE_PERSON;\nconst ROUTINE_REMIND_URL = BASE_URL + 'databases/' + dbName + '/collections/' + ROUTINE_REMIND;\nconst MONDAY_BLESS_URL = BASE_URL + 'databases/' + dbName + '/collections/' + MONDAY_BLESS;\nconst AUTO_RESPONSE_URL = BASE_URL + 'databases/' + dbName + '/collections/' + AUTO_RESPONSE;\nconst SETTING_URL = BASE_URL + 'databases/' + dbName + '/collections/' + SETTING;\n\n\n//------------------\n//Birthday person\n//------------------\nexport const getBirthdayPerson = function() {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.get(BIRTHDAY_PERSON_URL, {\n\t\t\t\tparams: {\n\t\t\t\t\ts: JSON.stringify({\"birth_month\": 1, \"birth_day\": 1}),\n\t\t\t\t\tapiKey: API_KEY\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[getBirthdayPerson]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[getBirthdayPerson]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\nexport const addBirthdayPerson = function(newData) {\n\t  return new Promise((resolve, reject) => {\n\t\t  axios.post(BIRTHDAY_PERSON_URL + '?apiKey=' + API_KEY, {\n      _id: newData.id,\n\t\t  name: newData.name,\n\t\t  birth_month: newData.birth_month,\n\t\t  birth_day: newData.birth_day\n\t\t})\n\t\t.then(function (response) {\n\t\t\tconsole.log(\"[addBirthdayPerson]\" + response);\n\t\t\tresolve(response.data);\n\t\t})\n\t\t.catch(function (error) {\n\t\t\tconsole.log(\"[addBirthdayPerson]\" + error);\n\t\t\treject(error);\n\t\t});\n\t})\n}\n\nexport const updateBirthdayPerson = function(newData) {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.put(BIRTHDAY_PERSON_URL + '/' + newData.id + '?apiKey=' + API_KEY, {\n        name: newData.name,\n        birth_month: newData.birth_month,\n        birth_day: newData.birth_day\n\t\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[updateBirthdayPerson]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[updateBirthdayPerson]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\nexport const removeBirthdayPerson = function(personId) {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.delete(BIRTHDAY_PERSON_URL + '/' + personId + '?apiKey=' + API_KEY)\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[removeBirthdayPerson]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[removeBirthdayPerson]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\n//------------------\n//Birthday prayer\n//------------------\nexport const getBirthdayPrayer = function() {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.get(BIRTHDAY_PRAYER_URL, {\n\t\t\t\tparams: {\n\t\t\t\t\tapiKey: API_KEY\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[getBirthdayPrayer]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[getBirthdayPrayer]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\nexport const addBirthdayPrayer = function(newData) {\n  return new Promise((resolve, reject) => {\n      axios.post(BIRTHDAY_PRAYER_URL + '?apiKey=' + API_KEY, {\n      _id: newData.id,\n      msgs: [...newData.msgs]\n    })\n    .then(function (response) {\n      console.log(\"[addBirthdayPrayer]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[addBirthdayPrayer]\" + error);\n      reject(error);\n    });\n  })\n}\n\nexport const updateBirthdayPrayer = function(id, msgs) {\nreturn new Promise((resolve, reject) => {\n  axios.put(BIRTHDAY_PRAYER_URL + '/' + id + '?apiKey=' + API_KEY, {\n      _id: id,\n      msgs: [...msgs]\n    })\n    .then(function (response) {\n      console.log(\"[updateBirthdayPrayer]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[updateBirthdayPrayer]\" + error);\n      reject(error);\n    });\n  })\n}\n\nexport const removeBirthdayPrayer = function(prayerId) {\nreturn new Promise((resolve, reject) => {\n  axios.delete(BIRTHDAY_PRAYER_URL + '/' + prayerId + '?apiKey=' + API_KEY)\n    .then(function (response) {\n      console.log(\"[removeBirthdayPrayer]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[removeBirthdayPrayer]\" + error);\n      reject(error);\n    });\n})\n}\n\n//------------------\n//Routine rule\n//------------------\nexport const getRoutineRule = function() {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.get(ROUTINE_PERSON_URL, {\n\t\t\t\tparams: {\n\t\t\t\t\tapiKey: API_KEY\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[getRoutineRule]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[getRoutineRule]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\nexport const addRoutineRule = function(newData) {\n  return new Promise((resolve, reject) => {\n      axios.post(ROUTINE_PERSON_URL + '?apiKey=' + API_KEY, {\n      _id: newData.id,\n\t\t\tmonth: newData.month,\n\t\t\troutines: newData.routines\n    })\n    .then(function (response) {\n      console.log(\"[addRoutineRule]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[addRoutineRule]\" + error);\n      reject(error);\n    });\n  })\n}\n\nexport const updateRoutineRule = function(newData) {\n\treturn new Promise((resolve, reject) => {\n  \taxios.put(ROUTINE_PERSON_URL + '/' + newData.id + '?apiKey=' + API_KEY, {\n      _id: newData.id,\n\t\t\tmonth: newData.month,\n\t\t\troutines: newData.routines\n    })\n    .then(function (response) {\n      console.log(\"[updateRoutineRule]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[updateRoutineRule]\" + error);\n      reject(error);\n    });\n  })\n}\n\nexport const removeRoutineRule = function(reminderId) {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.delete(ROUTINE_PERSON_URL + '/' + reminderId + '?apiKey=' + API_KEY)\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[removeRoutineRule]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[removeRoutineRule]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\n//------------------\n//Routine reminder\n//------------------\nexport const getRoutineReminder = function() {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.get(ROUTINE_REMIND_URL, {\n\t\t\t\tparams: {\n\t\t\t\t\tapiKey: API_KEY\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[getRoutineReminder]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[getRoutineReminder]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\nexport const addRoutineReminder = function(newData) {\n  return new Promise((resolve, reject) => {\n      axios.post(ROUTINE_REMIND_URL + '?apiKey=' + API_KEY, {\n      _id: newData.id,\n      msgs: [...newData.msgs]\n    })\n    .then(function (response) {\n      console.log(\"[addRoutineReminder]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[addRoutineReminder]\" + error);\n      reject(error);\n    });\n  })\n}\n\nexport const updateRoutineReminder = function(id, msgs) {\n\treturn new Promise((resolve, reject) => {\n  \taxios.put(ROUTINE_REMIND_URL + '/' + id + '?apiKey=' + API_KEY, {\n      _id: id,\n      msgs: [...msgs]\n    })\n    .then(function (response) {\n      console.log(\"[updateRoutineReminder]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[updateRoutineReminder]\" + error);\n      reject(error);\n    });\n  })\n}\n\nexport const removeRoutineReminder = function(reminderId) {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.delete(ROUTINE_REMIND_URL + '/' + reminderId + '?apiKey=' + API_KEY)\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[removeRoutineReminder]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[removeRoutineReminder]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\n//------------------\n//Monday Bless\n//------------------\nexport const getMondayBless = function() {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.get(MONDAY_BLESS_URL, {\n\t\t\t\tparams: {\n\t\t\t\t\tapiKey: API_KEY\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[getMondayBless]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[getMondayBless]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\nexport const addMondayBless = function(newData) {\n  return new Promise((resolve, reject) => {\n      axios.post(MONDAY_BLESS_URL + '?apiKey=' + API_KEY, {\n      _id: newData.id,\n      msgs: [...newData.msgs]\n    })\n    .then(function (response) {\n      console.log(\"[addMondayBless]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[addMondayBless]\" + error);\n      reject(error);\n    });\n  })\n}\n\nexport const updateMondayBless = function(id, msgs) {\n\treturn new Promise((resolve, reject) => {\n  \taxios.put(MONDAY_BLESS_URL + '/' + id + '?apiKey=' + API_KEY, {\n      _id: id,\n      msgs: [...msgs]\n    })\n    .then(function (response) {\n      console.log(\"[updateMondayBless]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[updateMondayBless]\" + error);\n      reject(error);\n    });\n  })\n}\n\nexport const removeMondayBless = function(mondayBlessId) {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.delete(MONDAY_BLESS_URL + '/' + mondayBlessId + '?apiKey=' + API_KEY)\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[removeMondayBless]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[removeMondayBless]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\n//------------------\n//Auto Reply\n//------------------\nexport const getAutoReply = function() {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.get(AUTO_RESPONSE_URL, {\n\t\t\t\tparams: {\n\t\t\t\t\tapiKey: API_KEY\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[getAutoReply]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[getAutoReply]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\nexport const addAutoReply = function(newData) {\n  return new Promise((resolve, reject) => {\n      axios.post(AUTO_RESPONSE_URL + '?apiKey=' + API_KEY, {\n      _id: newData.id,\n\t\t\tkey_words: [...newData.key_words],\n\t\t\tresponse_msgs: [...newData.response_msgs]\n    })\n    .then(function (response) {\n      console.log(\"[addAutoReply]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[addAutoReply]\" + error);\n      reject(error);\n    });\n  })\n}\n\nexport const updateAutoReply = function(newData) {\n\treturn new Promise((resolve, reject) => {\n  \taxios.put(AUTO_RESPONSE_URL + '/' + newData.id + '?apiKey=' + API_KEY, {\n      _id: newData.id,\n      key_words: [...newData.key_words],\n\t\t\tresponse_msgs: [...newData.response_msgs]\n    })\n    .then(function (response) {\n      console.log(\"[updateAutoReply]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[updateAutoReply]\" + error);\n      reject(error);\n    });\n  })\n}\n\nexport const removeAutoReply = function(autoReplyId) {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.delete(AUTO_RESPONSE_URL + '/' + autoReplyId + '?apiKey=' + API_KEY)\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[removeAutoReply]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[removeAutoReply]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\n//------------------\n//Setting\n//------------------\nexport const getSetting = function() {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.get(SETTING_URL, {\n\t\t\t\tparams: {\n\t\t\t\t\tapiKey: API_KEY\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[getSetting]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[getSetting]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\nexport const updateSetting = function(newData) {\n\treturn new Promise((resolve, reject) => {\n  \taxios.put(SETTING_URL + '/' + newData.id + '?apiKey=' + API_KEY, {\n      _id: newData.id,\n      remind_birthday: newData.remind_birthday,\n\t\t\tremind_routine: newData.remind_routine,\n\t\t\tauto_reply: newData.auto_reply,\n\t\t\tmonday_bless: newData.monday_bless\n    })\n    .then(function (response) {\n      console.log(\"[updateSetting]\" + response);\n      resolve(response.data);\n    })\n    .catch(function (error) {\n      console.log(\"[updateSetting]\" + error);\n      reject(error);\n    });\n  })\n}\n","import React, { Component } from 'react';\nimport { Button, Icon, Modal, Form, Input } from 'semantic-ui-react'\nimport { addBirthdayPerson, updateBirthdayPerson, removeBirthdayPerson } from '../MongoDB';\nconst uuidv4 = require('uuid/v4');\n\nexport default class UserModal extends Component {\n\n  state = {\n    type: this.props.type,\n    person: this.props.person || '',\n    modalUserAddShow: false,\n    modalUserRemoveShow: false,\n    modalUserUpdateShow: false,\n    inputName: '',\n    inputBirthMonth: '',\n    inputBirthDay: '',\n  }\n  \n  modalUserAddOpen = () => {\n    this.setState({ modalUserAddShow: true });\n  }\n\n  modalUserAddClose = () => {\n    this.setState({ modalUserAddShow: false }, this.props.callback);\n  }\n\n  modalUserAddSubmit = () => {\n    const newData = {\n      id: uuidv4(),\n      name: this.state.inputName,\n      birth_month: parseInt(this.state.inputBirthMonth),\n      birth_day: parseInt(this.state.inputBirthDay)\n    }\n    addBirthdayPerson(newData);\n    this.modalUserAddClose();\n  }\n\n  modalUserRemoveOpen = () => {\n    this.setState({ modalUserRemoveShow: true });\n  }\n\n  modalUserRemoveClose = () => {\n    this.setState({ modalUserRemoveShow: false }, this.props.callback);\n  }\n\n  modalUserRemoveSubmit = () => {\n    removeBirthdayPerson(this.state.person._id);\n    this.modalUserRemoveClose();\n  }\n\n  modalUserUpdateOpen = () => {\n    this.setState({ modalUserUpdateShow: true });\n  }\n\n  modalUserUpdateClose = () => {\n    this.setState({ modalUserUpdateShow: false }, this.props.callback );\n  }\n\n  modalUserUpdateSubmit = () => {\n    const newData = {\n      id: this.state.person._id,\n      name: (this.state.inputName === '') ? this.state.person.name : this.state.inputName,\n      birth_month: (this.state.inputBirthMonth === '') ? parseInt(this.state.person.birth_month) : parseInt(this.state.inputBirthMonth),\n      birth_day: (this.state.inputBirthDay === '') ? parseInt(this.state.person.birth_day) : parseInt(this.state.inputBirthDay)\n    }\n    updateBirthdayPerson(newData);\n    this.modalUserUpdateClose();\n  }\n\n  render() {\n    const modalType = this.state.type;\n    const personInfo = this.state.person;\n\n    if(modalType === 'ADD') {\n      return(\n        <Modal open={this.state.modalUserAddShow} trigger={\n          <Button floated='right' icon labelPosition='left' primary size='small' onClick={this.modalUserAddOpen}>\n            <Icon name='user plus' /> 新增生日提醒\n          </Button>\n          }>\n          <Modal.Header>新增生日提醒</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <Form>\n                <Form.Field>\n                  <label>名字</label>\n                  <Input label={{ icon: 'asterisk' }} labelPosition='left corner' placeholder='名字' onChange={e => {this.setState({inputName: e.target.value});}} />\n                </Form.Field>\n                <Form.Field>\n                  <label>月份</label>\n                  <Input label={{ icon: 'asterisk' }} labelPosition='left corner' placeholder='月份' onChange={e => {this.setState({inputBirthMonth: e.target.value});}} />\n                </Form.Field>\n                <Form.Field>\n                  <label>日期</label>\n                  <Input label={{ icon: 'asterisk' }} labelPosition='left corner' placeholder='日期' onChange={e => {this.setState({inputBirthDay: e.target.value});}}/>\n                </Form.Field>\n              </Form>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalUserAddSubmit} disabled={this.state.inputFirstname === '' || this.state.inputBirthMonth === '' || this.state.inputBirthDay === ''}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalUserAddClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'UPDATE') {\n      return(\n        <Modal open={this.state.modalUserUpdateShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='vk' size='small' onClick={this.modalUserUpdateOpen}>\n            <Icon name='pencil alternate' /> 編輯\n          </Button>\n          }>\n          <Modal.Header>編輯生日提醒</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <Form>\n                <Form.Field>\n                  <label>名字</label>\n                  <input placeholder={personInfo.name.toString()} onChange={e => {this.setState({inputName: e.target.value});}} />\n                </Form.Field>\n                <Form.Field>\n                  <label>月份</label>\n                  <input placeholder={personInfo.birth_month.toString()} onChange={e => {this.setState({inputBirthMonth: e.target.value});}}/>\n                </Form.Field>\n                <Form.Field>\n                  <label>日期</label>\n                  <input placeholder={personInfo.birth_day.toString()} onChange={e => {this.setState({inputBirthDay: e.target.value});}} />\n                </Form.Field>\n              </Form>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalUserUpdateSubmit}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalUserUpdateClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n    } else if(modalType === 'REMOVE') {\n      return(\n        <Modal open={this.state.modalUserRemoveShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='google plus' size='small' onClick={this.modalUserRemoveOpen}>\n            <Icon name='trash alternate' /> 移除\n          </Button>\n          }>\n          <Modal.Header>移除生日提醒</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <p>確定要刪除{personInfo.name}的生日?</p>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='google plus' onClick={this.modalUserRemoveSubmit}>\n                <Icon name='checkmark' /> 移除\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalUserRemoveClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else {}\n  }\n}","import React, { Component}  from 'react';\nimport { Icon, Table, Divider, Header, Segment } from 'semantic-ui-react'\nimport { getBirthdayPerson } from '../MongoDB';\nimport UserModal from './UserModal';\n\nexport default class BirthdayUser extends Component {\n\n  state = {\n\t\tbirthdayPeople: []\n  }\n  \n  componentDidMount() {\n    this.queryData();\n  }\n\n  queryData = () => {\n\t\tgetBirthdayPerson().then(data => {\n      console.log(\"[BirthdayUser queryData]\" + JSON.stringify(data));\n      this.setState({\n        birthdayPeople: [...data]\n      });\n    });\n  }\n\n  delayQuery = () => {\n    const queryData = this.queryData;\n    setTimeout(() => {\n      queryData();\n    }, 2000);\n  }\n\n  render() {\n    const people = this.state.birthdayPeople;\n    const delayQuery = this.delayQuery;\n\n    return(\n      <Segment raised>\n        <Divider horizontal>\n          <Header as='h4'>\n            <Icon name='user' />\n              生日提醒列表\n          </Header>\n        </Divider>\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>名字</Table.HeaderCell>\n              <Table.HeaderCell>月份</Table.HeaderCell>\n              <Table.HeaderCell>日期</Table.HeaderCell>\n              <Table.HeaderCell style={{ width: '250px' }}>操作</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {people.map(function(person){\n              return (\n                <Table.Row key={person._id} >\n                  <Table.Cell>{person.name}</Table.Cell>\n                  <Table.Cell>{person.birth_month}</Table.Cell>\n                  <Table.Cell>{person.birth_day}</Table.Cell>\n                  <Table.Cell>\n                    <UserModal type='REMOVE' person={person} callback={delayQuery}/>\n                    <UserModal type='UPDATE' person={person} callback={delayQuery}/>\n                  </Table.Cell>\n                </Table.Row>\n              );\n            })}\n          </Table.Body>\n\n          <Table.Footer fullWidth>\n            <Table.Row>\n              <Table.HeaderCell colSpan='4'>\n                <UserModal type='ADD' callback={delayQuery}/>\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Footer>\n        </Table>\n      </Segment>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport { Button, Icon, Modal, Form } from 'semantic-ui-react'\nimport { getBirthdayPrayer, addBirthdayPrayer, updateBirthdayPrayer, removeBirthdayPrayer } from '../MongoDB';\nconst uuidv4 = require('uuid/v4');\n\nexport default class PrayerModal extends Component {\n\n  state = {\n    type: this.props.type,\n    prayerId: this.props.prayerId || '',\n    prayerMsgs: [],\n    prayerMsg: this.props.prayerMsg || '',\n    modalPrayerAddGroupShow: false,\n    modalPrayerAddMsgShow: false,\n    modalPrayerRemoveGroupShow: false,\n    modalPrayerRemoveMsgShow: false,\n    modalPrayerUpdateShow: false,\n    inputMsgType: '',\n    inputMsgContent: '',\n    inputPkgId: '',\n    inputStkrId: '',\n  }\n  \n  modalPrayerAddGroupOpen = () => {\n    this.setState({ modalPrayerAddGroupShow: true });\n  }\n\n  modalPrayerAddGroupClose = () => {\n    this.setState({ modalPrayerAddGroupShow: false }, this.props.callback );\n  }\n\n  modalPrayerAddGroupSubmit = () => {\n    const newData = {\n      id: uuidv4(),\n      msgs: []\n    }\n    addBirthdayPrayer(newData);\n    this.modalPrayerAddGroupClose();\n  }\n\n  modalPrayerAddMsgOpen = () => {\n    this.setState({\n      modalPrayerAddMsgShow: true,\n    }, () => {\n      getBirthdayPrayer().then(data => {\n        const msgGroup = data.find(group => group._id === this.state.prayerId);\n        this.setState({\n          prayerMsgs: [...msgGroup.msgs]\n        });\n      });\n    });\n  }\n\n  modalPrayerAddMsgClose = () => {\n    this.setState({ modalPrayerAddMsgShow: false }, this.props.callback );\n  }\n\n  modalPrayerAddMsgSubmit = () => {\n    let msgs = [...this.state.prayerMsgs];\n    let newData = '';\n    const isText = (this.state.inputMsgType === 'text') ? true : false;\n\n    if(isText) {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        text: this.state.inputMsgContent\n      }\n    } else {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        pkgId: this.state.inputPkgId,\n        stkrId: this.state.inputStkrId\n      }\n    }\n\n    msgs.push(newData);\n    updateBirthdayPrayer(this.state.prayerId, msgs)\n    .then(() => {\n      this.setState({\n        prayerMsgs: msgs\n      }, () => {\n        console.log(\"NEW STATE: \"+JSON.stringify(this.state.prayerMsgs));\n        this.modalPrayerAddMsgClose();\n      });\n    });\n  }\n\n  modalPrayerRemoveGroupOpen = () => {\n    this.setState({ modalPrayerRemoveGroupShow: true });\n  }\n\n  modalPrayerRemoveGroupClose = () => {\n    this.setState({ modalPrayerRemoveGroupShow: false }, this.props.callback );\n  }\n\n  modalPrayerRemoveGroupSubmit = () => {\n    removeBirthdayPrayer(this.state.prayerId);\n    this.modalPrayerRemoveGroupClose();\n  }\n\n  modalPrayerRemoveMsgOpen = () => {\n    this.setState({\n      modalPrayerRemoveMsgShow: true\n    }, () => {\n      getBirthdayPrayer().then(data => {\n        console.log(\"[PrayerModal queryData]\" + JSON.stringify(data));\n        const msgGroup = data.find(group => group._id === this.state.prayerId);\n        this.setState({\n          prayerMsgs: [...msgGroup.msgs],\n        });\n      });\n    });\n  }\n\n  modalPrayerRemoveMsgClose = () => {\n    this.setState({ modalPrayerRemoveMsgShow: false }, this.props.callback );\n  }\n\n  modalPrayerRemoveMsgSubmit = () => {\n    let msgs = [...this.state.prayerMsgs];\n    const updateIdx = msgs.findIndex(item => item.id === this.state.prayerMsg.id);\n    msgs.splice(updateIdx, 1);\n    updateBirthdayPrayer(this.state.prayerId, msgs)\n    .then(() => {\n      this.setState({\n        prayerMsgs: msgs\n      }, () => {\n        console.log(\"NEW STATE: \"+JSON.stringify(this.state.prayerMsgs));\n        this.modalPrayerRemoveMsgClose();\n      });\n    });\n  }\n\n  modalPrayerUpdateOpen = () => {\n    this.setState({\n      modalPrayerUpdateShow: true\n    }, () => {\n      getBirthdayPrayer().then(data => {\n        console.log(\"[PrayerModal queryData]\" + JSON.stringify(data));\n        const msgGroup = data.find(group => group._id === this.state.prayerId);\n        this.setState({\n          prayerMsgs: [...msgGroup.msgs],\n        });\n      });\n    });\n  }\n\n  modalPrayerUpdateClose = () => {\n    this.setState({ modalPrayerUpdateShow: false }, this.props.callback );\n  }\n\n  modalPrayerUpdateSubmit = () => {\n    let msgs = [...this.state.prayerMsgs];\n    let newData = '';\n    const isText = (this.state.inputMsgType === 'text') ? true : false;\n\n    if(isText) {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        text: this.state.inputMsgContent\n      }\n    } else {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        pkgId: this.state.inputPkgId,\n        stkrId: this.state.inputStkrId\n      }\n    }\n\n    const updateIdx = msgs.findIndex(item => item.id === this.state.prayerMsg.id);\n    msgs.splice(updateIdx, 1, newData);\n    updateBirthdayPrayer(this.state.prayerId, msgs)\n    .then(() => {\n      this.setState({\n        prayerMsgs: msgs\n      }, () => {\n        console.log(\"NEW STATE: \"+JSON.stringify(this.state.prayerMsgs));\n        this.modalPrayerUpdateClose();\n      });\n    });\n  }\n\n  radioChange = (e, { value }) => {\n    this.setState({ inputMsgType: value })\n  }\n\n  render() {\n    const modalType = this.state.type;\n    const prayerMsg = this.state.prayerMsg;\n    const radioChange = this.radioChange;\n\n    if(modalType === 'ADD_GROUP') {\n      return(\n        <Modal open={this.state.modalPrayerAddGroupShow} trigger={\n          <Button floated='right' icon labelPosition='left' primary size='small' onClick={this.modalPrayerAddGroupOpen}>\n            <Icon name='plus' /> 新增訊息群組\n          </Button>\n          }>\n          <Modal.Header>新增訊息群組</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              \n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalPrayerAddGroupSubmit} disabled={this.state.inputFirstname === '' || this.state.inputBirthMonth === '' || this.state.inputBirthDay === ''}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalPrayerAddGroupClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'ADD_MSG') {\n      return(\n        <Modal open={this.state.modalPrayerAddMsgShow} trigger={\n          <Button floated='right' icon labelPosition='left' primary size='small' onClick={this.modalPrayerAddMsgOpen}>\n            <Icon name='plus' /> 新增訊息\n          </Button>\n          }>\n          <Modal.Header>新增訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <a href=\"https://devdocs.line.me/files/sticker_list.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">可以使用的貼圖清單</a>\n              <Form>\n                <Form.Group inline>\n                  <label>訊息類型</label>\n                  <Form.Radio\n                    label='文字'\n                    value='text'\n                    checked={this.state.inputMsgType === 'text'}\n                    onChange={radioChange}\n                  />\n                  <Form.Radio\n                    label='貼圖'\n                    value='sticker'\n                    checked={this.state.inputMsgType === 'sticker'}\n                    onChange={radioChange}\n                  />\n                </Form.Group>\n                <Form.TextArea label='文字訊息' placeholder='訊息內容' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'sticker'} onChange={e => {this.setState({inputMsgContent: e.target.value});}}/>\n                <Form.Group widths='equal'>\n                  <Form.Input fluid label='STKID' placeholder='STKID' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'text'} onChange={e => {this.setState({inputStkrId: e.target.value});}}/>\n                  <Form.Input fluid label='STKPKGID' placeholder='STKPKGID' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'text'} onChange={e => {this.setState({inputPkgId: e.target.value});}}/>\n                </Form.Group>\n              </Form>              \n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalPrayerAddMsgSubmit} disabled={this.state.inputMsgType === '' || (this.state.inputMsgType === 'text' && this.state.inputMsgContent === '') || (this.state.inputMsgType === 'sticker' && (this.state.inputPkgId === '' || this.state.inputStkrId === ''))}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalPrayerAddMsgClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'UPDATE') {\n      return(\n        <Modal open={this.state.modalPrayerUpdateShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='vk' size='small' onClick={this.modalPrayerUpdateOpen}>\n            <Icon name='pencil alternate' /> 編輯\n          </Button>\n          }>\n          <Modal.Header>編輯訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <a href=\"https://devdocs.line.me/files/sticker_list.pdf\">可以使用的貼圖清單</a>\n              <Form>\n                <Form.Group inline>\n                  <label>訊息類型</label>\n                  <Form.Radio\n                    label='文字'\n                    value='text'\n                    checked={prayerMsg.isText === true}\n                    disabled={prayerMsg.isText === false}\n                  />\n                  <Form.Radio\n                    label='貼圖'\n                    value='sticker'\n                    checked={prayerMsg.isText === false}\n                    disabled={prayerMsg.isText === true}\n                  />\n                </Form.Group>\n                <Form.TextArea label='文字訊息' placeholder={prayerMsg.text} disabled={prayerMsg.isText === false} onChange={e => {this.setState({inputMsgType: 'text', inputMsgContent: e.target.value});}}/>\n                <Form.Group widths='equal'>\n                  <Form.Input fluid label='STKID' placeholder={prayerMsg.stkrId} disabled={prayerMsg.isText === true} onChange={e => {this.setState({inputMsgType: 'sticker', inputStkrId: e.target.value});}}/>\n                  <Form.Input fluid label='STKPKGID' placeholder={prayerMsg.pkgId} disabled={prayerMsg.isText === true} onChange={e => {this.setState({inputMsgType: 'sticker', inputPkgId: e.target.value});}}/>\n                </Form.Group>\n              </Form>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalPrayerUpdateSubmit}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalPrayerUpdateClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n    } else if(modalType === 'REMOVE_GROUP') {\n      return(\n        <Modal open={this.state.modalPrayerRemoveGroupShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='google plus' size='small' onClick={this.modalPrayerRemoveGroupOpen}>\n            <Icon name='trash alternate' /> 移除群組\n          </Button>\n          }>\n          <Modal.Header>移除群組</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <p>確定要刪除這個群組?</p>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='google plus' onClick={this.modalPrayerRemoveGroupSubmit}>\n                <Icon name='checkmark' /> 移除\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalPrayerRemoveGroupClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'REMOVE_MSG') {\n      return(\n        <Modal open={this.state.modalPrayerRemoveMsgShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='google plus' size='small' onClick={this.modalPrayerRemoveMsgOpen}>\n            <Icon name='trash alternate' /> 移除\n          </Button>\n          }>\n          <Modal.Header>移除訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <p>確定要刪除這則訊息?</p>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='google plus' onClick={this.modalPrayerRemoveMsgSubmit}>\n                <Icon name='checkmark' /> 移除\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalPrayerRemoveMsgClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else {}\n  }\n}","import React, { Component}  from 'react';\nimport { Container, Icon, Table, Divider, Header, Segment } from 'semantic-ui-react'\nimport { getBirthdayPrayer } from '../MongoDB';\nimport PrayerModal from './PrayerModal';\n\nexport default class BirthdayPrayer extends Component {\n\n  state = {\n\t\tbirthdayPrayers: []\n  }\n  \n  componentDidMount() {\n    this.queryData();\n  }\n\n  queryData = () => {\n\t\tgetBirthdayPrayer().then(data => {\n\t\t\tconsole.log(\"[BirthdayPrayer queryData]\" + JSON.stringify(data));\n\t\t\tthis.setState({\n        birthdayPrayers: [...data]\n      });\n    });\n\t}\n\t\n\tdelayQuery = () => {\n    const queryData = this.queryData;\n    setTimeout(() => {\n      queryData();\n    }, 2000);\n  }\n\n  render() {\n    const prayers = this.state.birthdayPrayers;\n\t\tconst delayQuery = this.delayQuery;\n\n    return(\n      <Segment raised>\n\t\t\t\t<Divider horizontal>\n\t\t\t\t\t<Header as='h4'>\n\t\t\t\t\t\t<Icon name='file text' />\n\t\t\t\t\t\t  生日提醒訊息(隨機發送一組)\n\t\t\t\t\t</Header>\n\t\t\t\t</Divider>\n\t\t\t\t{prayers.map(function(prayer, index){\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Table celled key={prayer._id}>\n\t\t\t\t\t\t\t<Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell colSpan='6'>\n                    訊息群組#{index+1}\n                    <PrayerModal type='REMOVE_GROUP' prayerId={prayer._id} prayerMsgs={prayer.msgs} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t</Table.HeaderCell>\n                </Table.Row>\n\t\t\t\t\t\t\t\t<Table.Row>\n                  <Table.HeaderCell>順序</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>類別</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell style={{ width: '250px' }}>文字訊息</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>STKID</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>STKPKGID</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell style={{ width: '250px' }}>操作</Table.HeaderCell>\n\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t</Table.Header>\n\n\t\t\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t\t\t{prayer.msgs.map(function(msg, idx){\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Table.Row key={msg.id} >\n                      <Table.Cell>{idx+1}</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>{msg.isText ? \"文字\" : \"貼圖\"}</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell>{msg.text}</Table.Cell> : <Table.Cell/>}\n\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell/> : <Table.Cell>{msg.stkrId}</Table.Cell>}\n\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell/> : <Table.Cell>{msg.pkgId}</Table.Cell>}\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>\n                        <PrayerModal type='REMOVE_MSG' prayerId={prayer._id} prayerMsg={msg} callback={delayQuery}/>\n                        <PrayerModal type='UPDATE' prayerId={prayer._id} prayerMsg={msg} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</Table.Body>\n\n\t\t\t\t\t\t\t<Table.Footer fullWidth>\n\t\t\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell colSpan='6'>\n                    <PrayerModal type='ADD_MSG' prayerId={prayer._id} prayerMsgs={prayer.msgs} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t</Table.Footer>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t)\n        })}\n        <Container style={{ height: '30px' }}>\n          <PrayerModal type='ADD_GROUP' callback={delayQuery}/>\n        </Container>\n\t\t\t</Segment>\n    )\n  }\n}","import React, { Component}  from 'react';\nimport { Container } from 'semantic-ui-react'\nimport BirthdayUser from './BirthdayUser/BirthdayUser';\nimport BirthdayPrayer from './BirthdayPrayer/BirthdayPrayer';\nimport 'semantic-ui-css/semantic.min.css';\n\nexport default class Birthday extends Component {\n\n\trender() {\n\t\t\n    return (\n\t\t\t<Container style={{ padding: '3em' }}>\n\t\t\t\t<BirthdayUser/>\n\t\t\t\t<BirthdayPrayer/>\n\t\t\t</Container>\n    );\n  }\n\t\n}","import React, { Component } from 'react';\nimport { Button, Icon, Modal, Form, Input } from 'semantic-ui-react'\nimport { getRoutineRule, addRoutineRule, updateRoutineRule, removeRoutineRule } from '../MongoDB';\nconst uuidv4 = require('uuid/v4');\n\nexport default class RoutineModal extends Component {\n\n  state = {\n    type: this.props.type,\n    rule: this.props.rule || '',\n    modalRuleAddShow: false,\n    modalRuleRemoveShow: false,\n    modalRuleUpdateShow: false,\n    inputRuleType: '',\n    inputWeekday1: '',\n    inputWeekday2: '',\n    inputWeekday3: '',\n    inputWeekday4: '',\n    inputWeekday5: '',\n    inputWeekday6: ''\n  }\n  \n  modalRuleAddOpen = () => {\n    this.setState({ modalRuleAddShow: true });\n  }\n\n  modalRuleAddClose = () => {\n    this.setState({ modalRuleAddShow: false }, this.props.callback );\n  }\n\n  modalRuleAddSubmit = () => {\n    const newData = {\n      id: uuidv4(),\n      month: this.state.inputRuleType,\n      routines: [{\n        week_day: 1,\n        name: this.state.inputWeekday1.toString()\n      },{\n        week_day: 2,\n        name: this.state.inputWeekday2.toString()\n      },{\n        week_day: 3,\n        name: this.state.inputWeekday3.toString()\n      },{\n        week_day: 4,\n        name: this.state.inputWeekday4.toString()\n      },{\n        week_day: 5,\n        name: this.state.inputWeekday5.toString()\n      },{\n        week_day: 6,\n        name: this.state.inputWeekday6.toString()\n      }]\n    }\n    addRoutineRule(newData);\n    this.modalRuleAddClose();\n  }\n\n  modalRuleRemoveOpen = () => {\n    this.setState({ modalRuleRemoveShow: true });\n  }\n\n  modalRuleRemoveClose = () => {\n    this.setState({ modalRuleRemoveShow: false }, this.props.callback );\n  }\n\n  modalRuleRemoveSubmit = () => {\n    removeRoutineRule(this.state.rule._id);\n    this.modalRuleRemoveClose();\n  }\n\n  modalRuleUpdateOpen = () => {\n    this.setState({ \n      modalRuleUpdateShow: true\n    }, () => {\n      getRoutineRule().then(data => {\n        const ruleGroup = data.find(rule => rule._id === this.state.rule._id);\n        this.setState({\n          rule: [...ruleGroup]\n        });\n      });\n    });\n  }\n\n  modalRuleUpdateClose = () => {\n    this.setState({ modalRuleUpdateShow: false }, this.props.callback );\n  }\n\n  modalRuleUpdateSubmit = () => {\n    const newData = {\n      id: this.state.rule._id,\n      month: this.state.rule.month,\n      routines: [{\n        week_day: 1,\n        name: (this.state.inputWeekday1.toString() === '') ? this.state.rule.routines[0].name : this.state.inputWeekday1.toString()\n      },{\n        week_day: 2,\n        name: (this.state.inputWeekday2.toString() === '') ? this.state.rule.routines[1].name : this.state.inputWeekday2.toString()\n      },{\n        week_day: 3,\n        name: (this.state.inputWeekday3.toString() === '') ? this.state.rule.routines[2].name : this.state.inputWeekday3.toString()\n      },{\n        week_day: 4,\n        name: (this.state.inputWeekday4.toString() === '') ? this.state.rule.routines[3].name : this.state.inputWeekday4.toString()\n      },{\n        week_day: 5,\n        name: (this.state.inputWeekday5.toString() === '') ? this.state.rule.routines[4].name : this.state.inputWeekday5.toString()\n      },{\n        week_day: 6,\n        name: (this.state.inputWeekday6.toString() === '') ? this.state.rule.routines[5].name : this.state.inputWeekday6.toString()\n      }]\n    }\n    \n    updateRoutineRule(newData)\n    this.modalRuleUpdateClose();\n  }\n\n  radioChange = (e, { value }) => {\n    this.setState({ inputRuleType: value })\n  }\n\n  render() {\n    const modalType = this.state.type;\n    const ruleInfo = this.state.rule;\n    const radioChange = this.radioChange;\n\n    if(modalType === 'ADD') {\n      return(\n        <Modal open={this.state.modalRuleAddShow} trigger={\n          <Button floated='right' icon labelPosition='left' primary size='small' onClick={this.modalRuleAddOpen}>\n            <Icon name='plus' /> 新增分享提醒\n          </Button>\n          }>\n          <Modal.Header>新增分享提醒</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <Form>\n                <Form.Group inline>\n                  <label>規則</label>\n                  <Form.Radio\n                    label='單數月'\n                    value='odd'\n                    checked={this.state.inputRuleType === 'odd'}\n                    onChange={radioChange}\n                  />\n                  <Form.Radio\n                    label='雙數月'\n                    value='even'\n                    checked={this.state.inputRuleType === 'even'}\n                    onChange={radioChange}\n                  />\n                  <Form.Radio\n                    label='全部月份'\n                    value='all'\n                    checked={this.state.inputRuleType === 'all'}\n                    onChange={radioChange}\n                  />\n                </Form.Group>\n                <Form.Field>\n                  <label>週一</label>\n                  <Input label={{ icon: 'asterisk' }} labelPosition='left corner' placeholder='週一分享者' onChange={e => {this.setState({inputWeekday1: e.target.value});}} />\n                </Form.Field>\n                <Form.Field>\n                  <label>週二</label>\n                  <Input label={{ icon: 'asterisk' }} labelPosition='left corner' placeholder='週二分享者' onChange={e => {this.setState({inputWeekday2: e.target.value});}} />\n                </Form.Field>\n                <Form.Field>\n                  <label>週三</label>\n                  <Input label={{ icon: 'asterisk' }} labelPosition='left corner' placeholder='週三分享者' onChange={e => {this.setState({inputWeekday3: e.target.value});}} />\n                </Form.Field>\n                <Form.Field>\n                  <label>週四</label>\n                  <Input label={{ icon: 'asterisk' }} labelPosition='left corner' placeholder='週四分享者' onChange={e => {this.setState({inputWeekday4: e.target.value});}}/>\n                </Form.Field>\n                <Form.Field>\n                  <label>週五</label>\n                  <Input label={{ icon: 'asterisk' }} labelPosition='left corner' placeholder='週五分享者' onChange={e => {this.setState({inputWeekday5: e.target.value});}}/>\n                </Form.Field>\n                <Form.Field>\n                  <label>週六</label>\n                  <Input label={{ icon: 'asterisk' }} labelPosition='left corner' placeholder='週六分享者' onChange={e => {this.setState({inputWeekday6: e.target.value});}}/>\n                </Form.Field>\n              </Form>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalRuleAddSubmit} disabled={this.state.inputRuleType === '' || this.state.inputWeekday1 === '' || this.state.inputWeekday2 === '' || this.state.inputWeekday3 === '' || this.state.inputWeekday4 === '' || this.state.inputWeekday5 === '' || this.state.inputWeekday6 === ''}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalRuleAddClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'UPDATE') {\n      return(\n        <Modal open={this.state.modalRuleUpdateShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='vk' size='small' onClick={this.modalRuleUpdateOpen}>\n            <Icon name='pencil alternate' /> 編輯\n          </Button>\n          }>\n          <Modal.Header>編輯分享提醒</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <Form>\n                <Form.Group inline>\n                  <label>規則</label>\n                  <Form.Radio\n                    label='單數月'\n                    value='odd'\n                    checked={ruleInfo.month === 'odd'}\n                    disabled={ruleInfo.month !== 'odd'}\n                  />\n                  <Form.Radio\n                    label='雙數月'\n                    value='even'\n                    checked={ruleInfo.month === 'even'}\n                    disabled={ruleInfo.month !== 'even'}\n                  />\n                  <Form.Radio\n                    label='全部月份'\n                    value='all'\n                    checked={ruleInfo.month === 'all'}\n                    disabled={ruleInfo.month !== 'all'}\n                  />\n                </Form.Group>\n                <Form.Field>\n                  <label>週一</label>\n                  <Input placeholder={ruleInfo.routines[0].name} onChange={e => {this.setState({inputWeekday1: e.target.value});}} />\n                </Form.Field>\n                <Form.Field>\n                  <label>週二</label>\n                  <Input placeholder={ruleInfo.routines[1].name} onChange={e => {this.setState({inputWeekday2: e.target.value});}} />\n                </Form.Field>\n                <Form.Field>\n                  <label>週三</label>\n                  <Input placeholder={ruleInfo.routines[2].name} onChange={e => {this.setState({inputWeekday3: e.target.value});}} />\n                </Form.Field>\n                <Form.Field>\n                  <label>週四</label>\n                  <Input placeholder={ruleInfo.routines[3].name} onChange={e => {this.setState({inputWeekday4: e.target.value});}}/>\n                </Form.Field>\n                <Form.Field>\n                  <label>週五</label>\n                  <Input placeholder={ruleInfo.routines[4].name} onChange={e => {this.setState({inputWeekday5: e.target.value});}}/>\n                </Form.Field>\n                <Form.Field>\n                  <label>週六</label>\n                  <Input placeholder={ruleInfo.routines[5].name} onChange={e => {this.setState({inputWeekday6: e.target.value});}}/>\n                </Form.Field>\n              </Form>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalRuleUpdateSubmit}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalRuleUpdateClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n    } else if(modalType === 'REMOVE') {\n      return(\n        <Modal open={this.state.modalRuleRemoveShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='google plus' size='small' onClick={this.modalRuleRemoveOpen}>\n            <Icon name='trash alternate' /> 移除\n          </Button>\n          }>\n          <Modal.Header>移除分享提醒</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <p>確定要刪除這個提醒?</p>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='google plus' onClick={this.modalRuleRemoveSubmit}>\n                <Icon name='checkmark' /> 移除\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalRuleRemoveClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else {}\n  }\n}","import React, { Component}  from 'react';\nimport { Icon, Table, Divider, Header, Segment } from 'semantic-ui-react'\nimport { getRoutineRule } from '../MongoDB';\nimport RoutineModal from './RoutineModal';\n\nexport default class RoutineRule extends Component {\n\n    state = {\n\t\troutineRules: []\n  }\n  \n  componentDidMount() {\n    this.queryData();\n  }\n\n  queryData = () => {\n\t\tgetRoutineRule().then(data => {\n      console.log(\"[RoutineRule queryData]\" + JSON.stringify(data));\n      this.setState({\n        routineRules: [...data]\n      });\n    });\n  }\n\n  delayQuery = () => {\n    const queryData = this.queryData;\n    setTimeout(() => {\n      queryData();\n    }, 2000);\n  }\n\n  render() {\n    const rules = this.state.routineRules;\n    const delayQuery = this.delayQuery;\n\n    return(\n      <Segment raised>\n        <Divider horizontal>\n          <Header as='h4'>\n            <Icon name='user' />\n              分享提醒列表\n          </Header>\n        </Divider>\n        <Table celled>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>規則</Table.HeaderCell>\n              <Table.HeaderCell>週一</Table.HeaderCell>\n              <Table.HeaderCell>週二</Table.HeaderCell>\n              <Table.HeaderCell>週三</Table.HeaderCell>\n              <Table.HeaderCell>週四</Table.HeaderCell>\n              <Table.HeaderCell>週五</Table.HeaderCell>\n              <Table.HeaderCell>週六</Table.HeaderCell>\n              <Table.HeaderCell style={{ width: '250px' }}>操作</Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n\n          <Table.Body>\n            {rules.map(function(rule){\n              return (\n                <Table.Row key={rule._id} >\n                  <Table.Cell>{rule.month === 'odd' ? \"單數月\" : rule.month === 'even' ? \"雙數月\" : \"全部\"}</Table.Cell>\n                  <Table.Cell>{rule.routines[0].name}</Table.Cell>\n                  <Table.Cell>{rule.routines[1].name}</Table.Cell>\n                  <Table.Cell>{rule.routines[2].name}</Table.Cell>\n                  <Table.Cell>{rule.routines[3].name}</Table.Cell>\n                  <Table.Cell>{rule.routines[4].name}</Table.Cell>\n                  <Table.Cell>{rule.routines[5].name}</Table.Cell>\n                  <Table.Cell>\n                    <RoutineModal type='REMOVE' rule={rule} callback={delayQuery}/>\n                    <RoutineModal type='UPDATE' rule={rule} callback={delayQuery}/>\n                  </Table.Cell>\n                </Table.Row>\n              );\n            })}\n          </Table.Body>\n\n          <Table.Footer fullWidth>\n            <Table.Row>\n              <Table.HeaderCell colSpan='8'>\n                <RoutineModal type='ADD' callback={delayQuery}/>\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Footer>\n        </Table>\n      </Segment>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Button, Icon, Modal, Form } from 'semantic-ui-react'\nimport { getRoutineReminder, addRoutineReminder, updateRoutineReminder, removeRoutineReminder } from '../MongoDB';\nconst uuidv4 = require('uuid/v4');\n\nexport default class ReminderModal extends Component {\n\n  state = {\n    type: this.props.type,\n    reminderId: this.props.reminderId || '',\n    reminderMsgs: [],\n    reminderMsg: this.props.reminderMsg || [],\n    msgId: this.props.msgId || '',\n    modalReminderAddGroupShow: false,\n    modalReminderAddMsgShow: false,\n    modalReminderRemoveGroupShow: false,\n    modalReminderRemoveMsgShow: false,\n    modalReminderUpdateShow: false,\n    inputMsgType: '',\n    inputMsgContent: '',\n    inputPkgId: '',\n    inputStkrId: '',\n  }\n  \n  modalReminderAddGroupOpen = () => {\n    this.setState({ modalReminderAddGroupShow: true });\n  }\n\n  modalReminderAddGroupClose = () => {\n    this.setState({ modalReminderAddGroupShow: false }, this.props.callback );\n  }\n\n  modalReminderAddGroupSubmit = () => {\n    const newData = {\n      id: uuidv4(),\n      msgs: []\n    }\n    addRoutineReminder(newData);\n    this.modalReminderAddGroupClose();\n  }\n\n  modalReminderAddMsgOpen = () => {\n    this.setState({ \n      modalReminderAddMsgShow: true\n    }, () => {\n      getRoutineReminder().then(data => {\n        const msgGroup = data.find(group => group._id === this.state.reminderId);\n        this.setState({\n          reminderMsgs: [...msgGroup.msgs]\n        });\n      });\n    });\n  }\n\n  modalReminderAddMsgClose = () => {\n    this.setState({ modalReminderAddMsgShow: false }, this.props.callback );\n  }\n\n  modalReminderAddMsgSubmit = () => {\n    let msgs = [...this.state.reminderMsgs];\n    let newData = '';\n    const isText = (this.state.inputMsgType === 'text') ? true : false;\n\n    if(isText) {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        text: this.state.inputMsgContent\n      }\n    } else {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        pkgId: this.state.inputPkgId,\n        stkrId: this.state.inputStkrId\n      }\n    }\n\n    msgs.push(newData);\n    updateRoutineReminder(this.state.reminderId, msgs)\n    .then(() => {\n      this.setState({\n        reminderMsgs: msgs\n      }, () => {\n        console.log(\"NEW STATE: \"+JSON.stringify(this.state.reminderMsgs));\n        this.modalReminderAddMsgClose();\n      });\n    });\n  }\n\n  modalReminderRemoveGroupOpen = () => {\n    this.setState({ modalReminderRemoveGroupShow: true });\n  }\n\n  modalReminderRemoveGroupClose = () => {\n    this.setState({ modalReminderRemoveGroupShow: false }, this.props.callback );\n  }\n\n  modalReminderRemoveGroupSubmit = () => {\n    removeRoutineReminder(this.state.reminderId);\n    this.modalReminderRemoveGroupClose();\n  }\n\n  modalReminderRemoveMsgOpen = () => {\n    this.setState({ \n      modalReminderRemoveMsgShow: true\n    }, () => {\n      getRoutineReminder().then(data => {\n        console.log(\"[PrayerModal queryData]\" + JSON.stringify(data));\n        const msgGroup = data.find(group => group._id === this.state.reminderId);\n        this.setState({\n          reminderMsgs: [...msgGroup.msgs],\n        });\n      });\n    });\n  }\n\n  modalReminderRemoveMsgClose = () => {\n    this.setState({ modalReminderRemoveMsgShow: false }, this.props.callback );\n  }\n\n  modalReminderRemoveMsgSubmit = () => {\n    let msgs = [...this.state.reminderMsgs];\n    const updateIdx = msgs.findIndex(item => item.id === this.state.reminderMsg.id);\n    msgs.splice(updateIdx, 1);\n    updateRoutineReminder(this.state.reminderId, msgs)\n    .then(() => {\n      this.setState({\n        reminderMsgs: msgs\n      }, () => {\n        console.log(\"NEW STATE: \"+JSON.stringify(this.state.reminderMsgs));\n        this.modalReminderRemoveMsgClose();\n      });\n    });\n  }\n\n  modalReminderUpdateOpen = () => {\n    this.setState({ \n      modalReminderUpdateShow: true\n    }, () => {\n      getRoutineReminder().then(data => {\n        console.log(\"[PrayerModal queryData]\" + JSON.stringify(data));\n        const msgGroup = data.find(group => group._id === this.state.reminderId);\n        this.setState({\n          reminderMsgs: [...msgGroup.msgs],\n        });\n      });\n    });\n  }\n\n  modalReminderUpdateClose = () => {\n    this.setState({ modalReminderUpdateShow: false }, this.props.callback );\n  }\n\n  modalReminderUpdateSubmit = () => {\n    let msgs = [...this.state.reminderMsgs];\n    let newData = '';\n    const isText = (this.state.inputMsgType === 'text') ? true : false;\n\n    if(isText) {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        text: this.state.inputMsgContent\n      }\n    } else {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        pkgId: this.state.inputPkgId,\n        stkrId: this.state.inputStkrId\n      }\n    }\n\n    const updateIdx = msgs.findIndex(item => item.id === this.state.reminderMsg.id);\n    msgs.splice(updateIdx, 1, newData);\n    updateRoutineReminder(this.state.reminderId, msgs)\n    .then(() => {\n      this.setState({\n        reminderMsgs: msgs\n      }, () => {\n        console.log(\"NEW STATE: \"+JSON.stringify(this.state.reminderMsgs));\n        this.modalReminderUpdateClose();\n      });\n    });\n  }\n\n  radioChange = (e, { value }) => {\n    this.setState({ inputMsgType: value })\n  }\n\n  render() {\n    const modalType = this.state.type;\n    const reminderMsg = this.state.reminderMsg;\n    const radioChange = this.radioChange;\n\n    if(modalType === 'ADD_GROUP') {\n      return(\n        <Modal open={this.state.modalReminderAddGroupShow} trigger={\n          <Button floated='right' icon labelPosition='left' primary size='small' onClick={this.modalReminderAddGroupOpen}>\n            <Icon name='plus' /> 新增訊息群組\n          </Button>\n          }>\n          <Modal.Header>新增訊息群組</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              \n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalReminderAddGroupSubmit} disabled={this.state.inputFirstname === '' || this.state.inputBirthMonth === '' || this.state.inputBirthDay === ''}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalReminderAddGroupClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'ADD_MSG') {\n      return(\n        <Modal open={this.state.modalReminderAddMsgShow} trigger={\n          <Button floated='right' icon labelPosition='left' primary size='small' onClick={this.modalReminderAddMsgOpen}>\n            <Icon name='plus' /> 新增訊息\n          </Button>\n          }>\n          <Modal.Header>新增訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <a href=\"https://devdocs.line.me/files/sticker_list.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">可以使用的貼圖清單</a>\n              <Form>\n                <Form.Group inline>\n                  <label>訊息類型</label>\n                  <Form.Radio\n                    label='文字'\n                    value='text'\n                    checked={this.state.inputMsgType === 'text'}\n                    onChange={radioChange}\n                  />\n                  <Form.Radio\n                    label='貼圖'\n                    value='sticker'\n                    checked={this.state.inputMsgType === 'sticker'}\n                    onChange={radioChange}\n                  />\n                </Form.Group>\n                <Form.TextArea label='文字訊息' placeholder='訊息內容' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'sticker'} onChange={e => {this.setState({inputMsgContent: e.target.value});}}/>\n                <Form.Group widths='equal'>\n                  <Form.Input fluid label='STKID' placeholder='STKID' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'text'} onChange={e => {this.setState({inputStkrId: e.target.value});}}/>\n                  <Form.Input fluid label='STKPKGID' placeholder='STKPKGID' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'text'} onChange={e => {this.setState({inputPkgId: e.target.value});}}/>\n                </Form.Group>\n              </Form>              \n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalReminderAddMsgSubmit} disabled={this.state.inputMsgType === '' || (this.state.inputMsgType === 'text' && this.state.inputMsgContent === '') || (this.state.inputMsgType === 'sticker' && (this.state.inputPkgId === '' || this.state.inputStkrId === ''))}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalReminderAddMsgClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'UPDATE') {\n      return(\n        <Modal open={this.state.modalReminderUpdateShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='vk' size='small' onClick={this.modalReminderUpdateOpen}>\n            <Icon name='pencil alternate' /> 編輯\n          </Button>\n          }>\n          <Modal.Header>編輯訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <a href=\"https://devdocs.line.me/files/sticker_list.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">可以使用的貼圖清單</a>\n              <Form>\n                <Form.Group inline>\n                  <label>訊息類型</label>\n                  <Form.Radio\n                    label='文字'\n                    value='text'\n                    checked={reminderMsg.isText === true}\n                    disabled={reminderMsg.isText === false}\n                  />\n                  <Form.Radio\n                    label='貼圖'\n                    value='sticker'\n                    checked={reminderMsg.isText === false}\n                    disabled={reminderMsg.isText === true}\n                  />\n                </Form.Group>\n                <Form.TextArea label='文字訊息' placeholder={reminderMsg.text} disabled={reminderMsg.isText === false} onChange={e => {this.setState({inputMsgType: 'text', inputMsgContent: e.target.value});}}/>\n                <Form.Group widths='equal'>\n                  <Form.Input fluid label='STKID' placeholder={reminderMsg.stkrId} disabled={reminderMsg.isText === true} onChange={e => {this.setState({inputMsgType: 'sticker', inputStkrId: e.target.value});}}/>\n                  <Form.Input fluid label='STKPKGID' placeholder={reminderMsg.pkgId} disabled={reminderMsg.isText === true} onChange={e => {this.setState({inputMsgType: 'sticker', inputPkgId: e.target.value});}}/>\n                </Form.Group>\n              </Form>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalReminderUpdateSubmit}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalReminderUpdateClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n    } else if(modalType === 'REMOVE_GROUP') {\n      return(\n        <Modal open={this.state.modalReminderRemoveGroupShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='google plus' size='small' onClick={this.modalReminderRemoveGroupOpen}>\n            <Icon name='trash alternate' /> 移除群組\n          </Button>\n          }>\n          <Modal.Header>移除群組</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <p>確定要刪除這個群組?</p>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='google plus' onClick={this.modalReminderRemoveGroupSubmit}>\n                <Icon name='checkmark' /> 移除\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalReminderRemoveGroupClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'REMOVE_MSG') {\n      return(\n        <Modal open={this.state.modalReminderRemoveMsgShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='google plus' size='small' onClick={this.modalReminderRemoveMsgOpen}>\n            <Icon name='trash alternate' /> 移除\n          </Button>\n          }>\n          <Modal.Header>移除訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <p>確定要刪除這則訊息?</p>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='google plus' onClick={this.modalReminderRemoveMsgSubmit}>\n                <Icon name='checkmark' /> 移除\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalReminderRemoveMsgClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else {}\n  }\n}","import React, { Component}  from 'react';\nimport { Container, Icon, Table, Divider, Header, Segment } from 'semantic-ui-react'\nimport { getRoutineReminder } from '../MongoDB';\nimport ReminderModal from './ReminderModal';\n\nexport default class RoutineReminder extends Component {\n\n  state = {\n\t\troutineReminders: []\n  }\n  \n  componentDidMount() {\n    this.queryData();\n  }\n\n  queryData = () => {\n\t\tgetRoutineReminder().then(data => {\n\t\t\tconsole.log(\"[RoutineReminder queryData]\" + JSON.stringify(data));\n\t\t\tthis.setState({\n        routineReminders: [...data]\n      });\n    });\n\t}\n\t\n\tdelayQuery = () => {\n    const queryData = this.queryData;\n    setTimeout(() => {\n      queryData();\n    }, 2000);\n  }\n\n  render() {\n    const reminders = this.state.routineReminders;\n    const delayQuery = this.delayQuery;\n\n    return(\n      <Segment raised>\n\t\t\t\t<Divider horizontal>\n\t\t\t\t\t<Header as='h4'>\n\t\t\t\t\t\t<Icon name='file text' />\n\t\t\t\t\t\t  分享提醒訊息(隨機發送一組)\n\t\t\t\t\t</Header>\n\t\t\t\t</Divider>\n\t\t\t\t{reminders.map(function(reminder, index){\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Table celled key={reminder._id}>\n\t\t\t\t\t\t\t<Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell colSpan='6'>\n                    訊息群組#{index+1}\n                    <ReminderModal type='REMOVE_GROUP' reminderId={reminder._id} reminderMsgs={reminder.msgs} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t</Table.HeaderCell>\n                </Table.Row>\n\t\t\t\t\t\t\t\t<Table.Row>\n                  <Table.HeaderCell>順序</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>類別</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell style={{ width: '250px' }}>文字訊息</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>STKID</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>STKPKGID</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell style={{ width: '250px' }}>操作</Table.HeaderCell>\n\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t</Table.Header>\n\n\t\t\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t\t\t{reminder.msgs.map(function(msg, idx){\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Table.Row key={msg.id} >\n                      <Table.Cell>{idx+1}</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>{msg.isText ? \"文字\" : \"貼圖\"}</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell>{msg.text}</Table.Cell> : <Table.Cell/>}\n\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell/> : <Table.Cell>{msg.stkrId}</Table.Cell>}\n\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell/> : <Table.Cell>{msg.pkgId}</Table.Cell>}\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>\n                        <ReminderModal type='REMOVE_MSG' reminderId={reminder._id} reminderMsg={msg} callback={delayQuery}/>\n                        <ReminderModal type='UPDATE' reminderId={reminder._id} reminderMsg={msg} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</Table.Body>\n\n\t\t\t\t\t\t\t<Table.Footer fullWidth>\n\t\t\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell colSpan='6'>\n                    <ReminderModal type='ADD_MSG' reminderId={reminder._id} reminderMsgs={reminder.msgs} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t</Table.Footer>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t)\n        })}\n        <Container style={{ height: '30px' }}>\n          <ReminderModal type='ADD_GROUP' callback={delayQuery}/>\n        </Container>\n\t\t\t</Segment>\n    )\n  }\n}","import React, { Component}  from 'react';\nimport { Container } from 'semantic-ui-react'\nimport RoutineRule from './RoutineRule/RoutineRule';\nimport RoutineReminder from './RoutineReminder/RoutineReminder';\nimport 'semantic-ui-css/semantic.min.css';\n\nexport default class Routine extends Component {\n\n\trender() {\n\t\t\n    return (\n\t\t\t<Container style={{ padding: '3em' }}>\n\t\t\t\t<RoutineRule/>\n\t\t\t\t<RoutineReminder/>\n\t\t\t</Container>\n    );\n  }\n\t\n}","import React, { Component } from 'react';\nimport { Button, Icon, Modal, Form } from 'semantic-ui-react'\nimport { getMondayBless, addMondayBless, updateMondayBless, removeMondayBless } from '../MongoDB';\nconst uuidv4 = require('uuid/v4');\n\nexport default class BlessModal extends Component {\n\n  state = {\n    type: this.props.type,\n    blessId: this.props.blessId || '',\n    blessMsgs: [],\n    blessMsg: this.props.blessMsg || '',\n    msgId: this.props.msgId || '',\n    modalBlessAddGroupShow: false,\n    modalBlessAddMsgShow: false,\n    modalBlessRemoveGroupShow: false,\n    modalBlessRemoveMsgShow: false,\n    modalBlessUpdateShow: false,\n    inputMsgType: '',\n    inputMsgContent: '',\n    inputPkgId: '',\n    inputStkrId: '',\n  }\n  \n  modalBlessAddGroupOpen = () => {\n    this.setState({ modalBlessAddGroupShow: true });\n  }\n\n  modalBlessAddGroupClose = () => {\n    this.setState({ modalBlessAddGroupShow: false }, this.props.callback );\n  }\n\n  modalBlessAddGroupSubmit = () => {\n    const newData = {\n      id: uuidv4(),\n      msgs: []\n    }\n    addMondayBless(newData);\n    this.modalBlessAddGroupClose();\n  }\n\n  modalBlessAddMsgOpen = () => {\n    this.setState({\n      modalBlessAddMsgShow: true\n    }, () => {\n      getMondayBless().then(data => {\n        const msgGroup = data.find(group => group._id === this.state.blessId);\n        this.setState({\n          blessMsgs: [...msgGroup.msgs]\n        });\n      });\n    });\n  }\n\n  modalBlessAddMsgClose = () => {\n    this.setState({ modalBlessAddMsgShow: false }, this.props.callback );\n  }\n\n  modalBlessAddMsgSubmit = () => {\n    let msgs = [...this.state.blessMsgs];\n    let newData = '';\n    const isText = (this.state.inputMsgType === 'text') ? true : false;\n\n    if(isText) {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        text: this.state.inputMsgContent\n      }\n    } else {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        pkgId: this.state.inputPkgId,\n        stkrId: this.state.inputStkrId\n      }\n    }\n\n    msgs.push(newData);\n    updateMondayBless(this.state.blessId, msgs)\n    .then(() => {\n      this.setState({\n        blessMsgs: msgs\n      }, () => {\n        console.log(\"NEW STATE: \"+JSON.stringify(this.state.blessMsgs));\n        this.modalBlessAddMsgClose();\n      });\n    });\n  }\n\n  modalBlessRemoveGroupOpen = () => {\n    this.setState({ modalBlessRemoveGroupShow: true });\n  }\n\n  modalBlessRemoveGroupClose = () => {\n    this.setState({ modalBlessRemoveGroupShow: false }, this.props.callback );\n  }\n\n  modalBlessRemoveGroupSubmit = () => {\n    removeMondayBless(this.state.blessId);\n    this.modalBlessRemoveGroupClose();\n  }\n\n  modalBlessRemoveMsgOpen = () => {\n    this.setState({ \n      modalBlessRemoveMsgShow: true\n    }, () => {\n      getMondayBless().then(data => {\n        const msgGroup = data.find(group => group._id === this.state.blessId);\n        this.setState({\n          blessMsgs: [...msgGroup.msgs],\n        });\n      });\n    });\n  }\n\n  modalBlessRemoveMsgClose = () => {\n    this.setState({ modalBlessRemoveMsgShow: false }, this.props.callback );\n  }\n\n  modalBlessRemoveMsgSubmit = () => {\n    let msgs = [...this.state.blessMsgs];\n    const updateIdx = msgs.findIndex(item => item.id === this.state.blessMsg.id);\n    msgs.splice(updateIdx, 1);\n    updateMondayBless(this.state.blessId, msgs)\n    .then(() => {\n      this.setState({\n        blessMsgs: msgs\n      }, () => {\n        console.log(\"NEW STATE: \"+JSON.stringify(this.state.blessMsgs));\n        this.modalBlessRemoveMsgClose();\n      });\n    });\n  }\n\n  modalBlessUpdateOpen = () => {\n    this.setState({ \n      modalBlessUpdateShow: true \n    }, () => {\n      getMondayBless().then(data => {\n        console.log(\"[BlessModal queryData]\" + JSON.stringify(data));\n        const msgGroup = data.find(group => group._id === this.state.blessId);\n        this.setState({\n          blessMsgs: [...msgGroup.msgs],\n        });\n      });\n    });\n  }\n\n  modalBlessUpdateClose = () => {\n    this.setState({ modalBlessUpdateShow: false }, this.props.callback );\n  }\n\n  modalBlessUpdateSubmit = () => {\n    let msgs = [...this.state.blessMsgs];\n    let newData = '';\n    const isText = (this.state.inputMsgType === 'text') ? true : false;\n\n    if(isText) {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        text: this.state.inputMsgContent\n      }\n    } else {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        pkgId: this.state.inputPkgId,\n        stkrId: this.state.inputStkrId\n      }\n    }\n\n    const updateIdx = msgs.findIndex(item => item.id === this.state.blessMsg.id);\n    msgs.splice(updateIdx, 1, newData);\n    updateMondayBless(this.state.blessId, msgs)\n    .then(() => {\n      this.setState({\n        blessMsgs: msgs\n      }, () => {\n        console.log(\"NEW STATE: \"+JSON.stringify(this.state.blessMsgs));\n        this.modalBlessUpdateClose();\n      });\n    });\n  }\n\n  radioChange = (e, { value }) => {\n    this.setState({ inputMsgType: value })\n  }\n\n  render() {\n    const modalType = this.state.type;\n    const blessMsg = this.state.blessMsg;\n    const radioChange = this.radioChange;\n\n    if(modalType === 'ADD_GROUP') {\n      return(\n        <Modal open={this.state.modalBlessAddGroupShow} trigger={\n          <Button floated='right' icon labelPosition='left' primary size='small' onClick={this.modalBlessAddGroupOpen}>\n            <Icon name='plus' /> 新增訊息群組\n          </Button>\n          }>\n          <Modal.Header>新增訊息群組</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              \n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalBlessAddGroupSubmit} disabled={this.state.inputFirstname === '' || this.state.inputBirthMonth === '' || this.state.inputBirthDay === ''}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalBlessAddGroupClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'ADD_MSG') {\n      return(\n        <Modal open={this.state.modalBlessAddMsgShow} trigger={\n          <Button floated='right' icon labelPosition='left' primary size='small' onClick={this.modalBlessAddMsgOpen}>\n            <Icon name='plus' /> 新增訊息\n          </Button>\n          }>\n          <Modal.Header>新增訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <a href=\"https://devdocs.line.me/files/sticker_list.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">可以使用的貼圖清單</a>\n              <Form>\n                <Form.Group inline>\n                  <label>訊息類型</label>\n                  <Form.Radio\n                    label='文字'\n                    value='text'\n                    checked={this.state.inputMsgType === 'text'}\n                    onChange={radioChange}\n                  />\n                  <Form.Radio\n                    label='貼圖'\n                    value='sticker'\n                    checked={this.state.inputMsgType === 'sticker'}\n                    onChange={radioChange}\n                  />\n                </Form.Group>\n                <Form.TextArea label='文字訊息' placeholder='訊息內容' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'sticker'} onChange={e => {this.setState({inputMsgContent: e.target.value});}}/>\n                <Form.Group widths='equal'>\n                  <Form.Input fluid label='STKID' placeholder='STKID' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'text'} onChange={e => {this.setState({inputStkrId: e.target.value});}}/>\n                  <Form.Input fluid label='STKPKGID' placeholder='STKPKGID' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'text'} onChange={e => {this.setState({inputPkgId: e.target.value});}}/>\n                </Form.Group>\n              </Form>              \n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalBlessAddMsgSubmit} disabled={this.state.inputMsgType === '' || (this.state.inputMsgType === 'text' && this.state.inputMsgContent === '') || (this.state.inputMsgType === 'sticker' && (this.state.inputPkgId === '' || this.state.inputStkrId === ''))}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalBlessAddMsgClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'UPDATE') {\n      return(\n        <Modal open={this.state.modalBlessUpdateShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='vk' size='small' onClick={this.modalBlessUpdateOpen}>\n            <Icon name='pencil alternate' /> 編輯\n          </Button>\n          }>\n          <Modal.Header>編輯訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <a href=\"https://devdocs.line.me/files/sticker_list.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">可以使用的貼圖清單</a>\n              <Form>\n                <Form.Group inline>\n                  <label>訊息類型</label>\n                  <Form.Radio\n                    label='文字'\n                    value='text'\n                    checked={blessMsg.isText === true}\n                    disabled={blessMsg.isText === false}\n                  />\n                  <Form.Radio\n                    label='貼圖'\n                    value='sticker'\n                    checked={blessMsg.isText === false}\n                    disabled={blessMsg.isText === true}\n                  />\n                </Form.Group>\n                <Form.TextArea label='文字訊息' placeholder={blessMsg.text} disabled={blessMsg.isText === false} onChange={e => {this.setState({inputMsgType: 'text', inputMsgContent: e.target.value});}}/>\n                <Form.Group widths='equal'>\n                  <Form.Input fluid label='STKID' placeholder={blessMsg.stkrId} disabled={blessMsg.isText === true} onChange={e => {this.setState({inputMsgType: 'sticker', inputStkrId: e.target.value});}}/>\n                  <Form.Input fluid label='STKPKGID' placeholder={blessMsg.pkgId} disabled={blessMsg.isText === true} onChange={e => {this.setState({inputMsgType: 'sticker', inputPkgId: e.target.value});}}/>\n                </Form.Group>\n              </Form>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalBlessUpdateSubmit}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalBlessUpdateClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n    } else if(modalType === 'REMOVE_GROUP') {\n      return(\n        <Modal open={this.state.modalBlessRemoveGroupShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='google plus' size='small' onClick={this.modalBlessRemoveGroupOpen}>\n            <Icon name='trash alternate' /> 移除群組\n          </Button>\n          }>\n          <Modal.Header>移除群組</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <p>確定要刪除這個群組?</p>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='google plus' onClick={this.modalBlessRemoveGroupSubmit}>\n                <Icon name='checkmark' /> 移除\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalBlessRemoveGroupClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'REMOVE_MSG') {\n      return(\n        <Modal open={this.state.modalBlessRemoveMsgShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='google plus' size='small' onClick={this.modalBlessRemoveMsgOpen}>\n            <Icon name='trash alternate' /> 移除\n          </Button>\n          }>\n          <Modal.Header>移除訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <p>確定要刪除這則訊息?</p>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='google plus' onClick={this.modalBlessRemoveMsgSubmit}>\n                <Icon name='checkmark' /> 移除\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalBlessRemoveMsgClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else {}\n  }\n}","import React, { Component}  from 'react';\nimport { Container, Icon, Table, Divider, Header, Segment } from 'semantic-ui-react'\nimport { getMondayBless } from '../MongoDB';\nimport BlessModal from './BlessModal';\n\nexport default class MondayBless extends Component {\n\n  state = {\n\t\tmondayBlesses: []\n  }\n  \n  componentDidMount() {\n    this.queryData();\n  }\n\n  queryData = () => {\n\t\tgetMondayBless().then(data => {\n\t\t\tconsole.log(\"[MondayBless queryData]\" + JSON.stringify(data));\n\t\t\tthis.setState({\n        mondayBlesses: [...data]\n      });\n    });\n  }\n\n  delayQuery = () => {\n    const queryData = this.queryData;\n    setTimeout(() => {\n      queryData();\n    }, 2000);\n  }\n\n  render() {\n    const blesses = this.state.mondayBlesses;\n    const delayQuery = this.delayQuery;\n\n    return(\n      <Segment raised style={{ margin: '3em' }}>\n\t\t\t\t<Divider horizontal>\n\t\t\t\t\t<Header as='h4'>\n\t\t\t\t\t\t<Icon name='file text' />\n\t\t\t\t\t\t  週一祝福訊息(隨機發送一組)\n\t\t\t\t\t</Header>\n\t\t\t\t</Divider>\n\t\t\t\t{blesses.map(function(bless, index){\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Table celled key={bless._id}>\n\t\t\t\t\t\t\t<Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell colSpan='6'>\n                    訊息群組#{index+1}\n                    <BlessModal type='REMOVE_GROUP' blessId={bless._id} blessMsgs={bless.msgs} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t</Table.HeaderCell>\n                </Table.Row>\n\t\t\t\t\t\t\t\t<Table.Row>\n                  <Table.HeaderCell>順序</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>類別</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell style={{ width: '250px' }}>文字訊息</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>STKID</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>STKPKGID</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell style={{ width: '250px' }}>操作</Table.HeaderCell>\n\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t</Table.Header>\n\n\t\t\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t\t\t{bless.msgs.map(function(msg, idx){\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Table.Row key={msg.id} >\n                      <Table.Cell>{idx+1}</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>{msg.isText ? \"文字\" : \"貼圖\"}</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell>{msg.text}</Table.Cell> : <Table.Cell/>}\n\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell/> : <Table.Cell>{msg.stkrId}</Table.Cell>}\n\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell/> : <Table.Cell>{msg.pkgId}</Table.Cell>}\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>\n                        <BlessModal type='REMOVE_MSG' blessId={bless._id} blessMsg={msg} callback={delayQuery}/>\n                        <BlessModal type='UPDATE' blessId={bless._id} blessMsg={msg} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</Table.Body>\n\n\t\t\t\t\t\t\t<Table.Footer fullWidth>\n\t\t\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell colSpan='6'>\n                    <BlessModal type='ADD_MSG' blessId={bless._id} blessMsgs={bless.msgs} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t</Table.Footer>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t)\n        })}\n        <Container style={{ height: '30px' }}>\n          <BlessModal type='ADD_GROUP' callback={delayQuery}/>\n        </Container>\n\t\t\t</Segment>\n    )\n  }\n}","import React, { Component } from 'react';\nimport { Button, Icon, Modal, Form, Input } from 'semantic-ui-react'\nimport { getAutoReply, addAutoReply, updateAutoReply, removeAutoReply } from '../MongoDB';\nconst uuidv4 = require('uuid/v4');\n\nexport default class AutoReplyModal extends Component {\n\n  state = {\n    type: this.props.type,\n    autoReplyId: this.props.autoReplyId || '',\n    autoReplyKeywords: [],\n    autoReplyMessages: [],\n    autoReplyKeyword: this.props.autoReplyKeyword || '',\n    autoReplyMessage: this.props.autoReplyMessage || '',\n    modalAutoReplyAddGroupShow: false,\n    modalAutoReplyAddMsgShow: false,\n    modalAutoReplyAddKeywordShow: false,\n    modalAutoReplyRemoveGroupShow: false,\n    modalAutoReplyRemoveKeywordShow: false,\n    modalAutoReplyRemoveMsgShow: false,\n    modalAutoReplyUpdateShow: false,\n    inputMsgType: '',\n    inputKeyword: '',\n    inputMsgContent: '',\n    inputPkgId: '',\n    inputStkrId: '',\n  }\n  \n  modalAutoReplyAddGroupOpen = () => {\n    this.setState({ modalAutoReplyAddGroupShow: true });\n  }\n\n  modalAutoReplyAddGroupClose = () => {\n    this.setState({ modalAutoReplyAddGroupShow: false }, this.props.callback );\n  }\n\n  modalAutoReplyAddGroupSubmit = () => {\n    const newData = {\n      id: uuidv4(),\n      key_words: [],\n      response_msgs: []\n    }\n    addAutoReply(newData);\n    this.modalAutoReplyAddGroupClose();\n  }\n\n  modalAutoReplyAddMsgOpen = () => {\n    this.setState({ \n      modalAutoReplyAddMsgShow: true\n    }, () => {\n      getAutoReply().then(data => {\n        const msgGroup = data.find(group => group._id === this.state.autoReplyId);\n        this.setState({\n          autoReplyKeywords: [...msgGroup.key_words],\n          autoReplyMessages: [...msgGroup.response_msgs]\n        });\n      });\n    });\n  }\n\n  modalAutoReplyAddMsgClose = () => {\n    this.setState({ modalAutoReplyAddMsgShow: false }, this.props.callback );\n  }\n\n  modalAutoReplyAddMsgSubmit = () => {\n    let msgs = [...this.state.autoReplyMessages];\n    let newMsg = '';\n    const isText = (this.state.inputMsgType === 'text') ? true : false;\n\n    if(isText) {\n      newMsg = {\n        id: uuidv4(),\n        isText: isText,\n        text: this.state.inputMsgContent\n      }\n    } else {\n      newMsg = {\n        id: uuidv4(),\n        isText: isText,\n        pkgId: this.state.inputPkgId,\n        stkrId: this.state.inputStkrId\n      }\n    }\n    msgs.push(newMsg);\n    \n    let newData = {\n      id: this.state.autoReplyId,\n      key_words: this.state.autoReplyKeywords,\n      response_msgs: msgs\n    };\n    \n    updateAutoReply(newData)\n    .then(() => {\n      this.setState({\n        autoReplyMessages: msgs\n      }, () => {\n        this.modalAutoReplyAddMsgClose();\n      });\n    });\n  }\n\n  modalAutoReplyAddKeywordOpen = () => {\n    this.setState({ \n      modalAutoReplyAddKeywordShow: true \n    }, () => {\n      getAutoReply().then(data => {\n        const msgGroup = data.find(group => group._id === this.state.autoReplyId);\n        this.setState({\n          autoReplyKeywords: [...msgGroup.key_words],\n          autoReplyMessages: [...msgGroup.response_msgs]\n        });\n      });\n    });\n  }\n\n  modalAutoReplyAddKeywordClose = () => {\n    this.setState({ modalAutoReplyAddKeywordShow: false }, this.props.callback );\n  }\n\n  modalAutoReplyAddKeywordSubmit = () => {\n    let keywords = [...this.state.autoReplyKeywords];\n\n    const newKeyword = {\n      id: uuidv4(),\n      text: this.state.inputKeyword\n    }\n\n    keywords.push(newKeyword);\n\n    let newData = {\n      id: this.state.autoReplyId,\n      key_words: keywords,\n      response_msgs: this.state.autoReplyMessages\n    };\n\n    updateAutoReply(newData)\n    .then(() => {\n      this.setState({\n        autoReplyKeywords: keywords\n      }, () => {\n        this.modalAutoReplyAddKeywordClose();\n      });\n    });\n  }\n\n  modalAutoReplyRemoveGroupOpen = () => {\n    this.setState({ modalAutoReplyRemoveGroupShow: true });\n  }\n\n  modalAutoReplyRemoveGroupClose = () => {\n    this.setState({ modalAutoReplyRemoveGroupShow: false }, this.props.callback );\n  }\n\n  modalAutoReplyRemoveGroupSubmit = () => {\n    removeAutoReply(this.state.autoReplyId);\n    this.modalAutoReplyRemoveGroupClose();\n  }\n\n  modalAutoReplyRemoveMsgOpen = () => {\n    this.setState({ \n      modalAutoReplyRemoveMsgShow: true\n    }, () => {\n      getAutoReply().then(data => {\n        const msgGroup = data.find(group => group._id === this.state.autoReplyId);\n        this.setState({\n          autoReplyKeywords: [...msgGroup.key_words],\n          autoReplyMessages: [...msgGroup.response_msgs]\n        });\n      });\n    });\n  }\n\n  modalAutoReplyRemoveMsgClose = () => {\n    this.setState({ modalAutoReplyRemoveMsgShow: false }, this.props.callback );\n  }\n\n  modalAutoReplyRemoveMsgSubmit = () => {\n    let msgs = [...this.state.autoReplyMessages];\n    const updateIdx = msgs.findIndex(item => item.id === this.state.autoReplyMessage.id);\n    msgs.splice(updateIdx, 1);\n\n    let newData = {\n      id: this.state.autoReplyId,\n      key_words: this.state.autoReplyKeywords,\n      response_msgs: msgs\n    };\n\n    updateAutoReply(newData)\n    .then(() => {\n      this.setState({\n        autoReplyMessages: msgs\n      }, () => {\n        this.modalAutoReplyRemoveMsgClose();\n      });\n    });\n  }\n\n  modalAutoReplyRemoveKeywordOpen = () => {\n    this.setState({ \n      modalAutoReplyRemoveKeywordShow: true\n    }, () => {\n      getAutoReply().then(data => {\n        const msgGroup = data.find(group => group._id === this.state.autoReplyId);\n        this.setState({\n          autoReplyKeywords: [...msgGroup.key_words],\n          autoReplyMessages: [...msgGroup.response_msgs]\n        });\n      });\n    });\n  }\n\n  modalAutoReplyRemoveKeywordClose = () => {\n    this.setState({ modalAutoReplyRemoveKeywordShow: false }, this.props.callback );\n  }\n\n  modalAutoReplyRemoveKeywordSubmit = () => {\n    let keywords = [...this.state.autoReplyKeywords];\n    const updateIdx = keywords.findIndex(item => item.id === this.state.autoReplyKeyword.id);\n    keywords.splice(updateIdx, 1);\n\n    let newData = {\n      id: this.state.autoReplyId,\n      key_words: keywords,\n      response_msgs: this.state.autoReplyMessages\n    };\n\n    updateAutoReply(newData)\n    .then(() => {\n      this.setState({\n        autoReplyKeywords: keywords\n      }, () => {\n        this.modalAutoReplyRemoveMsgClose();\n      });\n    });\n  }\n/*\n  modalAutoReplyUpdateOpen = () => {\n    this.setState({ modalAutoReplyUpdateShow: true });\n  }\n\n  modalAutoReplyUpdateClose = () => {\n    this.setState({ modalAutoReplyUpdateShow: false }, this.props.callback );\n  }\n\n  modalAutoReplyUpdateSubmit = () => {\n    let autoReplyCopy = this.state.autoReply;\n    let newData = '';\n    const isText = (this.state.inputMsgType === 'text') ? true : false;\n\n    if(isText) {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        text: this.state.inputMsgContent\n      }\n    } else {\n      newData = {\n        id: uuidv4(),\n        isText: isText,\n        pkgId: this.state.inputPkgId,\n        stkrId: this.state.inputStkrId\n      }\n    }\n\n    autoReplyCopy.response_msgs.splice(this.state.msgIdx, 1, newData);\n    this.modalAutoReplyUpdateClose();\n    updateAutoReply(autoReplyCopy)\n    .then(() => {\n      this.setState({\n        autoReply: autoReplyCopy\n      }, () => {\n        console.log(\"NEW STATE: \"+JSON.stringify(this.state.autoReply));\n      });\n    });\n  }\n*/\n  radioChange = (e, { value }) => {\n    this.setState({ inputMsgType: value })\n  }\n\n  render() {\n    const modalType = this.state.type;\n    const radioChange = this.radioChange;\n\n    if(modalType === 'ADD_GROUP') {\n      return(\n        <Modal open={this.state.modalAutoReplyAddGroupShow} trigger={\n          <Button floated='right' icon labelPosition='left' primary size='small' onClick={this.modalAutoReplyAddGroupOpen}>\n            <Icon name='plus' /> 新增訊息群組\n          </Button>\n          }>\n          <Modal.Header>新增訊息群組</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              \n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalAutoReplyAddGroupSubmit} disabled={this.state.inputFirstname === '' || this.state.inputBirthMonth === '' || this.state.inputBirthDay === ''}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalAutoReplyAddGroupClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'ADD_KEY') {\n      return(\n        <Modal open={this.state.modalAutoReplyAddKeywordShow} trigger={\n          <Button floated='right' icon labelPosition='left' primary size='small' onClick={this.modalAutoReplyAddKeywordOpen}>\n            <Icon name='plus' /> 新增關鍵字\n          </Button>\n          }>\n          <Modal.Header>新增關鍵字</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <Form.Field>\n                <label>關鍵字</label>\n                <Input label={{ icon: 'asterisk' }} labelPosition='left corner' placeholder='關鍵字' onChange={e => {this.setState({inputKeyword: e.target.value});}} />\n              </Form.Field>   \n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalAutoReplyAddKeywordSubmit} disabled={this.state.inputKeyword === ''}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalAutoReplyAddKeywordClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'ADD_MSG') {\n      return(\n        <Modal open={this.state.modalAutoReplyAddMsgShow} trigger={\n          <Button floated='right' icon labelPosition='left' primary size='small' onClick={this.modalAutoReplyAddMsgOpen}>\n            <Icon name='plus' /> 新增回應訊息\n          </Button>\n          }>\n          <Modal.Header>新增訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <a href=\"https://devdocs.line.me/files/sticker_list.pdf\" target=\"_blank\" rel=\"noopener noreferrer\">可以使用的貼圖清單</a>\n              <Form>\n                <Form.Group inline>\n                  <label>訊息類型</label>\n                  <Form.Radio\n                    label='文字'\n                    value='text'\n                    checked={this.state.inputMsgType === 'text'}\n                    onChange={radioChange}\n                  />\n                  <Form.Radio\n                    label='貼圖'\n                    value='sticker'\n                    checked={this.state.inputMsgType === 'sticker'}\n                    onChange={radioChange}\n                  />\n                </Form.Group>\n                <Form.TextArea label='文字訊息' placeholder='訊息內容' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'sticker'} onChange={e => {this.setState({inputMsgContent: e.target.value});}}/>\n                <Form.Group widths='equal'>\n                  <Form.Input fluid label='STKID' placeholder='STKID' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'text'} onChange={e => {this.setState({inputStkrId: e.target.value});}}/>\n                  <Form.Input fluid label='STKPKGID' placeholder='STKPKGID' disabled={this.state.inputMsgType === '' ||　this.state.inputMsgType === 'text'} onChange={e => {this.setState({inputPkgId: e.target.value});}}/>\n                </Form.Group>\n              </Form>              \n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='green' onClick={this.modalAutoReplyAddMsgSubmit} disabled={this.state.inputMsgType === '' || (this.state.inputMsgType === 'text' && this.state.inputMsgContent === '') || (this.state.inputMsgType === 'sticker' && (this.state.inputPkgId === '' || this.state.inputStkrId === ''))}>\n                <Icon name='checkmark' /> 確定\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalAutoReplyAddMsgClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'REMOVE_GROUP') {\n      return(\n        <Modal open={this.state.modalAutoReplyRemoveGroupShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='google plus' size='small' onClick={this.modalAutoReplyRemoveGroupOpen}>\n            <Icon name='trash alternate' /> 移除群組\n          </Button>\n          }>\n          <Modal.Header>移除群組</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <p>確定要刪除這個群組?</p>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='google plus' onClick={this.modalAutoReplyRemoveGroupSubmit}>\n                <Icon name='checkmark' /> 移除\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalAutoReplyRemoveGroupClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else if(modalType === 'REMOVE_KEY_MSG') {\n      return(\n        <Modal open={this.state.modalAutoReplyRemoveKeywordShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='google plus' size='small' onClick={this.modalAutoReplyRemoveKeywordOpen}>\n            <Icon name='trash alternate' /> 移除\n          </Button>\n          }>\n          <Modal.Header>移除訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <p>確定要刪除這則訊息?</p>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='google plus' onClick={this.modalAutoReplyRemoveKeywordSubmit}>\n                <Icon name='checkmark' /> 移除\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalAutoReplyRemoveKeywordClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n    \n    } else if(modalType === 'REMOVE_RPY_MSG') {\n      return(\n        <Modal open={this.state.modalAutoReplyRemoveMsgShow} trigger={\n          <Button floated='right' icon labelPosition='left' color='google plus' size='small' onClick={this.modalAutoReplyRemoveMsgOpen}>\n            <Icon name='trash alternate' /> 移除\n          </Button>\n          }>\n          <Modal.Header>移除訊息</Modal.Header>\n          <Modal.Content>\n            <Modal.Description>\n              <p>確定要刪除這則訊息?</p>\n            </Modal.Description>\n            <Modal.Actions style={{ padding: '3em' }}>\n              <Button floated='right' color='google plus' onClick={this.modalAutoReplyRemoveMsgSubmit}>\n                <Icon name='checkmark' /> 移除\n              </Button>\n              <Button floated='right' color='grey' onClick={this.modalAutoReplyRemoveMsgClose}>\n                <Icon name='remove' /> 取消\n              </Button>\n            </Modal.Actions>\n          </Modal.Content>\n        </Modal>\n      )\n\n    } else {}\n  }\n}","import React, { Component}  from 'react';\nimport { Container, Icon, Table, Divider, Header, Segment } from 'semantic-ui-react'\nimport { getAutoReply } from '../MongoDB';\nimport AutoReplyModal from './AutoReplyModal';\n\nexport default class AutoReply extends Component {\n\n  state = {\n\t\tautoReplys: []\n  }\n  \n  componentDidMount() {\n    this.queryData();\n  }\n\n  queryData = () => {\n\t\tgetAutoReply().then(data => {\n\t\t\tconsole.log(\"[AutoReply queryData]\" + JSON.stringify(data));\n\t\t\tthis.setState({\n        autoReplys: [...data]\n      });\n    });\n  }\n\n  delayQuery = () => {\n    const queryData = this.queryData;\n    setTimeout(() => {\n      queryData();\n    }, 2000);\n  }\n\n  render() {\n    const autoReplys = this.state.autoReplys;\n    const delayQuery = this.delayQuery;\n\n    return(\n      <Segment raised style={{ margin: '3em' }}>\n\t\t\t\t<Divider horizontal>\n\t\t\t\t\t<Header as='h4'>\n\t\t\t\t\t\t<Icon name='file text' />\n\t\t\t\t\t\t  自動回應訊息(隨機回應一則訊息)\n\t\t\t\t\t</Header>\n\t\t\t\t</Divider>\n\t\t\t\t{autoReplys.map(function(autoReply, index){\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Table celled key={autoReply._id}>\n\t\t\t\t\t\t\t<Table.Header>\n                <Table.Row>\n                  <Table.HeaderCell colSpan='5'>\n                    訊息群組#{index+1}\n                    <AutoReplyModal type='REMOVE_GROUP' autoReplyId={autoReply._id} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t</Table.HeaderCell>\n                </Table.Row>\n                <Table.Row>\n                  <Table.HeaderCell style={{ width: '250px' }} colSpan='4'>關鍵字</Table.HeaderCell>\n                  <Table.HeaderCell style={{ width: '250px' }}>操作</Table.HeaderCell>\n                </Table.Row>\n              </Table.Header>\n\n\t\t\t\t\t\t\t<Table.Body>\n                {autoReply.key_words.map(function(keyword, idx){\n                  return (\n                    <Table.Row key={keyword.id} >\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell colSpan='4'>{keyword.text}</Table.Cell>\n                      <Table.Cell>\n                        <AutoReplyModal type='REMOVE_KEY_MSG' autoReplyId={autoReply._id} autoReplyKeyword={keyword} callback={delayQuery}/>\n                      </Table.Cell>\n                    </Table.Row>\n                  )\n                })}\n              </Table.Body>\n\n              <Table.Header>\n\t\t\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>類別</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell style={{ width: '250px' }}>回應訊息</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>STKID</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell>STKPKGID</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell style={{ width: '250px' }}>操作</Table.HeaderCell>\n\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t</Table.Header>\n\n\t\t\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t\t\t{autoReply.response_msgs.map(function(msg, idx){\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<Table.Row key={msg.id} >\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>{msg.isText ? \"文字\" : \"貼圖\"}</Table.Cell>\n                      {msg.isText ? <Table.Cell>{msg.text}</Table.Cell> : <Table.Cell/>}\n\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell/> : <Table.Cell>{msg.stkrId}</Table.Cell>}\n\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell/> : <Table.Cell>{msg.pkgId}</Table.Cell>}\n\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>\n                        <AutoReplyModal type='REMOVE_RPY_MSG' autoReplyId={autoReply._id} autoReplyMessage={msg} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</Table.Body>\n\n\t\t\t\t\t\t\t<Table.Footer fullWidth>\n\t\t\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t\t\t<Table.HeaderCell colSpan='5'>\n                    <AutoReplyModal type='ADD_MSG' autoReplyId={autoReply._id} callback={delayQuery}/>\n                    <AutoReplyModal type='ADD_KEY' autoReplyId={autoReply._id} callback={delayQuery}/>\n\t\t\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t</Table.Footer>\n\t\t\t\t\t\t</Table>\n\t\t\t\t\t)\n        })}\n        <Container style={{ height: '30px' }}>\n          <AutoReplyModal type='ADD_GROUP' callback={delayQuery}/>\n        </Container>\n\t\t\t</Segment>\n    )\n  }\n}","import React, { Component}  from 'react';\nimport { Segment, Checkbox, Grid, Divider, Header, Icon } from 'semantic-ui-react';\nimport { getSetting, updateSetting } from './MongoDB';\n\nexport default class Setting extends Component {\n\n  state = {\n    id: '',\n    remind_birthday: false,\n    remind_routine: false,\n    auto_reply: false,\n    monday_bless: false\n  }\n  \n  componentDidMount() {\n    this.queryData();\n  }\n\n  queryData = () => {\n\t\tgetSetting().then(data => {\n\t\t\tconsole.log(\"[Setting queryData]\" + JSON.stringify(data));\n\t\t\tthis.setState({\n        id: data[0]._id,\n        remind_birthday: !!data[0].remind_birthday,\n        remind_routine: !!data[0].remind_routine,\n        auto_reply: !!data[0].auto_reply,\n        monday_bless: !!data[0].monday_bless\n      });\n    });\n  }\n  \n  toggleBirthday = () => this.setState({ remind_birthday: !this.state.remind_birthday }, this.update);\n  toggleRoutine  = () => this.setState({ remind_routine:  !this.state.remind_routine  }, this.update);\n  toggleReply    = () => this.setState({ auto_reply:      !this.state.auto_reply      }, this.update);\n  toggleBless    = () => this.setState({ monday_bless:    !this.state.monday_bless    }, this.update);\n\n  update = () => {\n    const newData = {\n      id: this.state.id,\n      remind_birthday: this.state.remind_birthday,\n      remind_routine: this.state.remind_routine,\n      auto_reply: this.state.auto_reply,\n      monday_bless: this.state.monday_bless\n    }\n\n    console.log(JSON.stringify(newData));\n\n    updateSetting(newData);\n  }\n\n\trender() {\n    const { remind_birthday, remind_routine, auto_reply, monday_bless} = this.state;\n    const toggleBirthday = this.toggleBirthday;\n    const toggleRoutine  = this.toggleRoutine;\n    const toggleReply    = this.toggleReply;\n    const toggleBless    = this.toggleBless;\n\n    return (\n\t\t\t<Segment raised style={{ margin: '3em', paddingLeft: '3em', paddingRight: '3em'}}>\n        <Divider horizontal>\n\t\t\t\t\t<Header as='h4'>\n\t\t\t\t\t\t<Icon name='setting' />\n\t\t\t\t\t\t  功能開關\n\t\t\t\t\t</Header>\n\t\t\t\t</Divider>\n        <Grid columns={1} divided>\n          <Grid.Row>\n            <Checkbox toggle label='生日提醒' checked={remind_birthday} onChange={toggleBirthday}/>\n          </Grid.Row>\n          <Grid.Row>\n            <Checkbox toggle label='分享提醒' checked={remind_routine} onChange={toggleRoutine}/>\n          </Grid.Row>\n          <Grid.Row>\n            <Checkbox toggle label='自動回應' checked={auto_reply} onChange={toggleReply}/>\n          </Grid.Row>\n          <Grid.Row>\n            <Checkbox toggle label='週一祝福' checked={monday_bless} onChange={toggleBless}/>\n          </Grid.Row>\n        </Grid>\n\t\t\t</Segment>\n    );\n  }\n\t\n}","import React, { Component } from 'react';\nimport { Container, Form, Checkbox, Button, Label } from 'semantic-ui-react';\n\nexport default class Setting extends Component {\n\n  state = {\n    account: '',\n    password: '',\n    checked: false,\n    wrongPassword: false\n  }\n\n  handleFakeClick = () => {\n    this.setState({\n      wrongPassword: true\n    });\n  }\n\n  renderLabel = () => {\n    if(this.state.wrongPassword) {\n      return(\n        <Label as='a' basic color='red'  style={{ width: '100%', marginBottom: '10px'}}>帳號或密碼錯誤</Label>\n      )\n    } \n  }\n\n  render() {\n    const handleClick = this.props.callback;\n    const handleFakeClick = this.handleFakeClick;\n    const renderLabel = this.renderLabel;\n\n    return(\n      <Container style={{ height: '100vh', width: '100vw', display: 'flex'}}>\n        <Form style={{ height: '40%', width: '20%', margin: 'auto'}}>\n          <Form.Field>\n            <label>帳號</label>\n            <input placeholder='管理員帳號' onChange={e => {this.setState({account: e.target.value});}}/>\n          </Form.Field>\n          <Form.Field>\n            <label>密碼</label>\n            <input type='password' placeholder='管理員密碼' onChange={e => {this.setState({password: e.target.value});}}/>\n          </Form.Field>\n          <Form.Field>\n            <Checkbox label='我會小心操作' checked={this.state.checked} onChange={e => {this.setState({checked: !this.state.checked});}}/>\n          </Form.Field>\n          {renderLabel()}\n          <Button onClick={handleFakeClick} primary style={{ width: '100%' }} disabled={!this.state.checked || this.state.account === '' || this.state.password === ''}>登入</Button>\n        </Form>\n        <Button onClick={handleClick} style={{ position: 'absolute', right: '0px', height: '100px', width: '100px', background: 'white' }}></Button>\n      </Container>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { LogoImage } from './style';\nimport { Grid, Menu, Header, Container } from 'semantic-ui-react'\nimport Birthday from './../Birthday';\nimport Routine from './../Routine';\nimport MondayBless from './../MondayBless/MondayBless';\nimport AutoReply from './../AutoReply/AutoReply';\nimport Setting from './../Setting';\nimport FakePage from './../FakePage';\nimport 'semantic-ui-css/semantic.min.css';\n\nclass App extends Component {\n\n  state = {\n    clickCount: 0,\n    activeItem: '生日提醒' \n  }\n\n  handleHiddenBtnClick = (e, { name }) => this.setState({ clickCount: this.state.clickCount +1 });\n\n  handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n  renderMenu = () => {\n    const { activeItem } = this.state;\n\n    return (\n      <Container>\n        <LogoImage src={logo}/>\n        <Header as='h2' style={{ 'margin': '10px', 'color': 'white' }}>Control Center</Header>\n        <Header as='h4' style={{ 'margin': '10px', 'color': 'white' }}>The Backend of Linebot.</Header>\n        <Menu fluid vertical tabular style={{ 'marginTop': '50px' }}>\n          <Menu.Item \n            name='生日提醒' \n            active={activeItem === '生日提醒'} \n            onClick={this.handleItemClick} \n          />\n          <Menu.Item \n            name='分享提醒' \n            active={activeItem === '分享提醒'} \n            onClick={this.handleItemClick}\n          />\n          <Menu.Item\n            name='自動回應'\n            active={activeItem === '自動回應'}\n            onClick={this.handleItemClick}\n          />\n          <Menu.Item\n            name='週一祝福'\n            active={activeItem === '週一祝福'}\n            onClick={this.handleItemClick}\n          />\n          <Menu.Item\n            name='功能開關'\n            active={activeItem === '功能開關'}\n            onClick={this.handleItemClick}\n          />\n        </Menu>\n      </Container>\n    )\n  }\n\n  renderChild = () => {\n    const { activeItem } = this.state;\n\n    if(activeItem === '生日提醒') {\n      return (\n        <Birthday/>\n      )\n    } else if(activeItem === '分享提醒') {\n      return (\n        <Routine/>\n      )\n    } else if(activeItem === '自動回應') {\n      return (\n        <AutoReply/>\n      )\n    } else if(activeItem === '週一祝福') {\n      return (\n        <MondayBless/>\n      )\n    } else if(activeItem === '功能開關') {\n      return (\n        <Setting/>\n      )\n    }\n  }\n\n  renderDashboard = () => {\n    const renderChild = this.renderChild;\n    const renderMenu = this.renderMenu;\n\n    return (\n      <Grid>\n        <Grid.Column width={3} style={{ background: '#4682B4', paddingRight: 0, height: '100vh' }}>\n          {renderMenu()}\n        </Grid.Column>\n        <Grid.Column stretched width={12}>\n          {renderChild()}\n        </Grid.Column>\n      </Grid>\n    );\n  }\n\n  render() {\n    const renderDashboard = this.renderDashboard;\n    const handleHiddenBtnClick = this.handleHiddenBtnClick;\n\n    if(this.state.clickCount > 10) {\n      return(\n        <Container>\n          {renderDashboard()}\n        </Container>\n      )\n    } else {\n      return(\n        <FakePage callback={handleHiddenBtnClick}/>\n      )\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}