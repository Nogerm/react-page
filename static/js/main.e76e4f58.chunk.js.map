{"version":3,"sources":["Components/App/logo.svg","Components/App/style.js","Components/MongoDB.js","Components/Birthday/Birthday.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LogoMove","keyframes","_templateObject","Container","styled","div","_templateObject2","LeftColumn","_templateObject3","RightColumn","_templateObject4","ContentText","_templateObject5","LogoImage","img","_templateObject6","API_KEY","Birthday","state","birthdayPeople","birthdayPrayers","_this2","this","Promise","resolve","reject","axios","get","BASE_URL","params","apiKey","then","response","console","log","data","catch","error","JSON","stringify","setState","Object","toConsumableArray","people","prayers","react_default","a","createElement","Container_Container","style","padding","Segment","raised","Divider","horizontal","Header","as","Icon","name","Table","celled","Row","HeaderCell","Body","map","person","index","key","Cell","firstname","birth_month","birth_day","Button","floated","icon","labelPosition","negative","size","primary","Footer","fullWidth","colSpan","prayer","msgs","msg","isText","toString","f_half","b_half","pkgId","stkrId","Component","App","src","logo","Birthday_Birthday","Boolean","window","location","hostname","match","ReactDOM","render","Components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e76e4f58.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import styled, { keyframes } from 'styled-components';\n\nconst LogoMove = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nexport const Container = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  justify-content: center;\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const LeftColumn = styled.div`\n\tflex: 2;\n\tjustify-content: center;\n\tbackground: #282c34;\n\tdisplay: flex;\n  flex-direction: column;\n`;\n\nexport const RightColumn = styled.div`\n\tflex: 5;\n\tjustify-content: center;\n\tdisplay: flex;\n  flex-direction: row;\n`;\n\nexport const ContentText = styled.p`\n\tcolor: white;\n`;\n\nexport const LogoImage = styled.img`\n\theight: 75px;\n\twidth: 75px;\n\tanimation: ${LogoMove} 20s infinite;\n`;","import axios from 'axios';\n\n//Mongo DB\nconst BASE_URL = 'https://api.mlab.com/api/1/';\nconst API_KEY = '6ibiq_TR4zPfOIaRWNvlknaHWYDpyGLQ';\nconst dbName = 'heroku_0tvjhrct';\n\n//Collections\nconst BIRTHDAY_PERSON = 'birthday_person';\nconst BIRTHDAY_PRAYER = 'birthday_prayer';\n\n//Query URLs\nconst BIRTHDAY_PERSON_URL = BASE_URL + 'databases/' + dbName + '/collections/' + BIRTHDAY_PERSON;\nconst BIRTHDAY_PRAYER_URL = BASE_URL + 'databases/' + dbName + '/collections/' + BIRTHDAY_PRAYER;\n\nexport const getBirthdayPerson = function() {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.get(BIRTHDAY_PERSON_URL, {\n\t\t\t\tparams: {\n\t\t\t\t\tapiKey: API_KEY\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[getBirthdayPerson]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[getBirthdayPerson]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n\nexport const getBirthdayPrayer = function() {\n\treturn new Promise((resolve, reject) => {\n\t\taxios.get(BIRTHDAY_PRAYER_URL, {\n\t\t\t\tparams: {\n\t\t\t\t\tapiKey: API_KEY\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(\"[getBirthdayPerson]\" + response);\n\t\t\t\tresolve(response.data);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.log(\"[getBirthdayPerson]\" + error);\n\t\t\t\treject(error);\n\t\t\t});\n\t})\n}\n","import React, { Component}  from 'react';\nimport { Button, Icon, Table, Container, Divider, Header, Segment } from 'semantic-ui-react'\nimport { getBirthdayPerson, getBirthdayPrayer } from '../MongoDB';\nimport 'semantic-ui-css/semantic.min.css';\n\nexport default class Birthday extends Component {\n\t\n\tstate = {\n\t\tbirthdayPeople: [],\n\t\tbirthdayPrayers: [],\n  }\n\n\tcomponentDidMount() {\n    getBirthdayPerson().then(data => {\n      console.log(\"[componentDidMount]\" + JSON.stringify(data));\n      this.setState({\n        birthdayPeople: [...data]\n      });\n    });\n\n  \tgetBirthdayPrayer().then(data => {\n\t\t\tconsole.log(\"[componentDidMount]\" + JSON.stringify(data));\n\t\t\tthis.setState({\n        birthdayPrayers: [...data]\n      });\n    });\n  }\n\n\trender() {\n\t\tconst people = this.state.birthdayPeople;\n\t\tconst prayers = this.state.birthdayPrayers;\n    return (\n\t\t\t<Container style={{ padding: '3em' }}>\n\t\t\t\t<Segment raised>\n\t\t\t\t\t<Divider horizontal>\n\t\t\t\t\t\t<Header as='h4'>\n\t\t\t\t\t\t\t<Icon name='user' />\n\t\t\t\t\t\t\tUsers\n\t\t\t\t\t\t</Header>\n\t\t\t\t\t</Divider>\n\t\t\t\t\t<Table celled>\n\t\t\t\t\t\t<Table.Header>\n\t\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t\t<Table.HeaderCell>Name</Table.HeaderCell>\n\t\t\t\t\t\t\t\t<Table.HeaderCell>Month</Table.HeaderCell>\n\t\t\t\t\t\t\t\t<Table.HeaderCell>Day</Table.HeaderCell>\n\t\t\t\t\t\t\t\t<Table.HeaderCell>Operation</Table.HeaderCell>\n\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t</Table.Header>\n\n\t\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t\t{people.map(function(person, index){\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Table.Row key={index} >\n\t\t\t\t\t\t\t\t\t\t<Table.Cell>{person.firstname}</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t<Table.Cell>{person.birth_month}</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t<Table.Cell>{person.birth_day}</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t<Button floated='right' icon labelPosition='left' negative size='small'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon name='trash alternate' /> Remove\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t<Button floated='right' icon labelPosition='left' primary size='small'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon name='pencil alternate' /> Edit\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Table.Body>\n\n\t\t\t\t\t\t<Table.Footer fullWidth>\n\t\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t\t<Table.HeaderCell colSpan='4'>\n\t\t\t\t\t\t\t\t\t<Button floated='right' icon labelPosition='left' primary size='small'>\n\t\t\t\t\t\t\t\t\t\t<Icon name='user plus' /> Add User\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t</Table.Footer>\n\t\t\t\t\t</Table>\n\t\t\t\t</Segment>\n\t\t\t\t<Segment raised>\n\t\t\t\t\t<Divider horizontal>\n\t\t\t\t\t\t<Header as='h4'>\n\t\t\t\t\t\t\t<Icon name='file text' />\n\t\t\t\t\t\t\tPrayers\n\t\t\t\t\t\t</Header>\n\t\t\t\t\t</Divider>\n\t\t\t\t\t{prayers.map(function(prayer, index){\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Table celled>\n\t\t\t\t\t\t\t\t<Table.Header>\n\t\t\t\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t\t\t\t<Table.HeaderCell>isText</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t\t<Table.HeaderCell>Text</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t\t<Table.HeaderCell>package Id</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t\t<Table.HeaderCell>sticker Id</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t\t<Table.HeaderCell>Operation</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t\t</Table.Header>\n\n\t\t\t\t\t\t\t\t<Table.Body>\n\t\t\t\t\t\t\t\t\t{prayer.msgs.map(function(msg, index){\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<Table.Row key={index} >\n\t\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>{msg.isText.toString()}</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell>{msg.f_half + \"[USER]\" + msg.b_half}</Table.Cell> : <Table.Cell/>}\n\t\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell/> : <Table.Cell>{msg.pkgId}</Table.Cell>}\n\t\t\t\t\t\t\t\t\t\t\t\t{msg.isText ? <Table.Cell/> : <Table.Cell>{msg.stkrId}</Table.Cell>}\n\t\t\t\t\t\t\t\t\t\t\t\t<Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button floated='right' icon labelPosition='left' negative size='small'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon name='trash alternate' /> Remove\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button floated='right' icon labelPosition='left' primary size='small'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon name='pencil alternate' /> Edit\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</Table.Cell>\n\t\t\t\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t</Table.Body>\n\n\t\t\t\t\t\t\t\t<Table.Footer fullWidth>\n\t\t\t\t\t\t\t\t\t<Table.Row>\n\t\t\t\t\t\t\t\t\t\t<Table.HeaderCell colSpan='5'>\n\t\t\t\t\t\t\t\t\t\t\t<Button floated='right' icon labelPosition='left' primary size='small'>\n\t\t\t\t\t\t\t\t\t\t\t\t<Icon name='add' /> Add Message\n\t\t\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t\t\t</Table.HeaderCell>\n\t\t\t\t\t\t\t\t\t</Table.Row>\n\t\t\t\t\t\t\t\t</Table.Footer>\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</Segment>\n\t\t\t</Container>\n    );\n  }\n\t\n\t\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { Container, LeftColumn, RightColumn, LogoImage, ContentText } from './style';\nimport Birthday from './../Birthday/Birthday';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Container>\n        <LeftColumn>\n          <LogoImage src={logo}/>\n            <ContentText>Edit <code>src/App.js</code> and save to reload.</ContentText>\n            <ContentText>Query Mongodb Data</ContentText>\n        </LeftColumn>\n        <RightColumn>\n          <Birthday/>\n        </RightColumn>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'semantic-ui-css/semantic.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}